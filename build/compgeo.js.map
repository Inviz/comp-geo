{"version":3,"file":"compgeo.js","sources":["../es6/missing-stuff/index.js","../es6/nd-linalg/Vector2.js","../es6/nd-linalg/Vector3.js","../es6/helpers/Angles.js","../es6/intersections/Intersections.js","../es6/primitives/Rectangle.js","../es6/primitives/Triangle.js","../es6/primitives/LineSegment.js","../es6/primitives/Ray.js","../es6/primitives/Line.js","../es6/skeleton/SkeletonWavefront.js","../es6/skeleton/SkeletonSplitEvent.js","../es6/skeleton/SkeletonVertex.js","../es6/skeleton/SkeletonCollapseEvent.js","../es6/datastructures/Chain.js","../es6/skeleton/SkeletonEdge.js","../es6/primitives/Curve.js","../es6/iteratorers/index.js","../es6/shapes/Path.js","../es6/helpers/Pather.js","../es6/skeleton/Skeleton.js","../es6/shapes/Shape.js","../es6/index.js"],"sourcesContent":["import Vector2 from '../nd-linalg/Vector2';\n\nconst Mathmin = Math.min,\n\tMathmax = Math.max,\n\tMathabs = Math.abs;\n\nexport const ROUGHLY_EPSILON = 1e-4;\n\nexport function clamp(min, number, max) {\n\treturn Mathmin(Mathmax(number, min), max);\n}\n\nexport function between(min, number, max) {\n\treturn min <= number && number <= max;\n}\n\nexport function withinRange(target, number, range) {\n\t$Number.between(target - range, number, target + range);\n}\n\nexport function betweenModulo(start, number, end, period) {\n\tvar numberModulo = (number % period + period) % period;\n\tvar startModulo = (start % period + period) % period;\n\tvar endModulo = (end % period + period) % period;\n\tif (start <= end) return numberModulo.between(startModulo, end === period ? period : endModulo);\n\telse return numberModulo > startModulo || numberModulo < endModulo;\n}\n\nexport function roughlyEqual(number, other, epsilon) {\n\treturn Mathabs(number - other) <= (epsilon || ROUGHLY_EPSILON);\n}\n\nexport function roughlyEqualVec2( a, b, epsilon ){\n\treturn ( Math.abs(a[0] - b[0]) <= ( epsilon || ROUGHLY_EPSILON) )\n\t\t&& ( Math.abs(a[1] - b[1]) <= ( epsilon || ROUGHLY_EPSILON) );\n}\n\nexport function assertRoughlyEqual(number, other, epsilon ) {\n\treturn assert( Mathabs(number - other) <= ( epsilon || ROUGHLY_EPSILON) );\n}\n\nexport function assertRoughlyEqualVec2(vec, other, epsilon ) {\n\treturn assert( ( Math.abs(vec[0] - other[0]) <= ( epsilon || ROUGHLY_EPSILON) )\n\t\t&& ( Math.abs(vec[1] - other[1]) <= ( epsilon || ROUGHLY_EPSILON) ) );\n}\n\nexport function roughlyBetween(min, number, max, epsilon) {\n\treturn (min < number || isRoughly( min, number, epsilon))\n\t\t&& (number < max || isRoughly( max, number, epsilon));\n}\n\nexport function assert(condition, message) {\n  if (!condition) {\n      throw message || \"Assertion failed\";\n  }\n}\n\nexport function mapPush( map, key, value ){\n\treturn map.set( key, value );\n}\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw message || \"Assertion failed\";\n  }\n}\n\nfunction isRoughly( a, b, epsilon ){\n\treturn Math.abs( a-b ) <= ( epsilon || ROUGHLY_EPSILON );\n}","import { clamp } from '../missing-stuff';\n\nvar Vector2 = function (x, y) {\n\treturn Vector2.fromValues(x, y);\n};\nrequire(\"./Vector\").create(2, Vector2);\n\nlet properties = {\n\t\"crossz\": \t                    {value: crossz},\n\t\"cross\": \t                    {value: cross},\n\t\"perpendicular\":                {value: perpendicular},\n\t\"scalePerpendicularAndAdd\":     {value: scalePerpendicularAndAdd},\n\t\"angleBetween\": \t\t\t\t{value: angleBetween},\n\t\"angleBetweenWithDirections\": \t{value: angleBetweenWithDirections},\n\t\"rotate\":                \t\t{value: rotate}\n}\n\nObject.defineProperties(Vector2, properties);\n// module.exports = Vector2;\nexport default Vector2\n\nfunction crossz(a, b) {\n\treturn a[0] * b[1] - b[0] * a[1];\n}\n\nfunction cross(output, a, b) {\n\toutput[0] = 0;\n\toutput[1] = 1;\n\toutput[2] = crossz(a, b);\n\treturn output;\n}\n\nfunction perpendicular(output, a) {\n\toutput[0] = a[1];\n\toutput[1] = -a[0];\n\treturn output;\n}\n\nfunction scalePerpendicularAndAdd(output, a, b, scale) {\n\toutput[0] = a[0] + b[1] * scale;\n\toutput[1] = a[1] - b[0] * scale;\n\treturn output;\n}\n\nfunction angleBetween(a, b) {\n\tvar theta = Vector2.dot(a, b) / (Vector2.len(a) * Vector2.len(b));\n\treturn Math.acos(clamp( theta,-1, 1) );\n}\n\nfunction angleBetweenWithDirections(a, aDirection, b) {\n\tvar simpleAngle = angleBetween(a, b);\n\tvar linearDirection = Vector2.sub(Vector2.fromValues(0, 0), b, a);\n\n\tif (Vector2.dot(aDirection, linearDirection) >= 0) {\n\t\treturn simpleAngle;\n\t} else {\n\t\treturn 2 * Math.PI - simpleAngle;\n\t}\n}\n\nfunction rotate(out, v, angle) {\n//\tslow version:\n//\treturn Matrix2x2.map(out, Matrix2x2.rotation(angle), v);\n\n\tvar x = v[0], y = v[1],\n\t\tc = Math.cos(angle),\n\t\ts = Math.sin(angle);\n\n\tout[0] = c * x - s * y;\n\tout[1] = s * x + c * y;\n\treturn out;\n}","var Vector3 = function (x, y, z) {\n\treturn Vector3.fromValues(x, y, z);\n};\n\nrequire(\"./Vector\").create(3, Vector3);\nObject.defineProperties(Vector3, {\n\t\"cross\": \t{value: cross}\n});\nexport default Vector3\n\nfunction cross(output, a, b) {\n\tvar ax = a[0], ay = a[1], az = a[2],\n\t\tbx = b[0], by = b[1], bz = a[2];\n\n\toutput[0] = ay * bz - az * by;\n\toutput[1] = az * bx - ax * bz;\n\toutput[2] = ax * by - ay * bx;\n\treturn output;\n}\n","import vec2 from '../nd-linalg/Vector2';\r\n\r\nexport {theta, angleFrom};\r\n\r\nfunction theta(v) {\r\n\tvar angle = Math.atan2(v[1], v[0]);\r\n\treturn (angle < 0 ? angle + (2 * Math.PI) : angle) / (2 * Math.PI);\r\n}\r\n\r\nfunction angleFrom(p, center) {\r\n\treturn theta(vec2.sub(vec2(0, 0), p, center));\r\n}","import { assert } from '../missing-stuff';\r\nimport {theta as AngleTheta} from '../helpers/Angles';\r\nimport vec2 from '../nd-linalg/Vector2';\r\nimport {clamp, between, roughlyEqual, roughlyEqualVec2, ROUGHLY_EPSILON} from '../missing-stuff';\r\n\r\nexport default intersect;\r\n\r\nfunction Intersection(x, y, u, v) {\r\n\tthis.p = vec2.fromValues(x, y);\r\n\tthis.u = u;\r\n\tthis.v = v;\r\n}\r\n\r\nObject.defineProperties(Intersection.prototype,\t{\r\n\t\"isDegenerate\": \t{get: function() { return this.uIsDegenerate || this.vIsDegenerate; }},\r\n\t\"uIsDegenerate\": \t{get: function() { return roughlyEqual(this.u, 0) || roughlyEqual(this.u, 1); }},\r\n\t\"vIsDegenerate\": \t{get: function() { return roughlyEqual(this.v, 0) || roughlyEqual(this.v, 1); }},\r\n\r\n\t\"boundingBox\": \t\t{get: boundingBox},\r\n\t\"draw\": \t\t\t{value: draw}\r\n});\r\n\r\nfunction boundingBox() {\r\n\treturn Rectangle.corner(this.p, this.p);\r\n}\r\n\r\nfunction draw(context) {\r\n\tcontext.dot(this.p);\r\n}\r\n\r\nfunction tidydown(number) {\r\n\t// if the number is < 0 but > -EPSILON then make it 0\r\n\tif (number < 0 && number > -ROUGHLY_EPSILON)\r\n\t\treturn 0;\r\n\treturn number;\r\n}\r\n\r\nfunction tidyup(number) {\r\n\t// if the number is > 1 but < 1 + EPSILON then make it 1\r\n\tif (number > 1 && number < (1 + ROUGHLY_EPSILON))\r\n\t\treturn 1;\r\n\treturn number;\r\n}\r\n\r\nconst THICKNESS = 0.03;\r\nexport {THICKNESS};\r\n\r\nfunction pointToLineDistance(point, start, direction) {\r\n\tlet perpendicularDirection = vec2.perpendicular(vec2(0, 0), direction);\r\n\treturn Math.abs(vec2.dot(vec2.sub(vec2(0, 0), point, start), perpendicularDirection));\r\n}\r\n\r\n// http://stackoverflow.com/questions/2931573/determining-if-two-rays-intersect\r\nfunction rayRayIntersections(a, b) {\r\n\tvar det = b.direction[0] * a.direction[1] - b.direction[1] * a.direction[0];\r\n\r\n\t// Parallel, overlap or no intersection\r\n\tif (roughlyEqual(det, 0)) {\r\n\t\t// edge case: same start position\r\n\t\tif (roughlyEqualVec2(a.start, b.start, THICKNESS))\r\n\t\t\treturn [new Intersection(a.start[0], a.start[1], 0, 0)];\r\n\r\n\t\t// not facing the same direction\r\n\t\tif (!roughlyEqualVec2(a.direction, b.direction)) return [];\r\n\r\n\t\t// too far apart\r\n\t\tif (pointToLineDistance(a.start, b.start, b.direction) > THICKNESS) return [];\r\n\r\n\t\t// a contains b or b contains a depending on the\r\n\t\t// direction from a.start to b.start\r\n\t\tvar bToA = vec2(0, 0);\r\n\t\tvec2.sub(bToA, b.start, a.start);\r\n\t\tvec2.normalize(bToA, bToA);\r\n\t\tif (roughlyEqualVec2(a.direction, bToA))\r\n\t\t\treturn [new Intersection(b.start[0], b.start[1], 0, 0)];\r\n\t\telse\r\n\t\t\treturn [new Intersection(a.start[0], a.start[1], 0, 0)];\r\n\t}\r\n\r\n\tvar dx = b.start[0] - a.start[0];\r\n\tvar dy = b.start[1] - a.start[1];\r\n\tvar u = (dy * b.direction[0] - dx * b.direction[1]) / det;\r\n\tvar v = (dy * a.direction[0] - dx * a.direction[1]) / det;\r\n\r\n\t// No intersection\r\n\tif (u < -THICKNESS || v < -THICKNESS)\r\n\t\treturn [];\r\n\r\n\tif (u < 0 && u > -THICKNESS) u = 0;\r\n\tif (v < 0 && v > -THICKNESS) v = 0;\r\n\r\n\treturn [new Intersection(a.start[0] + u * a.direction[0], a.start[1] + u * a.direction[1], u, v)];\r\n}\r\n\r\nfunction lineLineIntersections(a, b) {\r\n\tvar det = b.direction[0] * a.direction[1] - b.direction[1] * a.direction[0];\r\n\r\n\t// Parallel, overlap or no intersection\r\n\tif (roughlyEqual(det, 0)) {\r\n\t\t// edge case: same start position\r\n\t\tif (roughlyEqualVec2(a.middle, b.middle, THICKNESS))\r\n\t\t\treturn [new Intersection(a.middle[0], a.middle[1], 0, 0)];\r\n\r\n\t\t// too far apart\r\n\t\tif (pointToLineDistance(a.middle, b.middle, b.direction) > THICKNESS) return [];\r\n\r\n\t\t// a contains b or b contains a depending on the\r\n\t\t// direction from a.middle to b.middle\r\n\t\tvar c = vec2(0, 0);\r\n\t\tvec2.sub(c, b.middle, a.middle);\r\n\t\tvec2.normalize(c, c);\r\n\t\tif (roughlyEqualVec2(a.direction, c))\r\n\t\t\treturn [new Intersection(b.middle[0], b.middle[1], 0, 0)];\r\n\t\telse\r\n\t\t\treturn [new Intersection(a.middle[0], a.middle[1], 0, 0)];\r\n\t}\r\n\r\n\tvar dx = b.middle[0] - a.middle[0];\r\n\tvar dy = b.middle[1] - a.middle[1];\r\n\tvar u = (dy * b.direction[0] - dx * b.direction[1]) / det;\r\n\tvar v = (dy * a.direction[0] - dx * a.direction[1]) / det;\r\n\r\n\treturn [new Intersection(a.middle[0] + u * a.direction[0], a.middle[1] + u * a.direction[1], u, v)];\r\n}\r\n\r\nfunction lineRayIntersections(a, b) { return swapuv(rayLineIntersections(b, a)); }\r\nfunction rayLineIntersections(a, b) {\r\n\tvar det = b.direction[0] * a.direction[1] - b.direction[1] * a.direction[0];\r\n\r\n\t// Parallel, overlap or no intersection\r\n\tif (roughlyEqual(det, 0)) {\r\n\t\t// edge case: same start position\r\n\t\tif (roughlyEqualVec2(a.start, b.middle, THICKNESS))\r\n\t\t\treturn [new Intersection(a.start[0], a.start[1], 0, 0)];\r\n\r\n\t\t// too far apart\r\n\t\tif (pointToLineDistance(a.start, b.middle, b.direction) > THICKNESS) return [];\r\n\r\n\t\t// a contains b or b contains a depending on the\r\n\t\t// direction from a.start to b.middle\r\n\t\tvar c = vec2(0, 0);\r\n\t\tvec2.sub(c, b.middle, a.start);\r\n\t\tvec2.normalize(c, c);\r\n\t\tif (roughlyEqualVec2(a.direction, c))\r\n\t\t\treturn [new Intersection(b.middle[0], b.middle[1], 0, 0)];\r\n\t\telse\r\n\t\t\treturn [new Intersection(a.start[0], a.start[1], 0, 0)];\r\n\t}\r\n\r\n\tvar dx = b.middle[0] - a.start[0];\r\n\tvar dy = b.middle[1] - a.start[1];\r\n\tvar u = (dy * b.direction[0] - dx * b.direction[1]) / det;\r\n\tvar v = (dy * a.direction[0] - dx * a.direction[1]) / det;\r\n\r\n\t// No intersection\r\n\tif (u < -THICKNESS)\r\n\t\treturn [];\r\n\r\n\tif (u < 0 && u > -THICKNESS) u = 0;\r\n\r\n\treturn [new Intersection(a.start[0] + u * a.direction[0], a.start[1] + u * a.direction[1], u, v)];\r\n}\r\n\r\nfunction lineSegmentRayIntersections(line, ray) { return swapuv(rayLineSegmentIntersections(ray, line)); }\r\nfunction rayLineSegmentIntersections(ray, line) {\r\n\tvar potentials = rayRayIntersections(ray, line),\r\n\t\tlineLength = line.length,\r\n\t\tintersects = [];\r\n\tfor (let potential of potentials) {\r\n\t\tif (potential.v <= lineLength + THICKNESS) {\r\n\t\t\tpotential.v /= lineLength;\r\n\t\t\tpotential.v = Math.min(potential.v, 1);\r\n\t\t\tintersects.push(potential);\r\n\t\t}\r\n\t}\r\n\treturn intersects;\r\n}\r\n\r\nfunction lineSegmentLineSegmentIntersections(a, b) {\r\n\tvar da = vec2.sub(vec2(0, 0), a.end, a.start);\r\n\tvar db = vec2.sub(vec2(0, 0), b.end, b.start);\r\n\tvar na = vec2.normalize(vec2(0, 0), da);\r\n\tvar nb = vec2.normalize(vec2(0, 0), db);\r\n\tvar orientation = vec2.crossz(na, nb);\r\n\r\n\t// Parallel - overlapping or no intersection\r\n\tif (roughlyEqual(orientation, 0)) {\r\n\t\t// too far apart\r\n\t\tif (pointToLineDistance(a.start, b.start, b.direction) > THICKNESS) return [];\r\n\r\n\t\t// edge case: both lines have zero length\r\n\t\tif (roughlyEqual(a.length, 0) && roughlyEqual(b.length, 0))\r\n\t\t\treturn [];\r\n\r\n\t\t// sort the positions by either the x-coordinate, or y-coordinate if they\r\n\t\t// share the same x-coordinate. If they share the same x and y coordinates\r\n\t\t// then the shared point test later will pick it up.\r\n\t\t// this will leave the sorted array as:\r\n\t\t//     [outside, inside, inside, outside]\r\n\t\t//     [n/a, shared, shared, n/a]\r\n\t\t//     [n/a, shared, inside, outside]\r\n\t\t//     [outside, inside, shared, n/a]\r\n\t\t// or for the case where there is no intersection\r\n\t\t//     [outside, outside, outside, outside]\r\n\t\tvar sorted = [\r\n\t\t\t{id: 0, position: a.start},\r\n\t\t\t{id: 1, position: a.end},\r\n\t\t\t{id: 2, position: b.start},\r\n\t\t\t{id: 3, position: b.end}\r\n\t\t];\r\n\t\tif (roughlyEqual(a.start[0], a.end[0], THICKNESS) && roughlyEqual(b.start[0], b.end[0], THICKNESS)) {\r\n\t\t\tsorted.sort(function(q, r) { return q.position[1] > r.position[1]; });\r\n\t\t} else {\r\n\t\t\tsorted.sort(function(q, r) { return q.position[0] > r.position[0]; });\r\n\t\t}\r\n\r\n\t\t// Shared point in the center\r\n\t\tif (roughlyEqualVec2(sorted[1].position, sorted[2].position, THICKNESS)) {\r\n\t\t\tvar position = sorted[1].position;\r\n\t\t\treturn [new Intersection(\r\n\t\t\t\tposition[0],\r\n\t\t\t\tposition[1],\r\n\t\t\t\ta.getAlphaValueAtPosition(position),\r\n\t\t\t\tb.getAlphaValueAtPosition(position))];\r\n\t\t}\r\n\r\n\t\t// Check if the first two points in the sorted set are (a.start, a.end), or (b.start, b.end)\r\n\t\t// indicating that the two lines do not overlap\r\n\t\tvar order = sorted[0].id + sorted[1].id;\r\n\t\tif (order == 1 || order == 5)\r\n\t\t\treturn [];\r\n\r\n\t\tvar position1 = sorted[1].position,\r\n\t\t\tposition2 = sorted[2].position,\r\n\t\t\tu1 = a.getAlphaValueAtPosition(position1),\r\n\t\t\tv1 = b.getAlphaValueAtPosition(position1),\r\n\t\t\tu2 = a.getAlphaValueAtPosition(position2),\r\n\t\t\tv2 = b.getAlphaValueAtPosition(position2);\r\n\r\n\t\treturn [\r\n\t\t\tnew Intersection(position1[0], position1[1], u1, v1),\r\n\t\t\tnew Intersection(position2[0], position2[1], u2, v2)\r\n\t\t];\r\n\t}\r\n\r\n\tvar determinant = vec2.crossz(db, da);\r\n\tvar u = ((db[0] * (b.start[1] - a.start[1])) - (db[1] * (b.start[0] - a.start[0]))) / determinant;\r\n\tvar v = ((da[0] * (b.start[1] - a.start[1])) - (da[1] * (b.start[0] - a.start[0]))) / determinant;\r\n\t//u = tidydown(tidyup(u));\r\n\t//v = tidydown(tidyup(v));\r\n\r\n\t// No intersection\r\n\t// TODO: for flat angles this approximation is stupid\r\n\t// u might be much further away from 0 than -Thickness,\r\n\t// even when lines are just thickness apart\r\n\tconst uTolerance = THICKNESS / vec2.len(da);\r\n\tconst vTolerance = THICKNESS / vec2.len(db);\r\n\tif (!between(-uTolerance, u, 1 + uTolerance)) return [];\r\n\tif (!between(-vTolerance, v, 1 + vTolerance)) return [];\r\n\r\n\tu = clamp(0, u, 1);\r\n\tv = clamp(0, v, 1);\r\n\r\n\tvar p = vec2(0, 0);\r\n\tvec2.lerp(p, a.start, a.end, u);\r\n\treturn [new Intersection(p[0], p[1], u, v)];\r\n}\r\n\r\nfunction circleLineSegmentIntersections(circle, line) { return swapuv(lineSegmentCircleIntersections(line, circle)) }\r\nfunction lineSegmentCircleIntersections(line, circle) {\r\n\tvar dp = vec2(0, 0);\r\n\tvec2.sub(dp, line.end, line.start);\r\n\tvar a = vec2.squaredLength(dp);\r\n\tvar b = 2 * (dp[0] * (line.start[0] - circle.center[0]) + dp[1] * (line.start[1] - circle.center[1]));\r\n\tvar c = vec2.squaredLength(circle.center);\r\n\tc += vec2.squaredLength(line.start);\r\n\tc -= 2 * (circle.center[0] * line.start[0] + circle.center[1] * line.start[1]);\r\n\tvar cCenter = c - circle.radius * circle.radius;\r\n\tvar cInner = c - (circle.radius * circle.radius - THICKNESS * THICKNESS);\r\n\tvar cOuter = c - (circle.radius * circle.radius + THICKNESS * THICKNESS);\r\n\tvar bb4acCenter = b * b - 4 * a * cCenter;\r\n\tvar bb4acInner = b * b - 4 * a * cInner;\r\n\tvar bb4acOuter = b * b - 4 * a * cOuter;\r\n\r\n\t// No intersection\r\n\tif (Math.abs(a) <= ROUGHLY_EPSILON || (bb4acCenter < 0 && bb4acInner < 0 && bb4acOuter < 0))\r\n\t\treturn [];\r\n\r\n\tvar s1Center = (-b + Math.sqrt(bb4acCenter)) / (2 * a);\r\n\tvar s2Center = (-b - Math.sqrt(bb4acCenter)) / (2 * a);\r\n\tvar s1Inner = (-b + Math.sqrt(bb4acInner)) / (2 * a);\r\n\tvar s2Inner = (-b - Math.sqrt(bb4acInner)) / (2 * a);\r\n\tvar s1Outer = (-b + Math.sqrt(bb4acOuter)) / (2 * a);\r\n\tvar s2Outer = (-b - Math.sqrt(bb4acOuter)) / (2 * a);\r\n\r\n\tvar s1 = between(0, s1Center, 1) ? s1Center : between(0, s1Outer, 1) ? s1Outer : s1Inner;\r\n\tvar s2 = between(0, s2Center, 1) ? s2Center : between(0, s2Outer, 1) ? s2Outer : s2Inner;\r\n\r\n\tvar solution1exists = between(0, s1, 1);\r\n\tvar solution2exists = !roughlyEqual(s1, s2) && between(0, s2, 1);\r\n\tvar solution1, solution2;\r\n\tvar p = vec2(0, 0);\r\n\r\n\t// Solution 1\r\n\tif (solution1exists) {\r\n\t\tsolution1 = new Intersection(line.start[0] + s1 * dp[0], line.start[1] + s1 * dp[1], s1, null);\r\n\t\tvec2.sub(p, solution1.p, circle.center);\r\n\t\tsolution1.v = AngleTheta(p);\r\n\t\tif (!solution2exists)\r\n\t\t\treturn [solution1];\r\n\t} else {\r\n\t\tif (!solution2exists)\r\n\t\t\treturn [];\r\n\t}\r\n\r\n\t// Solution 2\r\n\tif (solution2exists) {\r\n\t\tsolution2 = new Intersection(line.start[0] + s2 * dp[0], line.start[1] + s2 * dp[1], s2, null);\r\n\t\tvec2.sub(p, solution2.p, circle.center);\r\n\t\tsolution2.v = AngleTheta(p);\r\n\t\tif (!solution1exists)\r\n\t\t\treturn [solution2];\r\n\t}\r\n\r\n\treturn [solution1, solution2];\r\n}\r\n\r\nfunction curveLineSegmentIntersections(curve, line) { return swapuv(lineSegmentCurveIntersections(line, curve)) }\r\nfunction lineSegmentCurveIntersections(line, curve) {\r\n\t//throw \"No!!\"\r\n\tvar potentials = lineSegmentCircleIntersections(line, curve);\r\n\tvar intersections = [];\r\n\tfor (var i = 0; i < potentials.length; i++) {\r\n\t\tvar intersection = potentials[i];\r\n\t\tif (curve.wedgeContainsPoint(intersection.p, THICKNESS)) {\r\n\t\t\tintersection.v = curve.getAlphaValueAtPosition(intersection.p);\r\n\t\t\tintersection.u = clamp(0, intersection.u, 1);\r\n\t\t\tintersection.v = clamp(0, intersection.v, 1);\r\n\t\t\tintersections.push(intersection);\r\n\t\t}\r\n\t}\r\n\treturn intersections;\r\n}\r\n\r\nfunction circleCircleIntersections(a, b) {\r\n\tvar c0 = a.center;\r\n\tvar c1 = b.center;\r\n\tvar r0 = a.radius;\r\n\tvar r1 = b.radius;\r\n\tvar d = vec2.dist(c0, c1);\r\n\r\n\t// No solution, circles are the same\r\n\tif (d == 0 && r0 == r1)\r\n\t\treturn [];\r\n\r\n\t// No solution, circles do not intersect\r\n\tif (d > (r0 + r1))\r\n\t\treturn [];\r\n\r\n\t// No solution, one circle inside the other\r\n\tif (d < Math.abs(r0 - r1))\r\n\t\treturn [];\r\n\r\n\t// Determine the distance from center c0 to centroid\r\n\tvar c = (r0 * r0 - r1 * r1 + d * d) / (2 * d);\r\n\r\n\t// Determine the distance from centroid to either intersection point\r\n\tvar h = Math.sqrt(r0 * r0 - c * c);\r\n\r\n\t// Determine position of centroid\r\n\tvar dx = c1[0] - c0[0];\r\n\tvar dy = c1[1] - c0[1];\r\n\tvar cx = c0[0] + (dx * c / d);\r\n\tvar cy = c0[1] + (dy * c / d);\r\n\r\n\t// Determine the offset vector from the centroid to the intersection points\r\n\tvar rx = -dy * h / d;\r\n\tvar ry = dx * h / d;\r\n\r\n\t\"Solution 1\"\r\n\tvar p = vec2(0, 0);\r\n\tvar solution1 = new Intersection(cx + rx, cy + ry, 0, 0);\r\n\tvec2.sub(p, solution1.p, c0);\r\n\tsolution1.u = AngleTheta(p);\r\n\tvec2.sub(p, solution1.p, c1);\r\n\tsolution1.v = AngleTheta(p);\r\n\r\n\tif (roughlyEqual(h, 0))\r\n\t\treturn [solution1];\r\n\r\n\t\"Solution 2\"\r\n\tvar solution2 = new Intersection(cx - rx, cy - ry, 0, 0);\r\n\tvec2.sub(p, solution2.p, c0);\r\n\tsolution2.u = AngleTheta(p);\r\n\tvec2.sub(p, solution2.p, c1);\r\n\tsolution2.v = AngleTheta(p);\r\n\treturn [solution1, solution2];\r\n}\r\n\r\nfunction curveCurveIntersections(a, b) {\r\n\tvar intersections = [];\r\n\r\n\tif (roughlyEqualVec2(a.center, b.center, THICKNESS)\r\n\t\t&& roughlyEqual(a.radius, b.radius, THICKNESS)) {\r\n\t\tif (a.wedgeContainsPoint(b.start, THICKNESS))\r\n\t\t\tintersections.push(\r\n\t\t\t\tnew Intersection(b.start[0], b.start[1], a.getAlphaValueAtPosition(b.start), 0));\r\n\r\n\t\tif (a.wedgeContainsPoint(b.end, THICKNESS))\r\n\t\t\tintersections.push(\r\n\t\t\t\tnew Intersection(b.end[0], b.end[1], a.getAlphaValueAtPosition(b.end), 1));\r\n\r\n\t\tif (intersections.length == 2)\r\n\t\t\treturn intersections;\r\n\r\n\t\tif (b.wedgeContainsPoint(a.start, THICKNESS))\r\n\t\t\tintersections.push(\r\n\t\t\t\tnew Intersection(a.start[0], a.start[1], 0, b.getAlphaValueAtPosition(a.start)));\r\n\r\n\t\tif (intersections.length == 2)\r\n\t\t\treturn intersections;\r\n\r\n\t\tif (b.wedgeContainsPoint(a.end, THICKNESS))\r\n\t\t\tintersections.push(\r\n\t\t\t\tnew Intersection(a.end[0], a.end[1], 1, b.getAlphaValueAtPosition(a.end)));\r\n\r\n\t\treturn intersections;\r\n\t}\r\n\r\n\tvar potentials = circleCircleIntersections(a, b);\r\n\tfor (var i = 0; i < potentials.length; i++) {\r\n\t\tvar intersection = potentials[i];\r\n\t\t//console.log(\"curve-curve potential\", intersection);\r\n\t\tif (a.wedgeContainsPoint(intersection.p, THICKNESS) &&\r\n\t\t\tb.wedgeContainsPoint(intersection.p, THICKNESS)) {\r\n\t\t\tintersection.u = a.getAlphaValueAtPosition(intersection.p);\r\n\t\t\tintersection.v = b.getAlphaValueAtPosition(intersection.p);\r\n\t\t\tintersections.push(intersection);\r\n\t\t}\r\n\t}\r\n\treturn intersections;\r\n}\r\n\r\nfunction swapuv(intersections) {\r\n\tfor (var i = 0; i < intersections.length; i++) {\r\n\t\tvar intersection = intersections[i],\r\n\t\t\tu = intersection.u,\r\n\t\t\tv = intersection.v;\r\n\t\tintersection.u = v;\r\n\t\tintersection.v = u;\r\n\t}\r\n\treturn intersections;\r\n}\r\n\r\nfunction notYetImplemented(a, b) {\r\n\tthrow \"Intersection combination not yet implemented\";\r\n}\r\n\r\n// RAY = 1 and 2\r\n// LINE_SEGMENT = 4 and 8\r\n// CIRCLE = 16 and 32\r\n// CURVE = 64 and 128\r\n//\r\n// RAY(1) + RAY(2) = 3\r\n// RAY(1) + LINE_SEGMENT(4) = 5\r\n// LINE_SEGMENT(4) + RAY(2) = 6\r\n// LINE_SEGMENT(4) + LINE_SEGMENT(8) = 12\r\n// LINE_SEGMENT(4) + CIRCLE(16) = 20\r\n// CIRCLE(16) + LINE_SEGMENT(8) = 24\r\n// CIRCLE(16) + CIRCLE(32) = 48\r\n// etc\r\nvar intersections = [];\r\nfunction intersectionTypeLookup(a, b) { return a + 2 * b }\r\nfunction intersectionTypeInstall(a, b, f) {\r\n\tvar type = intersectionTypeLookup(a, b);\r\n\tassert(intersections[type] == null);\r\n\tintersections[type] = f;\r\n}\r\n\r\nvar RAY = 1;\r\nvar LINE = 4;\r\nvar LINE_SEGMENT = 16;\r\nvar CIRCLE = 64;\r\nvar CURVE = 256;\r\nintersectionTypeInstall(RAY         , RAY         , rayRayIntersections);\r\nintersectionTypeInstall(RAY         , LINE        , rayLineIntersections);\r\nintersectionTypeInstall(RAY         , LINE_SEGMENT, rayLineSegmentIntersections);\r\nintersectionTypeInstall(LINE        , LINE        , lineLineIntersections);\r\nintersectionTypeInstall(LINE        , RAY         , lineRayIntersections);\r\nintersectionTypeInstall(LINE_SEGMENT, RAY         , lineSegmentRayIntersections);\r\nintersectionTypeInstall(LINE_SEGMENT, LINE_SEGMENT, lineSegmentLineSegmentIntersections);\r\nintersectionTypeInstall(LINE_SEGMENT, CIRCLE      , lineSegmentCircleIntersections);\r\nintersectionTypeInstall(LINE_SEGMENT, CURVE       , lineSegmentCurveIntersections);\r\nintersectionTypeInstall(CIRCLE      , LINE_SEGMENT, circleLineSegmentIntersections);\r\nintersectionTypeInstall(CIRCLE      , CIRCLE      , circleCircleIntersections);\r\nintersectionTypeInstall(CURVE       , LINE_SEGMENT, curveLineSegmentIntersections);\r\nintersectionTypeInstall(CURVE       , CURVE       , curveCurveIntersections);\r\n\r\nfunction intersect(a, b) {\r\n\t// I know what you're thinking. I've thought the same thing\r\n\t// quite a few times myself. You're here because of an exception\r\n\t// or perhaps you're just reading the code. If you're just\r\n\t// reading the code then you're thinking this is an odd kind of\r\n\t// comment to stumble upon. If you're here because of an\r\n\t// exception you're thinking gee I wish there was a catch here\r\n\t// to make sure 'a' and 'b' are actually geometric objects that\r\n\t// we can measure the intersection between. You must resist the\r\n\t// temptation to add such a test because intersect() is called\r\n\t// all over the place, constantly and in many tight loops. Your\r\n\t// real issue is somewhere else up in the stack. Go look there,\r\n\t// not here. Here you will find no answers, only pain and\r\n\t// suffering and darkness and all that other stuff the Jedi\r\n\t// want you to believe about the dark side that clearly isn't\r\n\t// true. The dark side just wants us to be ourselves, to feel\r\n\t// our emotions and learn to be responsible with it. It's that\r\n\t// Lucas fellow and his strange 'light side' and 'dark side'\r\n\t// biases that have fooled so much of the world in to believing\r\n\t// that the dark side only leads to gibbering power hungry\r\n\t// idiots with no self control and that somehow living a life\r\n\t// without love, with attachments, is the ultimate way to be\r\n\t// in touch with the force. I've digressed. The point is, you\r\n\t// don't want to look here, your issue is elsewhere.\r\n\tvar type = intersectionTypeLookup(a.type(), b.type());\r\n\treturn intersections[type](a, b);\r\n};\r\n\r\nintersect.RayTypeFunction = function() { return RAY; }\r\nintersect.RayTypeFunction.typeName = \"ray\";\r\nintersect.LineTypeFunction = function() { return LINE; }\r\nintersect.RayTypeFunction.typeName = \"line\";\r\nintersect.LineSegmentTypeFunction = function() { return LINE_SEGMENT; }\r\nintersect.LineSegmentTypeFunction.typeName = \"lineSegment\";\r\nintersect.CircleTypeFunction = function() { return CIRCLE; }\r\nintersect.CircleTypeFunction.typeName = \"circle\";\r\nintersect.CurveTypeFunction = function() { return CURVE; }\r\nintersect.CurveTypeFunction.typeName = \"curve\";\r\n","import vec2 from '../nd-linalg/Vector2';\r\n\r\nexport default Rectangle;\r\n\r\nexport {\r\n\tnewRectangleCorner as corner,\r\n\tnewRectangleExtent as extent,\r\n\tnewRectanglePoint as point,\r\n\tnewRectangleMinMax as minmax,\r\n\tnewRectangleZero as zero\r\n};\r\n\r\nfunction Rectangle(top, right, bottom, left) {\r\n\tthis.top = top;\r\n\tthis.bottom = bottom;\r\n\tthis.left = left;\r\n\tthis.right = right;\r\n}\r\n\r\nfunction newRectangleCorner(origin, corner) {\r\n\treturn new Rectangle(origin[1], corner[0], corner[1], origin[0]);\r\n}\r\n\r\nfunction newRectangleExtent(origin, extent) {\r\n\treturn new Rectangle(\r\n\t\torigin[1],\r\n\t\torigin[0] + extent[0],\r\n\t\torigin[1] + extent[1],\r\n\t\torigin[0]);\r\n}\r\n\r\nfunction newRectanglePoint(position) {\r\n\treturn newRectangleCorner(position, position);\r\n}\r\n\r\nfunction newRectangleMinMax() {\r\n\treturn new Rectangle(Infinity, -Infinity, -Infinity, Infinity);\r\n}\r\n\r\nfunction newRectangleZero() {\r\n\treturn new Rectangle(0, 0, 0, 0);\r\n}\r\n\r\nObject.defineProperties(Rectangle.prototype, {\r\n\t\"name\": \t\t\t{value: \"Rectangle\"},\r\n\t\"width\": \t\t\t{enumerable: true, get: getWidth, set: setWidth},\r\n\t\"height\": \t\t\t{enumerable: true, get: getHeight, set: setHeight},\r\n\t\"center\": \t\t\t{get: center},\r\n\t\"origin\": \t\t\t{get: getOrigin, set: setOrigin},\r\n\t\"extent\": \t\t\t{get: getExtent, set: setExtent},\r\n\t\"corner\": \t\t\t{get: getCorner, set: setCorner},\r\n\t\"boundingBox\": \t\t{get: boundingBox},\r\n\r\n\t\"containsPoint\": \t{value: containsPoint},\r\n\t\"scale\": \t\t\t{value: scale},\r\n\t\"translate\": \t\t{value: translate},\r\n\t\"expand\": \t\t\t{value: expand},\r\n\r\n\t\"draw\": \t\t\t{value: draw}\r\n});\r\n\r\nfunction getWidth() {\r\n\treturn this.right - this.left;\r\n}\r\n\r\nfunction setWidth(value) {\r\n\tthis.right = this.left + value;\r\n}\r\n\r\nfunction getHeight() {\r\n\treturn this.bottom - this.top;\r\n}\r\n\r\nfunction setHeight(value) {\r\n\tthis.bottom = this.top + value;\r\n}\r\n\r\nfunction center() {\r\n\tvar center = vec2(0, 0);\r\n\tvec2.lerp(center, this.origin, this.corner, 0.5);\r\n\treturn center;\r\n}\r\n\r\nfunction getOrigin() {\r\n\treturn vec2.fromValues(this.left, this.top);\r\n}\r\n\r\nfunction setOrigin(v) {\r\n\tthis.left = v[0];\r\n\tthis.top = v[1];\r\n}\r\n\r\nfunction getExtent() {\r\n\treturn vec2.fromValues(this.width, this.height);\r\n}\r\n\r\nfunction setExtent(v) {\r\n\tthis.width = v[0];\r\n\tthis.height = v[1];\r\n}\r\n\r\nfunction getCorner() {\r\n\treturn vec2.fromValues(this.right, this.bottom);\r\n}\r\n\r\nfunction setCorner(v) {\r\n\tthis.right = v[0];\r\n\tthis.bottom = v[1];\r\n}\r\n\r\nfunction boundingBox() {\r\n\treturn this;\r\n}\r\n\r\nfunction containsPoint(p) {\r\n\treturn this.left <= p[0] && p[0] < this.right && this.top <= p[1] && p[1] < this.bottom;\r\n}\r\n\r\nfunction scale(scalar) {\r\n\treturn new Rectangle(\r\n\t\tthis.top * scalar,\r\n\t\tthis.right * scalar,\r\n\t\tthis.bottom * scalar,\r\n\t\tthis.left * scalar);\r\n}\r\n\r\nfunction translate(offset) {\r\n\treturn new Rectangle(\r\n\t\tthis.top + offset[1],\r\n\t\tthis.right + offset[0],\r\n\t\tthis.bottom + offset[1],\r\n\t\tthis.left + offset[0]);\r\n}\r\n\r\nfunction expand(rectangle) {\r\n\treturn new Rectangle(\r\n\t\tMath.min(this.top, rectangle.top),\r\n\t\tMath.max(this.right, rectangle.right),\r\n\t\tMath.max(this.bottom, rectangle.bottom),\r\n\t\tMath.min(this.left, rectangle.left));\r\n}\r\n\r\nfunction draw(context) {\r\n\tcontext.stroke(this);\r\n}\r\n","import { roughlyEqual } from '../missing-stuff';\r\n\r\nexport default class Triangle {\r\n\tconstructor(a, b, c) {\r\n\t\tthis.a = a;\r\n\t\tthis.b = b;\r\n\t\tthis.c = c;\r\n\t}\r\n\r\n\tget isColinear() { return colinear(this.a, this.b, this.c); }\r\n\tget center() { return center(this.a, this.b, this.c); }\r\n}\r\n\r\nexport function colinear(a, b, c) {\r\n\tconst m = (c[0] - a[0]) * (b[1] - a[1]);\r\n\tconst n = ((b[0] - a[0]) * (c[1] - a[1]));\r\n\treturn roughlyEqual( n, m );\r\n}\r\n\r\nexport function center(a, b, c) {\r\n\treturn [(a[0] + b[0] + c[0]) / 3,\r\n\t\t\t(a[1] + b[1] + c[1]) / 3];\r\n}\r\n","import intersect from '../intersections/Intersections';\r\nimport vec2 from '../nd-linalg/Vector2';\r\nimport {corner as RectangleCorner} from './Rectangle';\r\nimport * as Triangle from './Triangle';\r\nimport { roughlyEqual, roughlyBetween } from '../missing-stuff';\r\n// import { colinear } from triangle;\r\n\r\nexport default LineSegment;\r\n\r\nfunction LineSegment(start, end) {\r\n\tthis.start = start;\r\n\tthis.end = end;\r\n\tthis.direction = vec2.sub(vec2(0, 0), this.end, this.start);\r\n\tthis.length = vec2.len(this.direction);\r\n\tvec2.normalize(this.direction, this.direction);\r\n}\r\n\r\nfunction createProjection(start, direction, length) {\r\n\tvar end = vec2.scale(vec2(0, 0), direction, length || 1);\r\n\tvec2.add(end, start, end);\r\n\treturn new LineSegment(start, end);\r\n}\r\n\r\nLineSegment.project = createProjection;\r\n\r\nObject.defineProperties(LineSegment.prototype, {\r\n\t\"name\": \t\t\t\t\t\t{value: \"LineSegment\"},\r\n\t\"type\": \t\t\t\t\t\t{value: intersect.LineSegmentTypeFunction},\r\n\t\"isRay\": \t\t\t\t\t\t{value: false},\r\n\t\"isLineSegment\": \t\t\t\t{value: true},\r\n\t\"isCurve\": \t\t\t\t\t\t{value: false},\r\n\t\"isCircle\": \t\t\t\t\t{value: false},\r\n\r\n\t\"midpoint\": \t\t\t\t\t{get: midpoint},\r\n\t\"boundingBox\": \t\t\t\t\t{get: boundingBox},\r\n\t\"endDirection\": \t\t\t\t{get: endDirection},\r\n\r\n\t\"subdivide\": \t\t\t\t\t{value: subdivide},\r\n\t\"reverse\": \t\t\t\t\t\t{value: reverse},\r\n\t\"scale\": \t\t\t\t\t\t{value: scale},\r\n\t\"translate\": \t\t\t\t\t{value: translate},\r\n\t\"offsetPerpendicular\": \t\t\t{value: offsetPerpendicular},\r\n\r\n\t\"offsetPerpendicularLength\":\t{value: offsetPerpendicularLength},\r\n\t\"mapPerpendicular\": \t\t\t{value: mapPerpendicular},\r\n\r\n\t\"containsPoint\": \t\t\t\t{value: containsPoint},\r\n\t\"roughlyContainsPoint\": \t\t{value: roughlyContainsPoint},\r\n\t\"getAlphaValueAtPosition\":\t\t{value: getAlphaValueAtPosition},\r\n\t\"offsetOf\": \t\t\t\t\t{value: offsetOf},\r\n\t\"closestPointTo\": \t\t\t\t{value: closestPointTo},\r\n\t\"positionOf\": \t\t\t\t\t{value: positionOf},\r\n\t\"directionOf\": \t\t\t\t\t{value: directionOf},\r\n\r\n\t\"vertices\": \t\t\t\t\t{value: vertices},\r\n\t\"uvs\": \t\t\t\t\t\t\t{value: uvs},\r\n\t\"draw\": \t\t\t\t\t\t{value: draw}\r\n});\r\n\r\nfunction midpoint() {\r\n\tvar midpoint = vec2(0, 0);\r\n\tvec2.lerp(midpoint, this.start, this.end, 0.5);\r\n\treturn midpoint;\r\n}\r\n\r\nvar min = Math.min,\r\n\tmax = Math.max;\r\nfunction boundingBox() {\r\n\tvar origin = vec2.clone(this.start);\r\n\tvar corner = vec2.clone(this.start);\r\n\torigin[0] = min(origin[0], this.end[0]);\r\n\torigin[1] = min(origin[1], this.end[1]);\r\n\tcorner[0] = max(corner[0], this.end[0]);\r\n\tcorner[1] = max(corner[1], this.end[1]);\r\n\treturn RectangleCorner(origin, corner);\r\n}\r\n\r\nfunction endDirection() {\r\n\treturn this.direction;\r\n}\r\n\r\nfunction subdivide(p) {\r\n\treturn [new LineSegment(this.start, p), new LineSegment(p, this.end)];\r\n}\r\n\r\nfunction reverse() {\r\n\treturn new LineSegment(this.end, this.start);\r\n}\r\n\r\nfunction scale(scalar) {\r\n\tvar start = vec2.clone(this.start),\r\n\t\tend = vec2.clone(this.end);\r\n\tvec2.scale(start, start, scalar);\r\n\tvec2.scale(end, end, scalar);\r\n\treturn new LineSegment(start, end);\r\n}\r\n\r\nfunction translate(offset) {\r\n\tvar start = vec2.clone(this.start),\r\n\t\tend = vec2.clone(this.end);\r\n\tvec2.add(start, start, offset);\r\n\tvec2.add(end, end, offset);\r\n\treturn new LineSegment(start, end);\r\n}\r\n\r\nfunction containsPoint(point) {\r\n\tlet perpendicularDirection = vec2.perpendicular(vec2(0, 0), direction);\r\n\tlet startToPoint = vec2.sub(vec2(0, 0), start, p);\r\n\tlet distance = Math.abs(vec2.dot(startToPoint, perpendicularDirection));\r\n\tlet u = vec2.dot(startToPoint, this.direction);\r\n\treturn distance < Intersections.THICKNESS && u > -THICKNESS && u < this.length + THICKNESS;\r\n\r\n}\r\n\r\nfunction roughlyContainsPoint(p) {\r\n\t// http://stackoverflow.com/questions/328107/how-can-you-determine-a-point-is-between-two-other-points-on-a-line-segment\r\n\tlet start = this.start, end = this.end;\r\n\treturn Triangle.colinear(start, p, end)\r\n\t\t&& ((roughlyEqual(start[0], p[0]) || roughlyEqual(end[0], p[0]))\r\n\t\t\t? roughlyBetween( start[1], p[1], end[1]) || roughlyBetween( end[1], p[1], start[1])\r\n\t\t\t: roughlyBetween( start[0], p[0], end[0]) || roughlyBetween( end[0], p[0], start[0]));\r\n}\r\n\r\n\r\nfunction getAlphaValueAtPosition(p) {\r\n\treturn vec2.dist(this.start, p) / this.length;\r\n}\r\n\r\nfunction directionOf(p) {\r\n\treturn this.direction;\r\n}\r\n\r\nfunction offsetOf(p) {\r\n\treturn vec2.dot(this.direction, vec2.sub(vec2(0, 0), p, this.start));\r\n}\r\n\r\nfunction closestPointTo(p) {\r\n\tvar offset = this.offsetOf(p);\r\n\r\n\tif (offset < 0)\r\n\t\treturn this.start;\r\n\tif (offset > this.length)\r\n\t\treturn this.end;\r\n\r\n\treturn vec2.scaleAndAdd(vec2(0, 0), this.start, this.direction, offset);\r\n}\r\n\r\nfunction positionOf(offset) {\r\n\treturn vec2.scaleAndAdd(vec2(0, 0), this.start, this.direction, offset);\r\n}\r\n\r\nfunction offsetPerpendicular(offsetToRight) {\r\n\treturn new LineSegment(\r\n\t\tvec2.scalePerpendicularAndAdd(vec2(0, 0), this.start, this.direction, offsetToRight),\r\n\t\tvec2.scalePerpendicularAndAdd(vec2(0, 0), this.end, this.direction, offsetToRight)\r\n\t);\r\n}\r\n\r\nfunction offsetPerpendicularLength(offsetToRight) {\r\n\treturn this.length;\r\n}\r\n\r\nfunction mapPerpendicular(offsetA, offsetToRightA, offsetToRightB) {\r\n\treturn offsetA;\r\n}\r\n\r\nfunction vertices(offsetToRight) {\r\n\toffsetToRight = offsetToRight || 0;\r\n\tvar start = offsetToRight\r\n\t\t? vec2.scalePerpendicularAndAdd(vec2(0, 0), this.start, this.direction, offsetToRight)\r\n\t\t: this.start;\r\n\tvar end = offsetToRight\r\n\t\t? vec2.scalePerpendicularAndAdd(vec2(0, 0), this.end, this.direction, offsetToRight)\r\n\t\t: this.end;\r\n\treturn [start, end];\r\n}\r\n\r\nfunction uvs(offsetToRight, multiplierAlongPath) {\r\n\tvar startUV = vec2.fromValues(0, offsetToRight);\r\n\tvar endUV = vec2.fromValues(this.length * multiplierAlongPath, offsetToRight);\r\n\treturn [startUV, endUV];\r\n}\r\n\r\nfunction draw(context) {\r\n\tcontext.stroke(this);\r\n}\r\n","import Intersections from '../intersections/Intersections';\r\nimport vec2 from '../nd-linalg/Vector2';\r\n\r\nexport default Ray;\r\n\r\nfunction Ray(start, direction) {\r\n\tthis.start = start;\r\n\tthis.direction = direction;\r\n}\r\n\r\nObject.defineProperties(Ray.prototype, {\r\n\t\"name\": \t\t{value: \"Ray\"},\r\n\t\"type\": \t\t{value: Intersections.RayTypeFunction},\r\n\t\"isRay\": \t\t{value: true},\r\n\t\"isLineSegment\": \t\t{value: false},\r\n\t\"isCurve\": \t\t{value: false},\r\n\t\"isCircle\": \t{value: false},\r\n\r\n\t\"length\": \t\t{value: Number.infinity},\r\n\t\"end\": \t\t\t{value: vec2.fromValues(Number.infinity, Number.infinity)},\r\n\t\"midpoint\": \t{value: Number.infinity},\r\n\r\n\t\"subdivide\": \t{value: subdivide},\r\n\t\"reverse\": \t\t{value: reverse},\r\n\t\"scale\": \t\t{value: scale},\r\n\t\"translate\": \t{value: translate},\r\n\r\n\t\"draw\": \t\t{value: draw},\r\n\t\"boundingBox\": \t{get: boundingBox}\r\n});\r\n\r\nfunction subdivide(p) {\r\n\treturn [new LineSegment(this.start, p), new Ray(p, this.direction)];\r\n}\r\n\r\nfunction reverse() {\r\n\treturn new Ray(this.start, vec2.negate(vec2(0, 0), this.direction));\r\n}\r\n\r\nfunction scale(scalar) {\r\n\tvar start = vec2.clone(this.start);\r\n\tvec2.scale(start, start, scalar);\r\n\treturn new Ray(start, this.direction);\r\n}\r\n\r\nfunction translate(offset) {\r\n\tvar start = vec2.clone(this.start);\r\n\tvec2.add(start, start, offset);\r\n\treturn new Ray(start, this.direction);\r\n}\r\n\r\nfunction boundingBox() {\r\n\treturn Rectangle.point(this.start);\r\n}\r\n\r\nfunction draw(context) {\r\n\tcontext.arrow(this.start, this.direction);\r\n}\r\n","import Intersections from '../intersections/Intersections';\r\nimport vec2 from '../nd-linalg/Vector2';\r\n\r\nexport default Line;\r\n\r\nfunction Line(rayOrMiddle, direction) {\r\n\tif (rayOrMiddle.type === Intersections.RayTypeFunction) {\r\n\t\tthis.middle = rayOrMiddle.start;\r\n\t\tthis.direction = rayOrMiddle.direction;\r\n\t\treturn this;\r\n\t}\r\n\tthis.middle = rayOrMiddle; // LOL!\r\n\tthis.direction = direction;\r\n}\r\n\r\nObject.defineProperties(Line.prototype, {\r\n\t\"name\": \t\t{value: \"Line\"},\r\n\t\"type\": \t\t{value: Intersections.LineTypeFunction},\r\n\t\"isRay\": \t\t{value: true},\r\n\t\"isLineSegment\":{value: false},\r\n\t\"isCurve\": \t\t{value: false},\r\n\t\"isCircle\": \t{value: false},\r\n\r\n\t\"length\": \t\t{value: Number.infinity},\r\n\t\"start\": \t\t{value: vec2.fromValues(Number.infinity, Number.infinity)},\r\n\t\"end\": \t\t\t{value: vec2.fromValues(Number.infinity, Number.infinity)},\r\n\t\"midpoint\": \t{value: midpoint}, // ALSO LOL!\r\n\t\"boundingBox\": \t{get: boundingBox}, // TROLLOLOLOL\r\n\r\n\t\"subdivide\": \t{value: subdivide},\r\n\t\"reverse\": \t\t{value: reverse},\r\n\t\"scale\": \t\t{value: scale},\r\n\t\"translate\": \t{value: translate},\r\n\r\n\t\"draw\": \t\t{value: draw}\r\n});\r\n\r\nfunction midpoint() {\r\n\treturn this.middle;\r\n}\r\n\r\nfunction subdivide(p) {\r\n\tthrow \"Cannot subdivide a bidirection ray\";\r\n}\r\n\r\nfunction reverse() {\r\n\treturn this;\r\n}\r\n\r\nfunction scale(scalar) {\r\n\tthrow \"Cannot scale a bidirectional ray\";\r\n}\r\n\r\nfunction translate(offset) {\r\n\tvar middle = vec2.clone(this.middle);\r\n\tvec2.add(middle, middle, offset);\r\n\treturn new Line(middle, this.direction);\r\n}\r\n\r\nfunction boundingBox() {\r\n\treturn Rectangle.point(this.middle);\r\n}\r\n\r\nfunction draw(context) {\r\n\tcontext.arrow(this.middle, this.direction, 0.5);\r\n\tcontext.arrow(this.middle, vec2.scale(vec2(0, 0), this.direction, -1), 0.5);\r\n}\r\n","import { roughlyEqual } from '../missing-stuff';\r\n\r\nconst TIME_EPSILON = 1e-8;\r\nvar max = Math.max;\r\nvar infinity = Infinity;\r\nvar weakmap = WeakMap;\r\n\r\nvar id = 0;\r\nexport default class SkeletonWavefront {\r\n\tconstructor(processor, root, time) {\r\n\t\tthis.id = id++;\r\n\t\tthis.processor = processor;\r\n\t\tthis.root = root;\r\n\t\tthis.time = time;\r\n\r\n\t\t// take ownership of edges and compute length\r\n\t\tvar length = 0;\r\n\t\tfor (let edge of root) {\r\n\t\t\tlength++;\r\n\t\t\tedge.wavefront = this;\r\n\t\t}\r\n\t\tthis.length = length;\r\n\t}\r\n\r\n\tinitialise() {\r\n\t\t// compute initial edge direction\r\n\t\tlet edge = this.root;\r\n\t\twhile(true) {\r\n\t\t\tedge.computeDirection();\r\n\t\t\tedge = edge.next;\r\n\t\t\tif (edge === this.root) break;\r\n\t\t}\r\n\r\n\t\t// compute initial vertex direction and speed\r\n\t\twhile(true) {\r\n\t\t\tedge.start.computeDirectionAndSpeed();\r\n\t\t\tedge = edge.next;\r\n\t\t\tif (edge === this.root) break;\r\n\t\t}\r\n\r\n\t\t// compute initial collapse events\r\n\t\twhile(true) {\r\n\t\t\tedge.computeCollapseEvent();\r\n\t\t\tedge = edge.next;\r\n\t\t\tif (edge === this.root) break;\r\n\t\t}\r\n\r\n\t\t// compute initial cut/split events\r\n\t\twhile(true) {\r\n\t\t\tedge.computeSplitEvents();\r\n\t\t\tedge = edge.next;\r\n\t\t\tif (edge === this.root) break;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tprocess(maximum) {\r\n\t\tlet events = [];\r\n\t\twhile(true) {\r\n\t\t\t// compute events\r\n\t\t\tvar nextEvents = this.nextEvents();\r\n\r\n\t\t\t// shortcut if we're done processing\r\n\t\t\tif (nextEvents.events.length === 0 || nextEvents.time > maximum) {\r\n\t\t\t\tthis.move(maximum);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// filter events\r\n\t\t\tfor (let i = 0; i < nextEvents.events.length; i++) {\r\n\t\t\t\tlet event = nextEvents.events[i];\r\n\t\t\t\tif (!event.isValid())\r\n\t\t\t\t\tevent.remove();\r\n\t\t\t\telse\r\n\t\t\t\t\tevents.push(event);\r\n\t\t\t}\r\n\t\t\tif (events.length > 0)\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tevents = [];\r\n\t\t}\r\n\r\n\t\t// process events\r\n\t\tthis.move(nextEvents.time);\r\n\t\tfor (let i = 0; i < nextEvents.events.length; i++) {\r\n\t\t\tlet event = nextEvents.events[i];\r\n\t\t\tevent.isValid() && event.process();\r\n\t\t\tevent.remove();\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tdebugprocess(maximum) {\r\n\t\tconsole.group(\"step\");\r\n\t\tDrawing2D.log(\"before\", this);\r\n\r\n\t\tlet events;\r\n\t\tlet depth = 0;\r\n\t\twhile(true) {\r\n\t\t\tdepth++;\r\n\t\t\tif (depth == 100) debugger;\r\n\r\n\t\t\t// compute events\r\n\t\t\tvar nextEvents = this.nextEvents();\r\n\r\n\t\t\t// shortcut if we're done processing\r\n\t\t\tif (nextEvents.events.length === 0 || nextEvents.time > maximum) {\r\n\t\t\t\tthis.move(maximum);\r\n\t\t\t\tDrawing2D.log(\"after move\", this);\r\n\t\t\t\tconsole.groupEnd(\"step\");\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// filter events\r\n\t\t\tevents = [];\r\n\t\t\tfor (let i = 0; i < nextEvents.events.length; i++) {\r\n\t\t\t\tlet event = nextEvents.events[i];\r\n\t\t\t\tif (!event.isValid()) {\r\n\t\t\t\t\tconsole.log(\"removing\", event.description());\r\n\t\t\t\t\tevent.remove();\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\tevents.push(event);\r\n\t\t\t}\r\n\t\t\tif (events.length > 0)\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\t// process events\r\n\t\tthis.move(nextEvents.time);\r\n\t\tDrawing2D.log(\"after move\", this);\r\n\t\tfor (let event of events) {\r\n\t\t\tif (event.isValid()) {\r\n\t\t\t\tconsole.log(event.description());\r\n\t\t\t\tevent.process();\r\n\t\t\t\tthis.processor.wavefronts.length > 0 && Drawing2D.log(\"after event\", this.processor.wavefronts.concat([{colour: \"#F0F\", visuals: this.processor.spokes}]));\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"late removal of\", event.description());\r\n\t\t\t}\r\n\t\t\tevent.remove();\r\n\t\t}\r\n\r\n\t\tconsole.groupEnd(\"step\");\r\n\t\treturn true;\r\n\t}\r\n\r\n\tremove() {\r\n\t\tthis.length = 0;\r\n\t\tfor (let edge of this.root)\r\n\t\t\tedge.wavefront = null;\r\n\t\tthis.root = null;\r\n\t\tthis.processor.removeWavefront(this);\r\n\t}\r\n\r\n\tnextEvents() {\r\n\t\tvar events = [],\r\n\t\t\ttime = infinity,\r\n\t\t\tmaxtime = -infinity;\r\n\r\n\t\tvar wavefront = this;\r\n\t\tfunction testEvent(event) {\r\n\t\t\tlet eventTime = event.time;\r\n\t\t\tif (eventTime < wavefront.time)\r\n\t\t\t\tthrow \"Time machine?\";\r\n\t\t\tif (eventTime < time) {\r\n\t\t\t\t//console.log(\"testing\", event.description(), \"<\", time);\r\n\t\t\t\tlet old = events;\r\n\t\t\t\tevents = [event];\r\n\t\t\t\tmaxtime = time = eventTime;\r\n\t\t\t\tfor (let i = 0; i < old.length; i++)\r\n\t\t\t\t\ttestEvent(old[i]);\r\n\t\t\t} else if (eventTime < infinity && roughlyEqual(eventTime, time, TIME_EPSILON)) {\r\n\t\t\t\t//console.log(\"testing\", event.description(), \"<\", \"~\" + time);\r\n\t\t\t\tevents.push(event);\r\n\t\t\t\tmaxtime = max(maxtime, eventTime);\r\n\t\t\t} else {\r\n\t\t\t\t//console.log(\"testing\", event.description(), \"skipped\");\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tlet edge = this.root;\r\n\t\twhile(true) {\r\n\t\t\ttestEvent(edge.collapseEvent);\r\n\t\t\tlet vertexEvents = edge.start.events;\r\n\t\t\tfor (let i = 0; i < vertexEvents.length; i++)\r\n\t\t\t\ttestEvent(vertexEvents[i]);\r\n\r\n\t\t\tedge = edge.next;\r\n\t\t\tif (edge === this.root) break;\r\n\t\t}\r\n\r\n\t\tif (time === infinity)\r\n\t\t\tmaxtime = infinity;\r\n\r\n\t\tevents.sort((a, b) => b - a);\r\n\t\treturn {\"time\": maxtime, \"events\": events};\r\n\t}\r\n\r\n\tmove(time) {\r\n\t\tlet delta = time - this.time;\r\n\t\tlet edge = this.root;\r\n\t\twhile(true) {\r\n\t\t\tedge.start.move(delta);\r\n\t\t\tedge = edge.next;\r\n\t\t\tif (edge === this.root) break;\r\n\t\t}\r\n\t\tthis.time = time;\r\n\t}\r\n\r\n\ttoPath() {\r\n\t\tvar pather = new Pather();\r\n\t\tpather.moveTo(vec2.clone(this.root.start.position));\r\n\t\tfor (let edge of this.root)\r\n\t\t\tpather.lineTo(vec2.clone(edge.end.position));\r\n\t\treturn pather.path;\r\n\t}\r\n\r\n\tdraw(context) {\r\n\t\tif (!this.root) return;\r\n\t\tvar dimmer = context.clone();\r\n\t\tdimmer.alpha = 0.2;\r\n\t\tfor (let edge of this.root) {\r\n\t\t\tedge.draw(context);\r\n\t\t\t//LineSegment.project(edge.start.position, edge.start.direction, edge.start.speed / 10).draw(dimmer);\r\n\t\t\tnew Ray(edge.segment.midpoint, edge.direction).draw(dimmer);\r\n\t\t}\r\n\t}\r\n}\r\n","import Ray from '../primitives/Ray';\r\nimport Line from '../primitives/Line';\r\nimport intersect from '../intersections/Intersections';\r\nimport vec2 from '../nd-linalg/Vector2';\r\nimport vec3 from '../nd-linalg/Vector3';\r\nimport { roughlyEqual } from '../missing-stuff';\r\nimport * as SkeletonEdge from './SkeletonEdge';\r\nimport SkeletonWavefront from './SkeletonWavefront';\r\n\r\nvar id = 0;\r\nvar infinity = Infinity;\r\nvar ROUGHLY_EPSILON = Number.ROUGHLY_EPSILON;\r\nexport default class SkeletonSplitEvent {\r\n\tconstructor(edge, vertex) {\r\n\t\tthis.id = id++;\r\n\t\tthis.edge = edge;\r\n\t\tthis.vertex = vertex;\r\n\r\n//\t\tif (this.edge.isSelfIntersectionCap)\r\n//\t\t\treturn this.time = infinity;\r\n\r\n\t\tlet intersections = intersect(vertex.projection, edge.line);\r\n\t\tif (intersections.length == 0)\r\n\t\t\treturn this.time = infinity;\r\n\r\n\t\t// Find the bisector(s)\r\n\t\tlet projectionToEdgePosition = intersections[0].p;\r\n\t\tintersections = intersect(edge.line, vertex.previousEdge.line);\r\n\t\tif (intersections.length == 0) {\r\n\t\t\t// the two edges are parallel to each other, find the midpoint between them for the bisector\r\n\t\t\tlet midpoint = vec2.lerp(vec2(0, 0), edge.start.position, vertex.previousEdge.start.position, 0.5);\r\n\t\t\tvar bisector = new Line(midpoint, vertex.previousEdge.lineDirection);\r\n\t\t} else {\r\n\t\t\tlet edgeToEdgePosition = intersections[0].p,\r\n\t\t\t\tdir1 = vec2.sub(vec2(0, 0), vertex.position, edgeToEdgePosition),\r\n\t\t\t\tdir2 = vec2.sub(vec2(0, 0), projectionToEdgePosition, edgeToEdgePosition);\r\n\r\n\t\t\tvec2.normalize(dir1, dir1);\r\n\t\t\tvec2.normalize(dir2, dir2);\r\n\t\t\tlet direction = vec2.add(vec2(0, 0), dir1, dir2);\r\n\t\t\tvec2.normalize(direction, direction);\r\n\t\t\tvar bisector = new Ray(edgeToEdgePosition, direction);\r\n\t\t}\r\n\r\n\t\t// Find the point of split\r\n\t\tintersections = intersect(vertex.projection, bisector);\r\n\t\tif (intersections.length === 0)\r\n\t\t\treturn this.time = infinity;\r\n\r\n\t\t// How far from the vertex to the bisector\r\n\t\tlet length = edge.lengthAt(intersections[0].p);\r\n\t\tif (length < 0 || length === infinity)\r\n\t\t\treturn this.time = infinity;\r\n\r\n\t\tthis.time = length + this.edge.wavefront.time;\r\n\t\t//Drawing2D.log(\"created \" + this.description(), [this.edge.wavefront, this, {colour: \"pink\", legend: \"bisector\", visuals: [bisector]}]);\r\n\t}\r\n\r\n\tname() {\r\n\t\tif (!this.edge.wavefront || this.edge.wavefront != this.vertex.wavefront)\r\n\t\t\treturn \"Split(dead)\";\r\n\t\tlet projected = this.edge.projectBy(this.time - this.edge.wavefront.time),\r\n\t\t\tposition = this.vertex.projectBy(this.time - this.edge.wavefront.time);\r\n\t\tlet distance1 = vec2.dist(this.edge.start.position, this.vertex.position),\r\n\t\t\tdistance2 = vec2.dist(this.edge.end.position, this.vertex.position);\r\n\t\tif (roughlyEqual(distance1, 0))\r\n\t\t\treturn \"Cut.start\";\r\n\t\tif (roughlyEqual(distance2, 0))\r\n\t\t\treturn \"Cut.end\";\r\n\t\telse\r\n\t\t\treturn \"Split\";\r\n\t}\r\n\r\n\tisValid() {\r\n\t\t// The event must be on an existing wavefront and both the edge and vertex must also be on the same wavefront\r\n\t\tif (!this.edge.wavefront || this.edge.wavefront != this.vertex.wavefront)\r\n\t\t\treturn false;\r\n\r\n\t\t// No events are allowed to happen immediately, that would require a self-intersecting source shape and that is not allowed for this algorithm. The only other way this can happen is with an open-path and no events should happen at instance-zero then either\r\n\t\tif (this.time === 0)\r\n\t\t\treturn false;\r\n\r\n\t\t// No split or cut can happen with < 4 edges\r\n\t\tif (this.edge.wavefront.length < 4)\r\n\t\t\treturn false;\r\n\r\n\t\t// Is the vertex still acute?\r\n\t\tif (this.vertex.isAcute)\r\n\t\t\treturn false;\r\n\r\n\t\t// Is the event time infinite?\r\n\t\tif (this.time === infinity)\r\n\t\t\treturn false;\r\n\r\n\t\t// Is the event actually happening?\r\n\t\tlet futureEdge = this.edge.projectBy(this.time - this.edge.wavefront.time),\r\n\t\t\tfutureVertex = this.vertex.projectBy(this.time - this.edge.wavefront.time);\r\n\t\treturn futureEdge.roughlyContainsPoint(futureVertex);\r\n\t}\r\n\r\n\tremove() {\r\n\t\tconst _this = this;\r\n\t\tthis.vertex.events = this.vertex.events.filter( function( ele ){\r\n\t\t\treturn ele !== _this;\r\n\t\t});\r\n\t\t// this.vertex.events = this.vertex.events.without(this);\r\n\t}\r\n\r\n\tdescription() {\r\n\t\treturn `${this.name()}:${this.id} edge ${this.edge.id} from between ${this.vertex.previousEdge.id} and ${this.vertex.nextEdge.id} at ${this.time}`;\r\n\t}\r\n\r\n\tprocess() {\r\n\t\tlet distance1 = vec2.dist(this.edge.start.position, this.vertex.position);\r\n\t\tif (roughlyEqual(distance1, 0))\r\n\t\t\treturn cut(this.edge.start, this.vertex);\r\n\r\n\t\tlet distance2 = vec2.dist(this.edge.end.position, this.vertex.position);\r\n\t\tif (roughlyEqual(distance2, 0))\r\n\t\t\treturn cut(this.edge.end, this.vertex);\r\n\r\n\t\t// The vertex.position was roughly contained within the edge, but not close\r\n\t\t// enough to have a roughly close distance to either end and when we test\r\n\t\t// if it's really contained and it is not, then it must still be treated as\r\n\t\t// a cut\r\n\t\tif (!this.edge.segment.boundingBox.containsPoint(this.vertex.position))\r\n\t\t\treturn distance1 < distance2\r\n\t\t\t\t ? cut(this.edge.start, this.vertex)\r\n\t\t\t\t : cut(this.edge.end, this.vertex);\r\n\r\n\t\treturn split(this.edge, this.vertex);\r\n\t}\r\n\r\n\tdraw(context) {\r\n\t\tcontext.style = \"#F00\";\r\n\t\tcontext.legend(\"this.edge\");\r\n\t\tthis.edge.draw(context);\r\n\r\n\t\tcontext.style = \"#F66\";\r\n\t\tcontext.legend(\"this.edge - future\");\r\n\t\tthis.edge.projectBy(this.time - this.edge.wavefront.time).draw(context);\r\n\r\n\t\tcontext.style = \"#00F\";\r\n\t\tcontext.legend(\"this.vertex\");\r\n\t\tthis.vertex.previousEdge.draw(context);\r\n\t\tthis.vertex.nextEdge.draw(context);\r\n\r\n\t\tcontext.style = \"#66F\";\r\n\t\tcontext.legend(\"this.vertex - future\");\r\n\t\tthis.vertex.previousEdge.projectBy(this.time - this.edge.wavefront.time).draw(context);\r\n\t\tthis.vertex.nextEdge.projectBy(this.time - this.edge.wavefront.time).draw(context);\r\n\r\n\t\tcontext.style = \"rgba(0, 0, 255, 0.25)\";\r\n\t\tcontext.legend(\"this.vertex - projection\");\r\n\t\tthis.vertex.projection.draw(context);\r\n\r\n\t\tcontext.style = \"#300\";\r\n\t\tcontext.legend(\"intersection\");\r\n\t\tcontext.dot(this.vertex.projectBy(this.time - this.edge.wavefront.time));\r\n\t}\r\n}\r\n\r\nfunction join(previous, next, length) {\r\n\t// find the point at which these two edges connect and 'extend' or 'contract' the edges until they meet to preserve the direction of both edges\r\n\tlet intersections = intersect(previous.line, next.line),\r\n\t\tmoved = intersections.length > 0;\r\n\tif (moved) {\r\n\t\tnext.start.position = intersections[0].p;\r\n\t\tnext.wavefront.processor.commitSkeletonVertex(next.start);\r\n\t}\r\n\r\n\t// connect the edges\r\n\tSkeletonEdge.connect([previous, next]);\r\n\r\n\t// did we twist an edge trying to do this, if so, try again skipping the twisted edge\r\n\tif (moved) {\r\n\t\tlet twist1 = intersect(previous.previous.segment, next.segment);\r\n\t\tif (twist1.length > 0 && !twist1[0].isDegenerate)\r\n\t\t\treturn join(previous.previous, next, length + 1);\r\n\t\tlet twist2 = intersect(previous.segment, next.next.segment);\r\n\t\tif (twist2.length > 0 && !twist2[0].isDegenerate)\r\n\t\t\treturn join(previous, next.next, length + 1);\r\n\t}\r\n\r\n\t// compute direction and speed\r\n\tnext.start.computeDirectionAndSpeed();\r\n\r\n\t// compute collapse events\r\n\tprevious.computeCollapseEvent();\r\n\tnext.computeCollapseEvent();\r\n\r\n\t// compute split events\r\n\tnext.start.computeSplitEvents();\r\n\r\n\treturn [previous, next, length];\r\n}\r\n\r\nfunction cut(edgeVertex, cutVertex) {\r\n\tif (edgeVertex === cutVertex)\r\n\t\treturn false;\r\n\r\n\tedgeVertex.wavefront.processor.commitSkeletonVertex(edgeVertex);\r\n\tcutVertex.wavefront.processor.commitSkeletonVertex(cutVertex);\r\n\r\n\tlet wavefront0 = edgeVertex.wavefront,\r\n\t\twavefront1 = null,\r\n\t\tprevious0 = edgeVertex.previousEdge,\r\n\t\tprevious1 = cutVertex.previousEdge,\r\n\t\tnext0 = cutVertex.nextEdge,\r\n\t\tnext1 = edgeVertex.nextEdge,\r\n\t\tlength0 = 0,\r\n\t\tlength1 = 0;\r\n\r\n\t[previous0, next0, length0] = join(previous0, next0, length0);\r\n\t[previous1, next1, length1] = join(previous1, next1, length1);\r\n\r\n\t// create the new wavefront\r\n\twavefront0.root = previous0;\r\n\twavefront1 = new SkeletonWavefront(\r\n\t\twavefront0.processor,\r\n\t\tprevious1,\r\n\t\twavefront0.time);\r\n\twavefront0.length -= wavefront1.length + length0 + length1;\r\n\r\n\t//SkeletonEdge.isBroken(previous0);\r\n\t//SkeletonEdge.isBroken(previous1);\r\n\r\n\t// it's possible at this point that one of the two wavefronts\r\n\t// has < 3 vertices. If that's the case, we might as well\r\n\t// delete it now and add its spokes, otherwise make sure the\r\n\t// two wavefronts exist in the processor\r\n\tfunction endit(wavefront) {\r\n\t\twavefront.processor.commitSkeletonVertex(wavefront.root.start);\r\n\t\twavefront.processor.commitSkeletonVertex(wavefront.root.end);\r\n\t\twavefront.processor.commitSkeletonSpoke(\r\n\t\t\tvec3(wavefront.root.start.position[0], wavefront.root.start.position[1], wavefront.time),\r\n\t\t\tvec3(wavefront.root.end.position[0], wavefront.root.end.position[1], wavefront.time));\r\n\t}\r\n\tif (wavefront0.length < 3) {\r\n\t\tendit(wavefront0);\r\n\t\twavefront0.remove();\r\n\t} else {\r\n\t\t// wavefront[0] already exists in the processor\r\n\t}\r\n\tif (wavefront1.length < 3) {\r\n\t\tendit(wavefront1)\r\n\t\twavefront1.root.next.wavefront = null;\r\n\t\twavefront1.root.wavefront = null;\r\n\t} else {\r\n\t\twavefront1.processor.addWavefront(wavefront1);\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction split(edge, vertex) {\r\n\tlet pair = edge.split(vertex.position);\r\n\r\n\t// compute direction and speed\r\n\tpair[1].start.computeDirectionAndSpeed();\r\n\r\n\t// compute collapse events\r\n\t// SKIPPED: cut will do it\r\n\r\n\t// compute split events for the two halves\r\n\t// pair[1].start is not acute and we do not have to compute its split events\r\n\tpair[0].computeSplitEvents();\r\n\tpair[1].computeSplitEvents();\r\n\r\n\treturn cut(pair[1].start, vertex);\r\n}\r\n","import vec2 from '../nd-linalg/Vector2';\r\nimport vec3 from '../nd-linalg/Vector3';\r\nimport { roughlyEqual } from '../missing-stuff';\r\nimport Ray from '../primitives/Ray';\r\nimport Line from '../primitives/Line';\r\nimport intersect from '../intersections/Intersections';\r\nimport SkeletonSplitEvent from './SkeletonSplitEvent';\r\n\r\nvar id = 0;\r\nexport default class SkeletonVertex {\r\n\tconstructor(position, nextEdge) {\r\n\t\tif (!isFinite(position[0]) || !isFinite(position[1]))\r\n\t\t\tthrow \"Bad vertex\";\r\n\r\n\t\tthis.id = id++;\r\n\t\tthis.position = vec2.clone(position);\r\n\t\tthis.beginning = vec3(position[0], position[1], 0);\r\n\t\tthis.nextEdge = nextEdge;\r\n\r\n\t\tthis.events = [];\r\n\t\tthis.isParallel = null;\r\n\t\tthis.isAcute = null;\r\n\t\tthis.direction = null;\r\n\t\tthis.projection = null;\r\n\t\tthis.speed = null;\r\n\t}\r\n\r\n\tget name() { return \"SkeletonVertex\"; }\r\n\tget wavefront() { return this.nextEdge.wavefront; }\r\n\tget previousEdge() { return this.nextEdge.previous; }\r\n\tget next() { return this.nextEdge.end; }\r\n\tget previous() { return this.previousEdge.start; }\r\n\r\n\tcomputeDirectionAndSpeed() {\r\n\t\t// if direction and speed change, any split/cut events for this vertex\r\n\t\t// are now invalid\r\n\t\tthis.events = [];\r\n\r\n\t\tlet position = this.position;\r\n\t\tlet nextEdge = this.nextEdge;\r\n\t\tlet previousEdge = this.previousEdge;\r\n\t\tlet orientation = vec2.crossz(previousEdge.direction, nextEdge.direction);\r\n\t\tlet isParallel = this.isParallel = roughlyEqual( vec2.crossz(previousEdge.direction, nextEdge.direction), 0 );\r\n\t\tthis.isAcute = isParallel || orientation > 0;\r\n\r\n\t\t// direction & projection\r\n\t\tlet direction = this.direction = vec2.add(vec2(0, 0), previousEdge.direction, nextEdge.direction);\r\n\t\tvec2.normalize(direction, direction);\r\n\t\tthis.projection = new Ray(position, direction);\r\n\r\n\t\t// speed\r\n\t\tif (isParallel) return this.speed = 1;\r\n\t\tlet previousLine = new Line(\r\n\t\t\t\tvec2.add(vec2(0, 0), position, previousEdge.lineDirection),\r\n\t\t\t\tpreviousEdge.direction),\r\n\t\t\tnextLine = new Line(\r\n\t\t\t\tvec2.add(vec2(0, 0), position, nextEdge.lineDirection),\r\n\t\t\t\tnextEdge.direction),\r\n\t\t\tintersections = intersect(previousLine, nextLine);\r\n\r\n\t\tif (intersections.length === 0)\r\n\t\t\treturn this.speed = 0;\r\n\r\n\t\tthis.speed = vec2.dist(position, intersections[0].p);\r\n\t}\r\n\r\n\tcomputeSplitEvents() {\r\n\t\tthis.events = [];\r\n\t\tif (this.isAcute) return;\r\n\r\n\t\tlet start = this.nextEdge.next.next,\r\n\t\t\tend = this.previousEdge;\r\n\t\twhile(true) {\r\n\t\t\tif (start === end) break;\r\n\t\t\tthis.events.push(new SkeletonSplitEvent(start, this));\r\n\t\t\tstart = start.next;\r\n\t\t}\r\n\t}\r\n\r\n\tmovementBy(amount) {\r\n\t\treturn vec2.scale(vec2(0, 0), this.direction, this.speed * amount);\r\n\t}\r\n\r\n\tprojectBy(amount) {\r\n\t\treturn vec2.add(vec2(0, 0), this.position, this.movementBy(amount));\r\n\t}\r\n\r\n\tmove(amount) {\r\n\t\tvec2.add(this.position, this.position, this.movementBy(amount));\r\n\t}\r\n\r\n\tdraw(context) {\r\n\t\tcontext.dot(this.position);\r\n\r\n\t\tcontext.style = \"#AAF\";\r\n\t\tthis.projection && this.projection.draw(context);\r\n\t}\r\n}\r\n","import Ray from '../primitives/Ray';\r\nimport Line from '../primitives/Line';\r\nimport * as Triangle from '../primitives/Triangle';\r\nimport { roughlyEqual, roughlyEqualVec2 } from '../missing-stuff';\r\nimport intersect from '../intersections/Intersections';\r\nimport vec2 from '../nd-linalg/Vector2';\r\nimport vec3 from '../nd-linalg/Vector3';\r\n\r\nvar id = 0;\r\nvar infinity = Infinity;\r\nexport default class SkeletonCollapseEvent {\r\n\tconstructor(edge) {\r\n\t\tthis.id = id++;\r\n\t\tthis.edge = edge;\r\n\r\n\t\tlet wavefront = edge.wavefront,\r\n\t\t\tintersections = intersect(edge.start.projection, edge.end.projection);\r\n\r\n\t\tif (intersections.length === 0)\r\n\t\t\treturn this.time = infinity;\r\n\r\n\t\tthis.position = intersections[0].p;\r\n\t\tthis.time = edge.lengthAt(this.position) + wavefront.time;\r\n\r\n\t\t//if (this.time === 0)\r\n\t\t//\treturn this.time = infinity;\r\n\t}\r\n\r\n\tname() {\r\n\t\tif (!this.edge.wavefront || this.edge.wavefront.length < 3) return \"SkeletonCollapseEvent(dead)\";\r\n\t\treturn this.edge.wavefront.length === 3\r\n\t\t\t? \"Triangle\"\r\n\t\t\t: \"Collapse\";\r\n\t}\r\n\r\n\tisValid() {\r\n\t\tif (!this.edge.wavefront)\r\n\t\t\treturn false;\r\n\r\n\t\t// No events are allowed to happen immediately, that would require a self-intersecting source shape and that is not allowed for this algorithm. The only other way this can happen is with an open-path and no events should happen at instance-zero then either\r\n\t\tif (this.time === 0)\r\n\t\t\treturn false;\r\n\r\n\t\tswitch(this.edge.wavefront.length) {\r\n\t\t\tcase 0:\r\n\t\t\tcase 1:\r\n\t\t\tcase 2:\r\n\t\t\t\treturn false;\r\n\t\t\tcase 3:\r\n\t\t\t\treturn true;\r\n\t\t\tdefault: {\r\n\t\t\t\t// an edge cannot collapse if either of its projections are parallel to the edge\r\n\t\t\t\tconst az = vec2.crossz(this.edge.lineDirection, this.edge.start.direction);\r\n\t\t\t\tconst bz = vec2.crossz(this.edge.lineDirection, this.edge.end.direction);\r\n\t\t\t\treturn !roughlyEqual(az,0)\r\n\t\t\t\t\t&& !roughlyEqual(bz,0);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tremove() {\r\n\t\tthis.time = infinity;\r\n\t}\r\n\r\n\tdescription() {\r\n\t\treturn `${this.name()}:${this.id} edge ${this.edge.id} at ${this.time}`;\r\n\t}\r\n\r\n\tprocess() {\r\n\t\tlet wavefront = this.edge.wavefront;\r\n\t\twavefront.processor.commitSkeletonVertex(this.edge.start);\r\n\t\twavefront.processor.commitSkeletonVertex(this.edge.end);\r\n\r\n\t\tif (wavefront.length === 3) {\r\n\t\t\tlet position = this.time === infinity ? this.edge.start.position : this.position;\r\n\r\n\t\t\t// commit the third vertex of the triangle\r\n\t\t\twavefront.processor.commitSkeletonVertex(this.edge.next.end);\r\n\r\n\t\t\t// we know that -one- of the sides of the triangle has collapsed, but it's possible\r\n\t\t\t// the other two have not, they might now be parallel lines that overlap.\r\n\t\t\t// If that is the case, find one of the uncollapsed sides and connect it to the\r\n\t\t\t// triangle center\r\n\t\t\tlet a = this.edge.start.position,\r\n\t\t\t\tb = this.edge.end.position,\r\n\t\t\t\tc = this.edge.next.end.position,\r\n\t\t\t\tcenter = Triangle.center(a, b, c);\r\n\r\n\t\t\tlet start = a, end = b;\r\n\t\t\tif (roughlyEqualVec2(a, b)) {\r\n\t\t\t\tif (roughlyEqualVec2(b, c)) {\r\n\t\t\t\t\tstart = c;\r\n\t\t\t\t\tend = a;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstart = b;\r\n\t\t\t\t\tend = c;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcenter = vec3(center[0], center[1], wavefront.time);\r\n\t\t\tstart = vec3(start[0], start[1], wavefront.time);\r\n\t\t\tend = vec3(end[0], end[1], wavefront.time);\r\n\t\t\twavefront.processor.commitSkeletonSpoke(start, center);\r\n\t\t\twavefront.processor.commitSkeletonSpoke(center, end);\r\n\r\n\t\t\twavefront.remove();\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tlet previous = this.edge.previous,\r\n\t\t\tnext = this.edge.next;\r\n\r\n\t\t// collapse this.edge\r\n\t\tthis.edge.collapse();\r\n\r\n\t\t// compute the direction and speed for the newly connected vertex\r\n\t\tnext.start.computeDirectionAndSpeed();\r\n\r\n\t\t// compute the collapse events for the neighbours\r\n\t\tprevious.computeCollapseEvent();\r\n\t\tnext.computeCollapseEvent();\r\n\r\n\t\t// compute the split events for the connected vertex which may now be obtuse\r\n\t\tnext.start.computeSplitEvents();\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tdraw(context) {\r\n\t\tif (this.wavefront.length === 3) {\r\n\t\t\tcontext.dot(this.position);\r\n\t\t\treturn this.wavefront.draw(context);\r\n\t\t}\r\n\r\n\t\tthis.edge.draw(context);\r\n\t\tcontext.dot(this.position);\r\n\r\n\t\tcontext.alpha = 0.25;\r\n\r\n\t\tthis.edge.start.projection.draw(context);\r\n\t\tthis.edge.end.projection.draw(context);\r\n\t}\r\n}\r\n","let lastElementId = 0;\r\n\r\nexport default class Chain {\r\n\tconstructor () {\r\n\t\tthis.previous = this;\r\n\t\tthis.next = this;\r\n\t\tthis.id = lastElementId;\r\n\t\tlastElementId++;\r\n\t}\r\n\r\n\tstatic connect (previous, next) {\r\n\t\tprevious.next = next;\r\n\t\tnext.previous = previous;\r\n\t}\r\n\r\n\tstatic disconnect (node) {\r\n\t\tthis.previous = this;\r\n\t\tthis.next = this;\r\n\t}\r\n\r\n\tlength () {\r\n\t\tlet length = 0;\r\n\t\tfor (let each of this) length++;\r\n\t\treturn length;\r\n\t}\r\n\r\n\tisSingleElement () {\r\n\t\treturn this.next === this && this.previous === this;\r\n\t}\r\n\r\n\t* [Symbol.iterator] () {\r\n\t\tlet current = this;\r\n\t\tdo {\r\n\t\t\tyield current;\r\n\t\t\tcurrent = current.next;\r\n\t\t} while (current !== this);\r\n\t}\r\n}","var infinity = Infinity;\r\nimport SkeletonVertex from './SkeletonVertex';\r\nimport SkeletonCollapseEvent from './SkeletonCollapseEvent';\r\nimport SkeletonSplitEvent from './SkeletonSplitEvent';\r\nimport vec2 from '../nd-linalg/Vector2';\r\nimport Chain from '../datastructures/Chain';\r\nimport Ray from '../primitives/Ray';\r\nimport Line from '../primitives/Line';\r\nimport intersect from '../intersections/Intersections';\r\nimport LineSegment from '../primitives/LineSegment';\r\n\r\nexport var InnerEdge = Symbol(\"InnerEdge\"),\r\n\tOuterEdge = Symbol(\"OuterEdge\"),\r\n\tStartCapEdge = Symbol(\"StartCapEdge\"),\r\n\tEndCapEdge = Symbol(\"EndCapEdge\");\r\n\r\nexport function create(path, isInfinite) {\r\n\t// console.log('isclosed', path.isClosed);\r\n\treturn path.isClosed\r\n\t\t ? createClosedPath(path, isInfinite)\r\n\t\t : createOpenPath(path, isInfinite);\r\n}\r\n\r\nfunction createClosedPath(path, isInfinite) {\r\n\tlet segments = path.segments,\r\n\t\tfirst = new SkeletonEdge(segments[0].start, InnerEdge),\r\n\t\tprevious = first;\r\n\tfor (let i = 1; i < segments.length; i++) {\r\n\t\tlet next = new SkeletonEdge(segments[i].start, InnerEdge);\r\n\t\tconnect([previous, next]);\r\n\t\tprevious = next;\r\n\t}\r\n\tconnect([previous, first]);\r\n\t//Chain.isBroken(first);\r\n\r\n\tif (isInfinite) return [first];\r\n\r\n\tlet second = new SkeletonEdge(segments[segments.length-1].end, OuterEdge);\r\n\tprevious = second;\r\n\tfor (let i = segments.length - 2; i >= 0; i--) {\r\n\t\tlet next = new SkeletonEdge(segments[i].end, OuterEdge);\r\n\t\tconnect([previous, next]);\r\n\t\tprevious = next;\r\n\t}\r\n\tconnect([previous, second]);\r\n\t//Chain.isBroken(second);\r\n\r\n\treturn [first, second];\r\n}\r\n\r\nfunction createOpenPath(path, isInfinite) {\r\n\tif (isInfinite)\r\n\t\tthrow \"Cannot propagate an open path wavefront infinitely\";\r\n\r\n\tlet segments = path.segments,\r\n\t\tedges = new Array(segments.length * 2 + 2),\r\n\t\ti = 0;\r\n\r\n\tfor (let segment of segments.slice().reverse())\r\n\t\tedges[i++] = new SkeletonEdge(segment.end, OuterEdge);\r\n\tedges[i++] = new SkeletonEdge(segments[0].start, StartCapEdge);\r\n\r\n\tfor (let segment of segments)\r\n\t\tedges[i++] = new SkeletonEdge(segment.start, InnerEdge);\r\n\tedges[i] = new SkeletonEdge(segments[segments.length-1].end, EndCapEdge);\r\n\r\n\tconnect(edges);\r\n\tconnect([edges[edges.length-1], edges[0]]);\r\n\t//Chain.isBroken(edges[0]);\r\n\r\n\treturn [edges[0]];\r\n}\r\n\r\nexport function connect(edges) {\r\n\tif (edges.length < 2)\r\n\t\tthrow \"Need at least two edges to connect\";\r\n\r\n\t// connect the list of edges\r\n\tlet previous = edges[0];\r\n\tfor (var i = 1; i < edges.length; i++) {\r\n\t\tlet next = edges[i];\r\n\t\tChain.connect(previous, next);\r\n\t\tprevious = next;\r\n\t}\r\n}\r\n\r\nexport function isBroken(root) {\r\n\tlet length = 0;\r\n\tChain.isBroken(root);\r\n\tfor (let edge of root) {\r\n\t\tlength++;\r\n\t\tif (edge.start.nextEdge !== edge)\r\n\t\t\tthrow \"Edge vertex inconsistent\";\r\n\t\tif (edge.segment.start !== edge.start.position)\r\n\t\t\tthrow \"Edge segment.start inconsistent\";\r\n\t\tif (edge.segment.end !== edge.end.position)\r\n\t\t\tthrow \"Edge segment.end inconsistent\";\r\n\t}\r\n\tif (root.wavefront.length != length)\r\n\t\tthrow \"What?\";\r\n}\r\n\r\nvar id = 0;\r\nclass SkeletonEdge {\r\n\tconstructor(start, side) {\r\n\t\tthis.id = id++;\r\n\t\tthis.side = side;\r\n\t\tthis.start = new SkeletonVertex(start, this);\r\n\t\tthis.wavefront = null;\r\n\t\tthis.next = this;\r\n\t\tthis.previous = this;\r\n\t\tthis.isCap = this.side === StartCapEdge || this.side === EndCapEdge;\r\n\r\n\t\tthis.direction = null;\r\n\t\tthis.lineDirection = null;\r\n\t\tthis.collapseEvent = null;\r\n\t}\r\n\r\n\tget name() { return \"SkeletonEdge\"; }\r\n\tget end() { return this.next.start; }\r\n\tget segment() { return new LineSegment(this.start.position, this.end.position); }\r\n\tget line() { return new Line(this.start.position, this.lineDirection); }\r\n\r\n\tcomputeDirection() {\r\n\t\tlet startPosition = this.start.position,\r\n\t\t\tendPosition = this.end.position;\r\n\r\n\t\tif (this.isCap &&\r\n\t\t\tstartPosition[0] == endPosition[0] &&\r\n\t\t\tstartPosition[1] == endPosition[1]) {\r\n\t\t\tlet previousDirection = this.previous.direction;\r\n\t\t\tthis.direction = vec2(previousDirection[1], -previousDirection[0]);\r\n\t\t\tthis.lineDirection = vec2.clone(previousDirection);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.lineDirection = vec2.sub(vec2(0, 0), endPosition, startPosition);\r\n\t\tvec2.normalize(this.lineDirection, this.lineDirection);\r\n\t\tthis.direction = vec2(-this.lineDirection[1], this.lineDirection[0]);\r\n\t}\r\n\r\n\tcheckSanity() {\r\n\t\tlet sane = false;\r\n\t\tlet ray = new Ray(this.segment.midpoint, this.direction);\r\n\t\tfor (let edge of this.next) {\r\n\t\t\tif (edge !== this) {\r\n\t\t\t\tif (intersect(edge.segment, ray).length > 0) {\r\n\t\t\t\t\tsane = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!sane) throw \"Hangon...\";\r\n\t}\r\n\r\n\tcheckOverlap() {\r\n\t\tif (roughlyEqual(this.segment.length, 0)) return;\r\n\t\tintersect(this.previous.segment, this.next.segment).length > 0 && thisshouldnotbehappening();\r\n\t}\r\n\r\n\tcomputeCollapseEvent() {\r\n\t\tthis.collapseEvent = new SkeletonCollapseEvent(this);\r\n\t}\r\n\r\n\tcomputeSplitEvents() {\r\n\t\tlet edge = this.next.next.next,\r\n\t\t\tend = this.previous;\r\n\r\n\t\twhile(true) {\r\n\t\t\tif (edge === end) break;\r\n\t\t\tlet vertex = edge.start;\r\n\t\t\tvertex.isAcute || vertex.events.push(new SkeletonSplitEvent(this, vertex));\r\n\t\t\tedge = edge.next;\r\n\t\t}\r\n\t}\r\n\r\n\t* [Symbol.iterator]() {\r\n\t\tvar current = this;\r\n\t\twhile(true) {\r\n\t\t\tyield current;\r\n\t\t\tcurrent = current.next;\r\n\t\t\tif (current === this) break;\r\n\t\t}\r\n\t}\r\n\r\n\t// At a position p, assuming p is between start.projection and end.projection\r\n\t// return how long it will be before the edge reaches p\r\n\tlengthAt(p) {\r\n\t\tvar measuring = vec2(-this.direction[0], -this.direction[1]);\r\n\t\tvar intersections = intersect(new Ray(p, measuring), this.line);\r\n\r\n\t\t// If the point is behind the moving wavefront, return an infinite length\r\n\t\treturn intersections.length === 0 ? infinity : intersections[0].u;\r\n\t}\r\n\r\n\tprojectBy(amount) {\r\n\t\treturn new LineSegment(this.start.projectBy(amount), this.end.projectBy(amount));\r\n\t}\r\n\r\n\tcollapse() {\r\n\t\t// if we're the root edge, cycle to another edge\r\n\t\tif (this.wavefront.root === this)\r\n\t\t\tthis.wavefront.root = this.next;\r\n\r\n\t\tlet previous = this.previous,\r\n\t\t\tnext = this.next;\r\n\r\n\t\tconnect([previous, next]);\r\n\t\tthis.wavefront.length--;\r\n\t\t//isBroken(previous);\r\n\r\n\t\t// delete the edge and therefore any split/cut events for this edge\r\n\t\tthis.wavefront = null;\r\n\t}\r\n\r\n\tsplit(position) {\r\n\t\t// if we're the root edge, cycle to another edge\r\n\t\tif (this.wavefront.root === this)\r\n\t\t\tthis.wavefront.root = this.next;\r\n\r\n\t\tvar previous = this.previous,\r\n\t\t\tmiddle1 = new SkeletonEdge(this.start.position, previous.side),\r\n\t\t\tmiddle2 = new SkeletonEdge(position, previous.side),\r\n\t\t\tnext = this.next;\r\n\r\n\t\t// keep the current start\r\n\t\tmiddle1.start = this.start;\r\n\t\tmiddle1.start.nextEdge = middle1;\r\n\r\n\t\t// Copy the properties\r\n\t\tmiddle1.wavefront = this.wavefront;\r\n\t\tmiddle2.wavefront = this.wavefront;\r\n\t\tmiddle1.direction = vec2.clone(this.direction);\r\n\t\tmiddle2.direction = vec2.clone(this.direction);\r\n\t\tmiddle1.lineDirection = vec2.clone(this.lineDirection);\r\n\t\tmiddle2.lineDirection = vec2.clone(this.lineDirection);\r\n\r\n\t\t// Quick set the new vertex\r\n\t\tmiddle2.start.isAcute = false;\r\n\t\tmiddle2.start.isParallel = true;\r\n\t\tmiddle2.start.speed = 1;\r\n\t\tmiddle2.start.direction = vec2.clone(this.direction);\r\n\t\tmiddle2.start.projection = new Ray(middle2.start.position, middle2.start.direction);\r\n\r\n\t\tconnect([previous, middle1, middle2, next]);\r\n\t\tthis.wavefront.length++;\r\n\t\t//isBroken(previous);\r\n\r\n\t\t// delete the edge and therefore any split/cut events for this edge\r\n\t\tthis.wavefront = null;\r\n\r\n\t\treturn [middle1, middle2];\r\n\t}\r\n\r\n\tdraw(context) {\r\n\t\tif (!this.wavefront) return;\r\n\t\tif (this.cutreverse) {\r\n\t\t\tcontext.stroke(new LineSegment(this.segment.start, this.cutsegment.end));\r\n\t\t\tcontext.stroke(new LineSegment(this.cutsegment.start, this.segment.end));\r\n\t\t} else {\r\n\t\t\tcontext.stroke(this.cutsegment || this.segment);\r\n\t\t\t//context.arrowhead(this.segment.end, this.lineDirection);\r\n\t\t}\r\n\t\tcontext.dot(this.start.position);\r\n\t\tcontext.fontsize = 13;\r\n\t\tcontext.textBaseline = \"center\";\r\n\t\tcontext.textAlign = \"center\";\r\n\t\tcontext.text(this.id, this.segment.midpoint);\r\n\t}\r\n}\r\n","import intersect from '../intersections/Intersections';\r\nimport vec2 from '../nd-linalg/Vector2';\r\nimport LineSegment from './LineSegment';\r\nimport Ray from './Ray';\r\nimport Rectangle from './Rectangle';\r\nimport {roughlyEqual, roughlyBetween, roughlyEqualVec2} from '../missing-stuff';\r\n\r\nexport default function Curve(start, direction, end) {\r\n\tthis.start = start;\r\n\tthis.end = end;\r\n\tthis.direction = vec2.clone(direction);\r\n\tvec2.normalize(this.direction, this.direction);\r\n\r\n\t// using the chord vector start-end, find the orientation against direction\r\n\t// -1 is counter-clockwise, 1 is clockwise, 0 is either a line or\r\n\t// an invalid curve\r\n\tvar vChord = vec2(0, 0);\r\n\tvec2.sub(vChord, this.start, this.end);\r\n\tthis.orientation = sign(vec2.crossz(this.direction, vChord));\r\n\r\n\t// an estimate of the curve length, used for computing u,v intersection values\r\n\t// and for path finding estimates\r\n\tvar chordLength = vec2.len(vChord);\r\n\r\n\t// Check if this is a line\r\n\tif (this.orientation === 0) {\r\n\t\t// Determine if the direction faces the same way as the chord,\r\n\t\t// if it doesn't then this is an infinite circle, not a line\r\n\t\tvec2.normalize(vChord, vChord);\r\n\t\tvar diff = vec2.add(vec2(0, 0), vChord, this.direction);\r\n\t\tif (!roughlyEqualVec2(diff, [0, 0]))\r\n\t\t\tthrow \"Not a valid curve, infinite circle found\";\r\n\r\n\t\t//this.length = chordLength;\r\n\t\t//this.__proto__ = LineSegment.constructor.prototype;\r\n\t\t//return;\r\n\t\treturn new LineSegment(start, end);\r\n\t}\r\n\r\n\tthis.chordLength = chordLength;\r\n\r\n\t// compute the rays for intersection\r\n\tvar rayStartToCenter = this.rayFromStartToCenter(),\r\n\t\trayHalfChordToCenter = this.rayFromHalfChordToCenter();\r\n\r\n\t// the center of the circle is at the intersection of the two rays\r\n\t// but if none exist, then it's not a real circle\r\n\tvar i = intersect(rayStartToCenter, rayHalfChordToCenter);\r\n\r\n\t// check the opposite direction in case we're >180º\r\n\tif (i.length !== 1) {\r\n\t\ti = intersect(rayStartToCenter, rayHalfChordToCenter.reverse());\r\n\t}\r\n\r\n\tif (i.length !== 1)\r\n\t\tthrow \"Not a valid curve, no circle found\";\r\n\r\n\tthis.center = i[0].p;\r\n\tthis.radius = vec2.dist(this.center, this.start);\r\n\r\n\tvar angleSpan = 2 * vec2.angleBetween(rayStartToCenter.direction, rayHalfChordToCenter.direction);\r\n\tthis.length = this.radius * angleSpan;\r\n}\r\n\r\nCurve.createIfValid = createIfValid;\r\n\r\nfunction createIfValid(start, direction, end) {\r\n\ttry {\r\n\t\treturn new Curve(start, direction, end);\r\n\t} catch (e) {\r\n\t\treturn undefined;\r\n\t}\r\n};\r\n\r\nObject.defineProperties(Curve.prototype, {\r\n\t\"name\": \t\t\t\t\t\t{value: \"Curve\"},\r\n\t\"type\": \t\t\t\t\t\t{value: intersect.CurveTypeFunction},\r\n\t\"isRay\": \t\t\t\t\t\t{value: false},\r\n\t\"isLineSegment\": \t\t\t\t\t\t{value: false},\r\n\t\"isCurve\": \t\t\t\t\t\t{value: true},\r\n\t\"isCircle\": \t\t\t\t\t{value: false},\r\n\r\n\t\"midpoint\": \t\t\t\t\t{get: midpoint},\r\n\t\"boundingBox\": \t\t\t\t\t{get: boundingBox},\r\n\t\"endDirection\": \t\t\t\t{get: endDirection},\r\n\r\n\t\"rayFromStartToCenter\": \t\t{value: rayFromStartToCenter},\r\n\t\"rayFromHalfChordToCenter\": \t{value: rayFromHalfChordToCenter},\r\n\r\n\t\"subdivide\": \t\t\t\t\t{value: subdivide},\r\n\t\"reverse\": \t\t\t\t\t\t{value: reverse},\r\n\t\"translate\": \t\t\t\t\t{value: translate},\r\n\t\"scale\": \t\t\t\t\t\t{value: scale},\r\n\t\"offsetPerpendicular\":\t\t\t{value: offsetPerpendicular},\r\n\r\n\t\"offsetPerpendicularLength\":\t{value: offsetPerpendicularLength},\r\n\t\"mapPerpendicular\": \t\t\t{value: mapPerpendicular},\r\n\r\n\t\"positionOf\": \t\t\t\t\t{value: positionOf},\r\n\t\"closestPointTo\": \t\t\t\t{value: closestPointTo},\r\n\t\"offsetOf\": \t\t\t\t\t{value: offsetOf},\r\n\t\"directionOf\": \t\t\t\t\t{value: directionOf},\r\n\t\"containsPoint\": \t\t\t\t{value: containsPoint},\r\n\t\"wedgeContainsPoint\": \t\t\t{value: wedgeContainsPoint},\r\n\t\"getAlphaValueAtPosition\":\t\t{value: getAlphaValueAtPosition},\r\n\r\n\t\"vertices\": \t\t\t\t\t{value: vertices},\r\n\t\"uvs\": \t\t\t\t\t\t\t{value: uvs},\r\n\t\"draw\": \t\t\t\t\t\t{value: draw}\r\n});\r\n\r\nfunction midpoint() {\r\n\tvar direction = this.rayFromHalfChordToCenter().direction;\r\n\tvec2.normalize(direction, direction);\r\n\tvec2.scale(direction, direction, -this.radius);\r\n\tvec2.add(direction, this.center, direction);\r\n\treturn direction;\r\n}\r\n\r\nfunction boundingBox() {\r\n\tvar origin = vec2.clone(this.start),\r\n\t\tcorner = vec2.clone(this.end),\r\n\t\tmidpoint = this.midpoint,\r\n\t\tleft = Math.min(this.start[0], this.end[0]),\r\n\t\tleft = Math.min(left, midpoint[0]),\r\n\t\tright = Math.max(this.start[0], this.end[0]),\r\n\t\tright = Math.max(right, midpoint[0]),\r\n\t\ttop = Math.min(this.start[1], this.end[1]),\r\n\t\ttop = Math.min(top, midpoint[1]),\r\n\t\tbottom = Math.max(this.start[1], this.end[1]),\r\n\t\tbottom = Math.max(bottom, midpoint[1]);\r\n\r\n\treturn new Rectangle(top, right, bottom, left);\r\n}\r\n\r\nfunction rayFromStartToCenter() {\r\n\tvar vStartToCenter = vec2.fromValues(this.direction[1], -this.direction[0]);\r\n\tthis.orientation === -1 && vec2.negate(vStartToCenter, vStartToCenter);\r\n\treturn new Ray(this.start, vStartToCenter);\r\n}\r\n\r\nfunction rayFromHalfChordToCenter() {\r\n\tvar pHalfChord = vec2(0, 0),\r\n\t\tvHalfChord = vec2(0, 0);\r\n\tvec2.lerp(pHalfChord, this.start, this.end, 0.5);\r\n\tvec2.sub(vHalfChord, pHalfChord, this.start);\r\n\r\n\tvar vHalfChordToCenter = vec2.fromValues(vHalfChord[1], -vHalfChord[0]);\r\n\tvec2.normalize(vHalfChordToCenter, vHalfChordToCenter);\r\n\tthis.orientation === -1 && vec2.negate(vHalfChordToCenter, vHalfChordToCenter);\r\n\treturn new Ray(pHalfChord, vHalfChordToCenter);\r\n}\r\n\r\nfunction subdivide(p) {\r\n\tvar head = new Curve(this.start, this.direction, p);\r\n\tvar tail = new Curve(p, this.directionOf(this.offsetOf(p)), this.end);\r\n\treturn [head, tail];\r\n}\r\n\r\nfunction reverse() {\r\n\treturn new Curve(this.end, vec2.negate(vec2(0, 0), this.endDirection), this.start);\r\n}\r\n\r\nfunction scale(scalar) {\r\n\tvar start = vec2.clone(this.start),\r\n\t\tend = vec2.clone(this.end);\r\n\tvec2.scale(start, start, scalar);\r\n\tvec2.scale(end, end, scalar);\r\n\treturn new Curve(start, this.direction, end);\r\n}\r\n\r\nfunction translate(offset) {\r\n\tvar start = vec2.clone(this.start),\r\n\t\tend = vec2.clone(this.end);\r\n\tvec2.add(start, start, offset);\r\n\tvec2.add(end, end, offset);\r\n\treturn new Curve(start, this.direction, end);\r\n}\r\n\r\nfunction directionOf(offset) {\r\n\tvar rotationSign = -this.orientation;\r\n\tvar centerToStart = vec2.sub(vec2(0, 0), this.start, this.center);\r\n\tvar centerToPoint = vec2.rotate(vec2(0, 0), centerToStart, rotationSign * offset / this.radius);\r\n\r\n\tvar direction = this.orientation > 0\r\n\t\t? vec2.fromValues(centerToPoint[1], -centerToPoint[0])\r\n\t\t: vec2.fromValues(-centerToPoint[1], centerToPoint[0]);\r\n\r\n\tvec2.normalize(direction, direction);\r\n\r\n\treturn direction;\r\n}\r\n\r\nfunction endDirection() {\r\n\tvar vEnd = vec2(0, 0);\r\n\tvec2.sub(vEnd, this.center, this.end);\r\n\tvar direction = this.orientation > 0\r\n\t\t? vec2.fromValues(-vEnd[1], vEnd[0])\r\n\t\t: vec2.fromValues(vEnd[1], -vEnd[0]);\r\n\treturn vec2.normalize(direction, direction);\r\n}\r\n\r\nfunction containsPoint(p) {\r\n\tvar distance = vec2.squaredDistance(this.center, p);\r\n\treturn (distance <= this.radius * this.radius + Intersections.THICKNESS * Intersections.THICKNESS)\r\n\t\t&& this.wedgeContainsPoint(p, Intersections.THICKNESS);\r\n}\r\n\r\nfunction wedgeContainsPoint(p, tolerance) {\r\n\t// The point (p) must lye between start and end vectors\r\n\t// let start = 0, 0\r\n\t// let end = this.end - this.start\r\n\t// let test = p - this.start\r\n\t// let dir = this.direction\r\n\t// sign0 = sign(dir x end)\r\n\t//   sign0 == 0 error: all points are either inside or outside and it's impossile to tell\r\n\t// sign1 = sign(dir x test) <\r\n\t// sign2 = sign(test x end)\r\n\t// contained if:\r\n\t//    sign1 == 0 || sign2 == 0\r\n\t//    sign0 == sign1 && sign0 == sign2\r\n\r\n\tvar test = vec2(0, 0),\r\n\t\tendToStart = vec2(0, 0),\r\n\t\tdir = tolerance ? this.directionOf(-tolerance) : this.direction;\r\n\r\n\tlet start = tolerance ? this.positionOf(-tolerance) : this.start;\r\n\tlet end = tolerance ? this.positionOf(this.length + tolerance) : this.end;\r\n\r\n\tvec2.sub(test, p, start);\r\n\tvec2.sub(endToStart, end, start);\r\n\r\n\tvar sign0 = sign(vec2.crossz(dir, endToStart));\r\n\tvar sign1 = sign(vec2.crossz(dir, test));\r\n\tvar sign2 = sign(vec2.crossz(test, endToStart));\r\n\t//console.log(\"dir\", dir, \"end\", end, \"test\", test, \"sign0\", sign0, \"sign1\", sign1, \"sign2\", sign2);\r\n\r\n\t// All or no solutions because there is no arc, this should not be possible, it should\r\n\t// have been caught on curve creation\r\n\tif (sign0 === 0)\r\n\t\tthrow \"This curve has no wedge\";\r\n\r\n\t// Solution because the test is on an edge of the wedge\r\n\tif (sign1 === 0 || sign2 === 0)\r\n\t\treturn true;\r\n\r\n\treturn sign0 === sign1 && sign0 === sign2;\r\n}\r\n\r\nfunction getAlphaValueAtPosition(p) {\r\n\treturn this.offsetOf(p) / this.length;\r\n}\r\n\r\nfunction sign(value) {\r\n\treturn roughlyEqual(value, 0)\r\n\t\t? 0\r\n\t\t: value > 0\r\n\t\t\t? 1\r\n\t\t\t: -1;\r\n}\r\n\r\nfunction offsetOf(point) {\r\n\tvar tolerance = 1e-3;\r\n\tvar centerToStart = vec2.sub(vec2(0, 0), this.start, this.center);\r\n\tvar centerToPoint = vec2.sub(vec2(0, 0), point, this.center);\r\n\tvar centerToEnd = vec2.sub(vec2(0, 0), this.end, this.center);\r\n\r\n\tvar angleSpan = this.length / this.radius;\r\n\r\n\tvar directionAtPoint = this.orientation > 0\r\n\t\t? vec2.fromValues(centerToPoint[1], -centerToPoint[0])\r\n\t\t: vec2.fromValues(-centerToPoint[1], centerToPoint[0]);\r\n\tvar angleAToPoint = vec2.angleBetweenWithDirections(\r\n\t\tcenterToStart, this.direction, centerToPoint);\r\n\tvar angleBToPoint = vec2.angleBetweenWithDirections(\r\n\t\tcenterToPoint, directionAtPoint, centerToEnd);\r\n\r\n\treturn angleAToPoint <= angleSpan + tolerance && angleBToPoint <= angleSpan + tolerance\r\n\t\t? angleAToPoint * this.radius\r\n\t\t: vec2.dist(this.start, point) < vec2.dist(this.end, point)\r\n\t\t\t? -vec2.angleBetween(centerToStart, centerToPoint) * this.radius\r\n\t\t\t: this.length + vec2.angleBetween(centerToEnd, centerToPoint) * this.radius;\r\n}\r\n\r\nfunction closestPointTo(point) {\r\n\tvar offset = this.offsetOf(point);\r\n\tif (roughlyBetween(0, offset, this.length)) {\r\n\t\tvar centerToPoint = vec2.sub(vec2(0, 0), point, this.center);\r\n\t\treturn vec2.add(centerToPoint, centerToPoint, this.center, vec2.scale(\r\n\t\t\tcenterToPoint, centerToPoint,\r\n\t\t\tthis.radius / vec2.len(centerToPoint)\r\n\t\t));\r\n\t}\r\n\r\n\tif (vec2.dist(this.start, point) < vec2.dist(this.end, point)) {\r\n\t\treturn this.start;\r\n\t} else {\r\n\t\treturn this.end;\r\n\t}\r\n}\r\n\r\nfunction positionOf(offset) {\r\n\tvar rotationSign = -this.orientation;\r\n\tvar centerToStart = vec2.sub(vec2(0, 0), this.start, this.center);\r\n\tvar centerToPoint = vec2.rotate(vec2(0, 0), centerToStart, rotationSign * offset / this.radius);\r\n\treturn vec2.add(centerToPoint, centerToPoint, this.center);\r\n}\r\n\r\nfunction offsetPerpendicular(offsetToRight) {\r\n\treturn Curve.createIfValid(\r\n\t\tvec2.scalePerpendicularAndAdd(vec2(0, 0), this.start, this.direction, offsetToRight),\r\n\t\tthis.direction,\r\n\t\tvec2.scalePerpendicularAndAdd(vec2(0, 0), this.end, this.endDirection, offsetToRight)\r\n\t);\r\n}\r\n\r\nfunction offsetPerpendicularLength(offsetToRight) {\r\n\tif (offsetToRight === 0) return this.length;\r\n\tvar angleSpan = this.length / this.radius;\r\n\treturn this.length + (this.orientation < 0 ? 1 : -1) * angleSpan * offsetToRight;\r\n}\r\n\r\nfunction mapPerpendicular(offsetA, offsetToRightA, offsetToRightB) {\r\n\t// TODO: maybe simplify?\r\n\treturn offsetA * (\r\n\t\tthis.offsetPerpendicularLength(offsetToRightB) /\r\n\t\tthis.offsetPerpendicularLength(offsetToRightA));\r\n}\r\n\r\nvar DEBUG_CURVE_DISPLAY = false;\r\nfunction draw(context) {\r\n\tif (this.radius === 0) return;\r\n\r\n\t// Draw the full circle\r\n\tDEBUG_CURVE_DISPLAY && context.stroke(new Circle(this.center, this.radius));\r\n\r\n\t// Draw the arrow head at the end of the arc\r\n\tcontext.arrowhead(this.end, this.endDirection);\r\n\tcontext.stroke(this);\r\n}\r\n\r\nfunction vertices(offsetToRight) {\r\n\tvar centerToStart = vec2.sub(vec2(0, 0), this.start, this.center);\r\n\r\n\tif (offsetToRight) {\r\n\t\tvar desiredRadius = this.orientation > 0\r\n\t\t\t? this.radius - offsetToRight\r\n\t\t\t: this.radius + offsetToRight;\r\n\t\tvar scaling = desiredRadius / this.radius;\r\n\t\tvec2.scale(centerToStart, centerToStart, scaling);\r\n\t}\r\n\r\n\tvar angleSpan = this.length / this.radius;\r\n\t// TODO: make less magic\r\n\tvar subdivisions = Math.ceil(Math.abs(angleSpan) * 4 * (Math.abs(this.radius)/100 + 1)) + 1;\r\n\tvar vertices = new Array(subdivisions);\r\n\tvar rotationSign = -this.orientation;\r\n\tvar rotationMatrix = mat2.rotation(rotationSign * angleSpan * (1 / (subdivisions - 1)));\r\n\tvar pointer = vec2.clone(centerToStart);\r\n\r\n\tfor (var i = 0; i < subdivisions; i++) {\r\n\t\tvertices[i] = vec2.add(vec2(0, 0), pointer, this.center);\r\n\t\tmat2.map(pointer, rotationMatrix, pointer);\r\n\t}\r\n\r\n\treturn vertices;\r\n}\r\n\r\nfunction uvs(offsetToRight, multiplierAlongPath) {\r\n\tvar angleSpan = this.length / this.radius;\r\n\t// TODO: make less magic\r\n\tvar subdivisions = Math.ceil(Math.abs(angleSpan) * 4 * (Math.abs(this.radius)/100 + 1)) + 1;\r\n\r\n\tvar uvs = new Array(subdivisions);\r\n\r\n\tfor (var i = 0; i < subdivisions; i++) {\r\n\t\tuvs[i] = vec2.fromValues(multiplierAlongPath * this.length * (i / (subdivisions - 1)), offsetToRight);\r\n\t}\r\n\r\n\treturn uvs;\r\n}\r\n","class It {\n\tconstructor () {\n\t\tthis.op = id;\n\t}\n\n\tof (iterable) {\n\t\t// might return normal or iterator function\n\t\treturn this.op(iterable);\n\t}\n\n\tchain (second) {\n\t\tthis.op = compose(this.op, second);\n\t\treturn this;\n\t}\n\n\tstatic concat (first, second) {\n\t\t// this only returns an iterating function,\n\t\t// it doesn't run it yet!\n\t\treturn function * concatenation () {\n\t\t\tyield* first; yield* second;\n\t\t};\n\t}\n\n\t// Iterators\n\tcycle () {return this.chain(cycler());}\n\tflatten () {return this.chain(flattener());}\n\tmap (mapping) {return this.chain(mapper(mapping));}\n\tfilter (predicate) {return this.chain(filterer(predicate));}\n\ttake (n) {return this.chain(taker(n));}\n\tdrop (n) {return this.chain(dropper(n));}\n\twindows (size) {return this.chain(windower(size));}\n\tchunks (size) {return this.chain(chunker(size));}\n\tslice (start, end) {return this.chain(compose(dropper(start - 1), taker(start - end)));}\n\tcommon (otherIterable) {return this.chain(commoner(otherIterable));}\n\tzip (otherIterable) {return this.chain(zipper(otherIterable));}\n\tappend (otherIterable) {return this.chain(appender(otherIterable));}\n\n\t// Reducers\n\treduce (step, initial) {return this.chain(reducerer(step, initial));}\n\tfirst () {return this.chain(firster());}\n\tfind (predicate) {return this.chain(finder(predicate));}\n\thas (item) {return this.chain(haser(item));}\n\textreme (mapping) {return this.chain(extremer(mapping));}\n\tmax (mapping) {return this.chain(maxer(mapping));}\n\tmin (mapping) {return this.chain(miner(mapping));}\n\tall (predicate) {return this.chain(aller(predicate));}\n\tany (predicate) {return this.chain(anyer(predicate));}\n\tunique () {return this.chain(uniquer());}\n\tempty () {return this.chain(emptyer());}\n}\n\nfunction createIteration() {return new It();}\ncreateIteration.concat = It.concat;\nexport default createIteration;\n\nfunction id (iterable) {return iterable;}\n\nfunction compose (first, second) {\n\treturn function composition (iterable) {\n\t\treturn second(first(iterable));\n\t};\n}\n\n// Iterator-ers\n\nfunction cycler () {\n\treturn function * cycle (iterable) {\n\t\tlet seenValues = [];\n\n\t\tfor (let value of iterable) {\n\t\t\tseenValues.push(value);\n\t\t\tyield value;\n\t\t}\n\n\t\twhile (true) yield* seenValues;\n\t};\n}\n\nfunction flattener () {\n\treturn function * flatten (iterable) {\n\t\t// for some reason yield* doesn't compile in here\n\t\tfor (let subIterable of iterable) yield* subIterable;\n\t};\n}\n\nfunction mapper (mapping) {\n\treturn function * map (iterable) {for (let value of iterable) yield mapping(value);};\n}\n\nfunction filterer (predicate) {\n\treturn function * filter (iterable) {\n\t\tfor (let value of iterable) if (predicate(value)) yield value;\n\t};\n}\n\nfunction taker (n) {\n\treturn function * take (iterable) {\n\t\tlet left = n;\n\t\tfor (let value of iterable) {\n\t\t\tif (left === 0) return;\n\t\t\tleft--; yield value;\n\t\t}\n\t};\n}\n\nfunction dropper (n) {\n\treturn function * drop (iterable) {\n\t\tlet startIn = n;\n\t\tfor (let value of iterable) {\n\t\t\tif (startIn === 0) yield value;\n\t\t\telse startIn--;\n\t\t}\n\t};\n}\n\nfunction windower (size) {\n\treturn function * windows (iterable) {\n\t\tlet window = [];\n\n\t\tfor (let value of iterable) {\n\t\t\twindow.push(value);\n\t\t\tif (window.length === size) {\n\t\t\t\tyield window.slice();\n\t\t\t\twindow.shift();\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction chunker (size) {\n\treturn function * chunk (iterable) {\n\t\tlet group = [];\n\n\t\tfor (let value of iterable) {\n\t\t\tgroup.push(value);\n\t\t\tif (group.length === size) {\n\t\t\t\tyield group;\n\t\t\t\tgroup = [];\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction commoner (otherIterable) {\n\tlet otherItems = new Set(otherIterable);\n\treturn function * common (iterable) {\n\t\tfor (let value of (new Set(iterable))) if (otherItems.has(value)) yield value;\n\t};\n}\n\nfunction zipper (otherIterable) {\n\totherIterable = otherIterable[Symbol.iterator]();\n\treturn function * zip (iterable) {\n\t\tfor (let value of iterable) {\n\t\t\tlet other = otherIterable.next();\n\t\t\tif (other.done) break;\n\t\t\tyield [value, other.value];\n\t\t}\n\t};\n}\n\nfunction appender (otherIterable) {\n\treturn function * append (iterable) {\n\t\tyield* iterable;\n\t\tyield* otherIterable;\n\t};\n}\n\n// Reducer-ers\n\nfunction reducerer (step, initial) {\n\treturn function reduce (iterable) {\n\t\tlet reducedValue = initial;\n\t\tfor (let value of iterable) reducedValue = step(reducedValue, value);\n\t\treturn reducedValue;\n\t};\n}\n\nfunction firster () {\n\treturn function first (iterable) {\n\t\treturn iterable.next().value;\n\t};\n}\n\nfunction finder (predicate) {\n\treturn function find (iterable) {\n\t\tfor (let value of iterable) if (predicate(value)) return value;\n\t};\n}\n\nfunction haser (item) {\n\treturn function has (iterable) {\n\t\tfor (let value of iterable) if (value === item) return true;\n\t};\n}\n\nfunction extremer (mapping) {\n\treturn function extreme (iterable) {\n\t\tlet bestMetric;\n\t\tlet best;\n\t\tlet rest = [];\n\n\t\tfor (let value of iterable) {\n\t\t\tlet metric = mapping(value);\n\t\t\tif (best === undefined || metric > bestMetric) {\n\t\t\t\tif (best !== undefined) rest.push(best);\n\t\t\t\tbest = value;\n\t\t\t\tbestMetric = metric;\n\t\t\t} else rest.push(value);\n\t\t}\n\n\t\treturn {best, bestMetric, rest};\n\t};\n}\n\nfunction maxer (mapping) {\n\treturn function max (iterable) {\n\t\tlet {best, bestMetric: maximum, rest} = extremer(mapping)(iterable);\n\t\treturn {best, max: maximum, rest};\n\t};\n}\n\nfunction miner (mapping) {\n\tlet negativeMapping = (i) => - mapping(i);\n\treturn function min (iterable) {\n\t\tlet {best, bestMetric: negativeMin, rest} = extremer(negativeMapping)(iterable);\n\t\treturn {best, min: -negativeMin, rest};\n\t};\n}\n\nfunction aller (predicate) {\n\treturn function all (iterable) {\n\t\tfor (let value of iterable) if (!predicate(value)) return false;\n\t\treturn true;\n\t};\n}\n\nfunction anyer (predicate) {\n\treturn function  any (iterable) {\n\t\tfor (let value of iterable) if (predicate(value)) return true;\n\t\treturn false;\n\t};\n}\n\nfunction uniquer () {\n\treturn function unique (iterable) {\n\n\t\t//return new Set(iterable);\n\t\tlet s = new Set();\n\t\tfor (let value of iterable) s.add(value);\n\t\treturn s;\n\t};\n}\n\nfunction emptyer () {\n\treturn function empty (iterable) {\n\t\treturn iterable.next().done;\n\t};\n}","import intersect from '../intersections/Intersections';\r\nimport vec2 from '../nd-linalg/Vector2';\r\nimport LineSegment from '../primitives/LineSegment';\r\nimport Curve from '../primitives/Curve';\r\nimport {corner as RectangleCorner} from '../primitives/Rectangle';\r\nimport It from '../iteratorers';\r\nimport { roughlyEqualVec2 } from '../missing-stuff';\r\n\r\nexport default class Path {\r\n\tconstructor (segments, isClockwise, boundingBox) {\r\n\t\tthis.segments = segments === undefined ? [] : segments.slice(0);\r\n\t\tthis.isClockwise = isClockwise === undefined ? orientation(this.segments) : isClockwise;\r\n\t\tthis.boundingBox = boundingBox === undefined ? aabb(this.segments) : boundingBox;\r\n\r\n\t\tthis.segmentOffsets = new Array(this.segments.length);\r\n\t\tvar offset = 0;\r\n\t\tfor (var i = 0; i < this.segments.length; i++) {\r\n\t\t\tthis.segmentOffsets[i] = offset;\r\n\t\t\toffset += this.segments[i].length;\r\n\t\t}\r\n\t\tthis.length = offset;\r\n\t}\r\n\r\n\t//static name = \"Path\";\r\n\r\n\t// Return true if the path is closed and can be considered a shape\r\n\tget isClosed () {\r\n\t\t// console.log('is closed check', this.segments[0].start, this.segments[this.segments.length - 1].end)\r\n\t\treturn\tthis.segments.length > 1\r\n\t\t\t&&\troughlyEqualVec2(this.segments[0].start, this.segments[this.segments.length - 1].end);\r\n\t}\r\n\r\n\tget isCounterClockwise () {return !this.isClockwise}\r\n\tget isContiguous () {\r\n\t\tif (this.segments.length < 2)\r\n\t\t\treturn true;\r\n\r\n\t\tfor (var i = 0; i < this.segments.length - 1; i++) {\r\n\t\t\tvar a = this.segments[i];\r\n\t\t\tvar b = this.segments[i + 1];\r\n\t\t\tif (!roughlyEqualVec2(a.end, b.start))\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tget start () {return this.segments[0].start};\r\n\tget end () {return this.segments[ this.segments.length-1].end};\r\n\r\n\tconcat (path) {return new Path(this.segments.concat(path.segments));}\r\n\r\n\treverse () {\r\n\t\tvar segments = new Array(this.segments.length);\r\n\t\tfor (var i = 0, j = this.segments.length - 1; i < this.segments.length; i++, j--) {\r\n\t\t\tsegments[j] = this.segments[i].reverse();\r\n\t\t}\r\n\t\treturn new Path(segments, !this.isClockwise);\r\n\t}\r\n\r\n\tcut (startOffset, endOffset) {\r\n\t\t//startOffset = startOffset || 0;\r\n\t\t//endOffset = endOffset || this.length;\r\n\t\tvar tolerance = 1e-2;\r\n\r\n\t\tvar firstSegmentToReplace// = this.segments[0];\r\n\t\tvar firstSegmentToReplaceIndex// = 0;\r\n\t\tvar lastSegmentToReplace// = this.segments[ this.segments.length-1];\r\n\t\tvar lastSegmentToReplaceIndex// = this.segments.length - 1;\r\n\r\n\t\tfor (var s = 0; s < this.segments.length; s++) {\r\n\t\t\tvar segmentOffset = this.segmentOffsets[s];\r\n\t\t\tif (segmentOffset < startOffset + tolerance){\r\n\t\t\t\tfirstSegmentToReplaceIndex = s;\r\n\t\t\t\tfirstSegmentToReplace = this.segments[s];\r\n\t\t\t}\r\n\t\t\tif (segmentOffset < endOffset + tolerance) {\r\n\t\t\t\tlastSegmentToReplaceIndex = s;\r\n\t\t\t\tlastSegmentToReplace = this.segments[s];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (firstSegmentToReplace === lastSegmentToReplace) {\r\n\t\t\treturn new Path([new Curve(\r\n\t\t\t\tthis.positionOf(startOffset/*Math.max(0, startOffset)*/),\r\n\t\t\t\tthis.directionOf(startOffset/*Math.max(0, startOffset)*/),\r\n\t\t\t\tthis.positionOf(endOffset/*Math.min(endOffset, this.length)*/)\r\n\t\t\t)]);\r\n\t\t} else {\r\n\t\t\tvar newSegments = this.segments.slice(firstSegmentToReplaceIndex + 1, lastSegmentToReplaceIndex);\r\n\r\n\t\t\tvar newFirstSegment = new Curve(\r\n\t\t\t\tthis.positionOf(startOffset/*Math.max(0, startOffset)*/),\r\n\t\t\t\tthis.directionOf(startOffset/*Math.max(0, startOffset)*/),\r\n\t\t\t\tfirstSegmentToReplace.end\r\n\t\t\t);\r\n\r\n\t\t\tnewSegments.unshift(newFirstSegment);\r\n\r\n\t\t\tvar newLastSegment = new Curve(\r\n\t\t\t\tlastSegmentToReplace.start,\r\n\t\t\t\tlastSegmentToReplace.direction,\r\n\t\t\t\tthis.positionOf(endOffset/*Math.min(endOffset, this.length)*/)\r\n\t\t\t);\r\n\r\n\t\t\tnewSegments.push(newLastSegment);\r\n\r\n\t\t\treturn new Path(newSegments);\r\n\t\t}\r\n\t}\r\n\r\n\tmakeContigous (isLoop) {\r\n\t\tvar newSegments = [];\r\n\r\n\t\tfor (let [segmentA, segmentB] of this.segments.values().windows(2)) {\r\n\t\t\tnewSegments.push(segmentA);\r\n\t\t\tif (!roughlyEqualVec2(segmentA.end, segmentB.start)) {\r\n\t\t\t\tnewSegments.push(new LineSegment(segmentA.end, /*segmentA.endDirection,*/ segmentB.start));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tnewSegments.push(this.segments[ this.segments.length-1]);\r\n\r\n\t\tif (isLoop && !roughlyEqualVec2(this.segments[ this.segments.length-1].end, this.segments[0].start)) {\r\n\t\t\tnewSegments.push(new LineSegment(\r\n\t\t\t\tthis.segments[ this.segments.length-1].end, /*this.segments[ this.segments.length-1].end.endDirection,*/ this.segments[0].start));\r\n\t\t}\r\n\r\n\t\treturn new Path(newSegments);\r\n\t}\r\n\r\n\tsimplifySelfIntersections () {\r\n\t\tvar newSegments = [];\r\n\t\tvar eps = 1/10;\r\n\r\n\t\tvar previousIntersectionPosition;\r\n\r\n\t\tfor (var s = 0; s < this.segments.length; s++) {\r\n\t\t\tvar segment = this.segments[s];\r\n\t\t\tvar foundSelfIntersection = false;\r\n\t\t\tvar intersectionPosition;\r\n\t\t\tvar nextSegmentIndex;\r\n\t\t\tvar otherSegment;\r\n\t\t\tvar offsetOnOtherSegment;\r\n\r\n\t\t\tfor (var o = s + 1; o < this.segments.length + 1; o++) {\r\n\t\t\t\totherSegment = this.segments[o % this.segments.length];\r\n\r\n\t\t\t\tvar intersectionInfos = intersect(segment, otherSegment);\r\n\r\n\t\t\t\tif (intersectionInfos.length > 0) {\r\n\t\t\t\t\tintersectionPosition = intersectionInfos[0].p;\r\n\t\t\t\t\toffsetOnOtherSegment = otherSegment.offsetOf(intersectionPosition);\r\n\r\n\t\t\t\t\tif (offsetOnOtherSegment > eps && offsetOnOtherSegment < otherSegment.length - eps) {\r\n\t\t\t\t\t\t//DebugPoints.add(vec2.toThree(intersectionPosition), 0xff0000, \"si\");\r\n\t\t\t\t\t\tfoundSelfIntersection = true;\r\n\t\t\t\t\t\tnextSegmentIndex = o - 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (previousIntersectionPosition) {\r\n\t\t\t\tvar offsetOfPreviousIntersection = segment.offsetOf(previousIntersectionPosition);\r\n\t\t\t\tvar directionOfPreviousIntersection = segment.directionOf(offsetOfPreviousIntersection);\r\n\r\n\t\t\t\tif (foundSelfIntersection && !roughlyEqualVec2(previousIntersectionPosition, intersectionPosition)) {\r\n\t\t\t\t\tnewSegments.push(new Curve(previousIntersectionPosition, directionOfPreviousIntersection, intersectionPosition));\r\n\t\t\t\t\ts = nextSegmentIndex;\r\n\t\t\t\t\tpreviousIntersectionPosition = intersectionPosition;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnewSegments.push(new Curve(previousIntersectionPosition, directionOfPreviousIntersection, segment.end));\r\n\t\t\t\t\tpreviousIntersectionPosition = undefined;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (foundSelfIntersection) {\r\n\t\t\t\t\tnewSegments.push(new Curve(segment.start, segment.direction, intersectionPosition));\r\n\t\t\t\t\ts = nextSegmentIndex;\r\n\t\t\t\t\tpreviousIntersectionPosition = intersectionPosition;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnewSegments.push(segment);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn new Path(newSegments);\r\n\t}\r\n\r\n\tweld (maxWeldDistance) {\r\n\t\tlet longEnoughSegments = this.segments.filter(s => s.length > maxWeldDistance);\r\n\t\tlet newSegments = [];\r\n\t\tfor (let [segment, nextSegment] of It().windows(2).of(It.concat(longEnoughSegments, [longEnoughSegments[0]])())) {\r\n\t\t\tlet newEnd = segment.end;\r\n\r\n\t\t\tif (roughlyEqualVec2(segment.end, nextSegment.start, maxWeldDistance)) {\r\n\t\t\t\tnewEnd = nextSegment.start;\r\n\t\t\t}\r\n\r\n\t\t\tif (segment.isCurve)\r\n\t\t\t\tnewSegments.push(new Curve(segment.start, segment.direction, newEnd));\r\n\t\t\telse newSegments.push(new LineSegment(segment.start, newEnd));\r\n\t\t}\r\n\t\treturn new Path(newSegments);\r\n\t}\r\n\r\n\tscale (scalar) {\r\n\t\tvar segments = new Array(this.segments.length);\r\n\t\tfor (var i = 0; i < this.segments.length; i++) {\r\n\t\t\tvar each = this.segments[i];\r\n\t\t\tsegments[i] = each.scale(scalar);\r\n\t\t}\r\n\t\treturn new Path(segments, this.isClockwise);\r\n\t}\r\n\r\n\ttranslate (offset) {\r\n\t\tfunction translate(offset) {\r\n\t\t\tvar segments = new Array(this.segments.length);\r\n\t\t\tfor (var i = 0; i < this.segments.length; i++) {\r\n\t\t\t\tvar each = this.segments[i];\r\n\t\t\t\tsegments[i] = each.translate(offset);\r\n\t\t\t}\r\n\t\t\treturn new Path(segments, this.isClockwise);\r\n\t\t}\r\n\t}\r\n\r\n\toffsetPerpendicular (offsetToRight) {\r\n\t\treturn new Path(this.segments.map(function (segment) {\r\n\t\t\treturn segment.offsetPerpendicular(offsetToRight);\r\n\t\t}).filter(segment => segment));\r\n\t}\r\n\r\n\toffsetPerpendicularLength (offsetToRight) {\r\n\t\tvar length = 0;\r\n\t\tfor (var s = 0; s < this.segments.length; s++) {\r\n\t\t\tlength += this.segments[s].offsetPerpendicularLength(offsetToRight);\r\n\t\t}\r\n\t\treturn length;\r\n\t}\r\n\r\n\tmapPerpendicular (offsetA, offsetToRightA, offsetToRightB) {\r\n\t\tvar currentSegment;\r\n\t\tvar currentOffsetA = 0;\r\n\t\tvar currentOffsetB = 0;\r\n\t\tvar tolerance = 1e-2;\r\n\r\n\t\tfor (var s = 0; s < this.segments.length; s++) {\r\n\t\t\tcurrentSegment = this.segments[s];\r\n\t\t\tvar segmentLengthA = currentSegment.offsetPerpendicularLength(offsetToRightA);\r\n\t\t\tvar segmentLengthB = currentSegment.offsetPerpendicularLength(offsetToRightB);\r\n\t\t\tvar nextOffsetA = currentOffsetA + segmentLengthA;\r\n\t\t\tvar nextOffsetB = currentOffsetB + segmentLengthB;\r\n\r\n\t\t\tif (nextOffsetA > offsetA - tolerance) {\r\n\t\t\t\tvar offsetAOnSegment = offsetA - currentOffsetA;\r\n\t\t\t\tvar offsetBOnSegment = currentSegment.mapPerpendicular(offsetAOnSegment, offsetToRightA, offsetToRightB);\r\n\t\t\t\treturn currentOffsetB + offsetBOnSegment;\r\n\t\t\t} else {\r\n\t\t\t\tcurrentOffsetA = nextOffsetA;\r\n\t\t\t\tcurrentOffsetB = nextOffsetB;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t// Return the segments that intersect\r\n\tintersections (b) {\r\n\t\tvar aSegments = this.segments;\r\n\t\tvar bSegments = b.segments;\r\n\t\tvar allIntersections = [];\r\n\t\tfor (var i = 0; i < aSegments.length; i++) {\r\n\t\t\tvar aSegment = aSegments[i];\r\n\t\t\tfor (var j = 0; j < bSegments.length; j++) {\r\n\t\t\t\tvar bSegment = bSegments[j];\r\n\t\t\t\tvar relativeIntersections = intersect(aSegment, bSegment);\r\n\r\n\t\t\t\tfor (var r = 0; r < relativeIntersections.length; r++) {\r\n\t\t\t\t\tvar intersection = relativeIntersections[r];\r\n\r\n\t\t\t\t\t// u,v is meant to be a value between 0,1 - shouldn't they all get scaled?\r\n\t\t\t\t\tintersection.u += i;\r\n\t\t\t\t\tintersection.v += j;\r\n\r\n\t\t\t\t\tallIntersections.push(intersection);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn allIntersections;\r\n\t}\r\n\r\n\t// Use a 'crossings number' to determine if p is inside the path\r\n\tcontainsPoint(p) {\r\n\t\tif (!this.isClosed)\r\n\t\t\treturn false;\r\n\r\n\t\t// Should use an actual Ray here, but the intersections code for\r\n\t\t// Ray-Line, Ray-Curve hasn't been written yet, only Ray-Ray\r\n\t\tvar segments = this.segments,\r\n\t\t\tcrossings = 0,\r\n\t\t\tdegenerate = false,\r\n\t\t\tray = new LineSegment(p, vec2.fromValues(this.boundingBox.right + 1, p[1]));\r\n\t\tfor (var i = 0; i < segments.length; i++) {\r\n\t\t\tvar potentials = intersect(ray, segments[i]);\r\n\t\t\t//console.log(\"containsPoint step\", i + \"/\" + (segments.length - 1), potentials.length);\r\n\r\n\t\t\tfor (var j = 0; j < potentials.length; j++) {\r\n\t\t\t\tif (potentials[j].uIsDegenerate) {\r\n\t\t\t\t\t//console.warn(\"containsPoint uIsDegenerate\", potentials[j]);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\tif (potentials[j].vIsDegenerate) {\r\n\t\t\t\t\tdegenerate = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (degenerate) {\r\n\t\t\t\t// If a point is degenerate, restart the search\r\n\t\t\t\t//console.log(\"containsPoint vIsDegenerate\", potentials[j]);\r\n\t\t\t\ti = -1;\r\n\t\t\t\tcrossings = 0;\r\n\t\t\t\tdegenerate = false;\r\n\t\t\t\t// make the ray longer and rotate it\r\n\t\t\t\tlet alongRayLonger = vec2.sub(vec2(0, 0), ray.end, ray.start);\r\n\t\t\t\tvec2.add(alongRayLonger, alongRayLonger, alongRayLonger);\r\n\t\t\t\tvec2.rotate(alongRayLonger, alongRayLonger, 0.5);\r\n\t\t\t\tvec2.add(ray.end, ray.start, alongRayLonger);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tcrossings += potentials.length;\r\n\t\t}\r\n\t\t//console.log(\"crossings: \" + crossings + \" => contained: \" + ((crossings & 1) == 1));\r\n\t\t//console.canvas(Drawing2D.canvas([this, ray]));\r\n\t\t//console.log(\"containsPoint crossings\", crossings);\r\n\t\treturn (crossings & 1) == 1;\r\n\t}\r\n\r\n\toffsetOf (p, returnInvalid) {\r\n\t\tvar closestSegmentIndex;\r\n\t\tvar closestDistance = Number.POSITIVE_INFINITY;\r\n\t\tvar closestOffset;\r\n\t\tvar closestInvalidOffset;\r\n\t\tvar closestInvalidSegmentIndex;\r\n\t\tvar tolerance = 1e-2;\r\n\r\n\t\tfor (var s = 0; s < this.segments.length; s++) {\r\n\t\t\tvar segment = this.segments[s];\r\n\t\t\tvar closestPoint = segment.closestPointTo(p);\r\n\t\t\tif (closestPoint) {\r\n\t\t\t\tvar distance = vec2.dist(p, closestPoint);\r\n\r\n\t\t\t\tif (distance < closestDistance) {\r\n\t\t\t\t\tvar offset = segment.offsetOf(p);\r\n\t\t\t\t\tif (offset >= -tolerance && offset <= segment.length + tolerance) {\r\n\t\t\t\t\t\tclosestDistance = distance;\r\n\t\t\t\t\t\tclosestSegmentIndex = s;\r\n\t\t\t\t\t\tclosestOffset = offset;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tclosestInvalidOffset = offset;\r\n\t\t\t\t\t\tclosestInvalidSegmentIndex = s\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (closestOffset !== undefined)\r\n\t\t\treturn closestOffset + this.segmentOffsets[closestSegmentIndex];\r\n\t\telse if (returnInvalid)\r\n\t\t\treturn closestInvalidOffset + this.segmentOffsets[closestInvalidSegmentIndex];\r\n\t}\r\n\r\n\tclosestPointTo (p, noEndPoints) {\r\n\t\tvar closestPoint;\r\n\t\tvar closestPointAtEndOfSegment;\r\n\t\tvar closestDistance = Number.POSITIVE_INFINITY;\r\n\t\tvar closestDistanceFromEndOfSegment = Number.POSITIVE_INFINITY;\r\n\t\tvar tolerance = 1e-2;\r\n\r\n\t\tfor (var s = 0; s < this.segments.length; s++) {\r\n\t\t\tvar segment = this.segments[s];\r\n\t\t\tvar closestPointOnSegment = segment.closestPointTo(p);\r\n\t\t\tif (closestPointOnSegment) {\r\n\t\t\t\tvar distance = vec2.dist(p, closestPointOnSegment);\r\n\r\n\t\t\t\tif (distance < closestDistance) {\r\n\t\t\t\t\tclosestDistanceFromEndOfSegment = distance;\r\n\t\t\t\t\tclosestPointAtEndOfSegment = closestPointOnSegment;\r\n\r\n\t\t\t\t\tvar offset = segment.offsetOf(p);\r\n\t\t\t\t\tif (offset >= -tolerance && offset <= segment.length + tolerance) {\r\n\t\t\t\t\t\tclosestDistance = distance;\r\n\t\t\t\t\t\tclosestPoint = closestPointOnSegment;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn closestPoint || (noEndPoints ? undefined : closestPointAtEndOfSegment);\r\n\t}\r\n\r\n\tpositionOf (offset) {\r\n\t\tvar segmentWithPoint = this.segments[0];\r\n\t\tvar segmentWithPointOffset = 0;\r\n\r\n\t\tfor (var s = 0; s < this.segments.length; s++) {\r\n\t\t\tif (this.segmentOffsets[s] > offset)\r\n\t\t\t\tbreak;\r\n\t\t\tif (this.segmentOffsets[s] < offset) {\r\n\t\t\t\tsegmentWithPoint = this.segments[s];\r\n\t\t\t\tsegmentWithPointOffset = this.segmentOffsets[s];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn segmentWithPoint.positionOf(offset - segmentWithPointOffset);\r\n\t}\r\n\r\n\tdirectionOf (offset) {\r\n\t\tvar segmentToUse;\r\n\t\tvar segmentOffset;\r\n\r\n\t\tfor (var s = 0; s < this.segments.length; s++) {\r\n\t\t\tif (this.segmentOffsets[s] > offset) {\r\n\t\t\t\tsegmentToUse = this.segments[s - 1];\r\n\t\t\t\tsegmentOffset = this.segmentOffsets[s - 1];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!segmentToUse) {\r\n\t\t\tsegmentToUse = this.segments[ this.segments.length-1];\r\n\t\t\tsegmentOffset = this.segmentOffsets.last();\r\n\t\t}\r\n\r\n\t\treturn segmentToUse.directionOf(offset - segmentOffset);\r\n\t}\r\n\r\n\tstatic packedSize (path) {\r\n\t\treturn path.segments.length * 2 * 3 * BinaryTypes.getByteSize(\"FloatLE\");\r\n\t}\r\n\r\n\tstatic pack (path, buffer, offset, maxSize) {\r\n\t\tlet fSize = BinaryTypes.getByteSize(\"FloatLE\");\r\n\r\n\t\tfor (let segment of path.segments) {\r\n\t\t\tbuffer.writeFloatLE(segment.start[0]); offset += fSize;\r\n\t\t\tbuffer.writeFloatLE(segment.start[1]); offset += fSize;\r\n\r\n\t\t\tbuffer.writeFloatLE(segment.direction[0]); offset += fSize;\r\n\t\t\tbuffer.writeFloatLE(segment.direction[1]); offset += fSize;\r\n\r\n\t\t\tbuffer.writeFloatLE(segment.end[0]); offset += fSize;\r\n\t\t\tbuffer.writeFloatLE(segment.end[1]); offset += fSize;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic unpack (buffer, offset, size) {\r\n\t\tlet nSegments = size / (2 * 3 * BinaryTypes.getByteSize(\"FloatLE\"));\r\n\t\tlet segments = new Array(nSegments);\r\n\t\tlet fSize = BinaryTypes.getByteSize(\"FloatLE\");\r\n\r\n\t\tfor (let i = 0; i < nSegments; i++) {\r\n\t\t\tlet startX = buffer.readFloatLE(offset); offset += fSize;\r\n\t\t\tlet startY = buffer.readFloatLE(offset); offset += fSize;\r\n\t\t\tlet directionX = buffer.readFloatLE(offset); offset += fSize;\r\n\t\t\tlet directionY = buffer.readFloatLE(offset); offset += fSize;\r\n\t\t\tlet endX = buffer.readFloatLE(offset); offset += fSize;\r\n\t\t\tlet endY = buffer.readFloatLE(offset); offset += fSize;\r\n\r\n\t\t\tsegments[i] = new Curve(\r\n\t\t\t\tvec2(startX, startY), vec2(directionX, directionY), vec2(endX, endY)\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn new Path(segments);\r\n\t}\r\n\r\n\tdump () {\r\n\t\tconsole.log(\"path dump\");\r\n\t\tfor (var i = 0; i < this.segments.length; i++) {\r\n\t\t\tvar segment = this.segments[i];\r\n\t\t\tconsole.log(\r\n\t\t\t\t\"\\t\" + (i + 1) + \"/\" + this.segments.length,\r\n\t\t\t\tsegment.type.typeName,\r\n\t\t\t\tsegment.start[0] + \", \" + segment.start[1],\r\n\t\t\t\t\"to\",\r\n\t\t\t\tsegment.end[0] + \", \" + segment.end[1]);\r\n\t\t}\r\n\t}\r\n\r\n\tget debug () {\r\n\t\tDebugPaths.add(this, 0x0000ff, \"debug\", 0, 1);\r\n\t\treturn \"shown\";\r\n\t}\r\n\r\n\tvertices (offsetToRight, minPointDistance) {\r\n\t\tvar vertices = [];\r\n\t\tvar lastVertex;\r\n\r\n\t\tfor (var s = 0; s < this.segments.length; s++) {\r\n\t\t\tvar segment = this.segments[s];\r\n\t\t\tvar segmentVertices = segment.vertices(offsetToRight);\r\n\r\n\t\t\tfor (var v = 0; v < segmentVertices.length; v++) {\r\n\t\t\t\tvar vertex = segmentVertices[v];\r\n\r\n\t\t\t\tif (!minPointDistance || !lastVertex || vec2.dist(lastVertex, vertex) > minPointDistance)\r\n\t\t\t\t\tvertices.push(vertex);\r\n\r\n\t\t\t\tlastVertex = vertex;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (minPointDistance && this.isClosed) vertices.pop();\r\n\r\n\t\treturn vertices;\r\n\t}\r\n\r\n\tuvs (offsetToRight, multiplierAlongPath) {\r\n\t\tvar uvs = [];\r\n\r\n\t\tfor (var s = 0; s < this.segments.length; s++) {\r\n\t\t\tvar segment = this.segments[s];\r\n\t\t\tvar segmentOffset = this.segmentOffsets[s];\r\n\r\n\t\t\tuvs = uvs.concat(segment.uvs(\r\n\t\t\t\toffsetToRight, multiplierAlongPath\r\n\t\t\t).map(function (uv) {\r\n\t\t\t\tuv[0] += segmentOffset * multiplierAlongPath;\r\n\t\t\t\treturn uv;\r\n\t\t\t}));\r\n\t\t}\r\n\r\n\t\treturn uvs;\r\n\t}\r\n\r\n\tdraw (context) {\r\n\t\tconst DEBUG_DRAW_JOINTS = false;\r\n\t\tif (!this.segments.length) return;\r\n\r\n\t\tcontext.stroke(this);\r\n\r\n\t\tif (!DEBUG_DRAW_JOINTS) return;\r\n\t\tcontext.dot(this.segments[0].start);\r\n\t\tfor (let segment of this.segments) {\r\n\t\t\tcontext.dot(segment.end);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// For an array of segments, determine if they are clockwise or counter-clockwise\r\nfunction orientation(segments) {\r\n\tvar sum = 0;\r\n\tfor (var i = 0; i < segments.length; i++) {\r\n\t\tvar segment = segments[i],\r\n\t\t\tdx = segment.end[0] - segment.start[0],\r\n\t\t\tdy = segment.end[1] + segment.start[1];\r\n\t\tsum += dx * dy;\r\n\t}\r\n\treturn sum > 0;\r\n}\r\n\r\n// Find the boundingBox for an array of segments\r\nvar MAX_VALUE = Number.MAX_VALUE,\r\n\tMIN_VALUE = Number.MIN_VALUE;\r\nfunction aabb(segments) {\r\n\tvar origin = vec2.fromValues(MAX_VALUE, MAX_VALUE),\r\n\t\tcorner = vec2.fromValues(MIN_VALUE, MIN_VALUE);\r\n\tfor (var i = 0; i < segments.length; i++) {\r\n\t\tvar segment = segments[i];\r\n\t\tvar bb = segment.boundingBox;\r\n\t\torigin[0] = Math.min(origin[0], bb.origin[0]);\r\n\t\torigin[1] = Math.min(origin[1], bb.origin[1]);\r\n\t\tcorner[0] = Math.max(corner[0], bb.corner[0]);\r\n\t\tcorner[1] = Math.max(corner[1], bb.corner[1]);\r\n\t}\r\n\treturn RectangleCorner(origin, corner);\r\n}","import vec2 from '../nd-linalg/Vector2';\r\nimport Path from '../shapes/Path';\r\nimport LineSegment from '../primitives/LineSegment';\r\nimport Curve from '../primitives/Curve';\r\n\r\nexport default function Pather(start) {\r\n\tthis.current = start || vec2.fromValues(0, 0);\r\n\tthis.direction = null;\r\n\tthis.segments = [];\r\n\tthis.orientation = 0;\r\n}\r\n\r\nObject.defineProperties(Pather.prototype, {\r\n\t\"name\":\t\t\t\t\t{value: \"Pather\"},\r\n\t\"path\": \t\t\t\t{get: toPath},\r\n\t\"isClockwise\": \t\t\t{get: isClockwise},\r\n\t\"isCounterClockwise\": \t{get: isCounterClockwise},\r\n\r\n\t\"append\": \t\t\t\t{value: append},\r\n\t\"moveTo\": \t\t\t\t{value: moveTo},\r\n\t\"lineTo\": \t\t\t\t{value: lineTo},\r\n\t\"curveTo\": \t\t\t\t{value: curveTo},\r\n\t\"close\": \t\t\t\t{value: close},\r\n\r\n\t\"scale\": \t\t\t\t{value: scale},\r\n\t\"translate\": \t\t\t{value: translate}\r\n});\r\n\r\nfunction toPath() {\r\n\treturn new Path(this.segments, this.isClockwise);\r\n}\r\n\r\nfunction isClockwise() {\r\n\treturn this.orientation > 0;\r\n}\r\n\r\nfunction isCounterClockwise() {\r\n\treturn !this.isClockwise;\r\n}\r\n\r\nfunction append(pather) {\r\n\tif (!pather.segments.length) return;\r\n\tthis.segments = this.segments.concat(pather.segments);\r\n\tthis.current = this.segments[this.segments.length - 1].end;\r\n\tthis.direction = pather.direction;\r\n\tthis.orientation += pather.orientation\r\n\treturn this;\r\n}\r\n\r\nfunction moveTo(position) {\r\n\tthis.current = position;\r\n\tthis.direction = null;\r\n\treturn this;\r\n}\r\n\r\nfunction lineTo(position) {\r\n\tvar line = new LineSegment(this.current, position);\r\n\tthis.segments.push(line);\r\n\tthis.current = line.end;\r\n\tthis.direction = line.direction;\r\n\tupdateOrientation(this);\r\n\treturn this;\r\n}\r\n\r\nfunction curveTo(position, direction) {\r\n\tfunction NoDirection() { throw \"Direction required if no existing segments\"; }\r\n\tvar curve = new Curve(this.current, direction || this.direction || NoDirection(), position);\r\n\tthis.segments.push(curve);\r\n\tthis.current = curve.end;\r\n\tthis.direction = curve.endDirection;\r\n\tupdateOrientation(this);\r\n\treturn this;\r\n}\r\n\r\nfunction close() {\r\n\tif (!this.segments.length)\r\n\t\tthrow \"Cannot close an empty path\";\r\n\tif (this.path.isClosed)\r\n\t\treturn this.path;\r\n\r\n\tvar line = new LineSegment(this.current, this.segments[0].start);\r\n\tthis.segments.push(line);\r\n\tthis.current = line.end;\r\n\tthis.direction = line.direction;\r\n\tupdateOrientation(this);\r\n\r\n\t// console.log('after closing',this.path.isClosed );\r\n\r\n\treturn this.path;\r\n}\r\n\r\nfunction scale(scale) {\r\n\treturn this.path.scale(scale);\r\n}\r\n\r\nfunction translate(offset) {\r\n\treturn this.path.translate(offset);\r\n}\r\n\r\nfunction updateOrientation(pather) {\r\n\tvar segment = pather.segments[pather.segments.length - 1],\r\n\t\tdx = segment.end[0] - segment.start[0],\r\n\t\tdy = segment.end[1] + segment.start[1];\r\n\tpather.orientation += dx * dy;\r\n}\r\n","/* TODO\r\n * Curves\r\n\t1) For curves that are shrinking, only a wavefront that is within its original\r\n\t\tcircle can have a collision event with it\r\n\t2) For curves that are expanding, all vertices have a potential future event\r\n\t\twith the circle? can we limit this some how to only !acute vertices?\r\n\t3) A shrinking curve can collapse in on itself (radius=0)\r\n * Order the pathways from the center outward, return an array of paths rather than\r\n *   haphazard segments, building them up from outside in, merging as it intersects\r\n *\r\n * Find the center line:\r\n *  1) Find the longest spoke-tospoke\r\n *  2) Remove tiny segments\r\n *  3) Remove the first and last segment\r\n *  4) Extent the first and last segment to intersect the nearest original edge\r\n */\r\n\r\nimport vec2 from '../nd-linalg/Vector2';\r\nimport vec3 from '../nd-linalg/Vector3';\r\nimport LineSegment from '../primitives/LineSegment';\r\nimport * as SkeletonEdge from './SkeletonEdge';\r\nimport SkeletonWavefront from './SkeletonWavefront';\r\nimport Pather from '../../es6/helpers/Pather';\r\nimport Ray from '../primitives/Ray';\r\nimport Line from '../primitives/Line';\r\nimport intersect from '../intersections/Intersections';\r\n\r\nvar DeadEdge = Symbol(\"DeadEdge\");\r\nvar infinity = Infinity;\r\nexport default class StraightSkeleton {\r\n\tconstructor(path, length, options) {\r\n\t\toptions = options || {};\r\n\t\tthis.length = length || infinity;\r\n\t\tthis.spokes = [];\r\n\t\tthis.waves = [];\r\n\r\n\t\tthis.DEBUG_DRAW_INITIAL = options.DEBUG_DRAW_INITIAL || false;\r\n\t\tthis.DEBUG_DRAW_SKIPPED_EVENTS = options.DEBUG_DRAW_SKIPPED_EVENTS || false;\r\n\t\tthis.DEBUG_DRAW_STEPS = options.DEBUG_DRAW_STEPS || false;\r\n\t\tthis.DEBUG_DRAW_MOVE = options.DEBUG_DRAW_MOVE || this.DEBUG_DRAW_STEPS;\r\n\t\tthis.DEBUG_DRAW_OBTUSE_EVENTS_EACH_STEP = options.DEBUG_DRAW_OBTUSE_EVENTS_EACH_STEP || false;\r\n\r\n\t\tif (\"capWeight\" in options) {\r\n\t\t\tlet startDirection = vec2.scale(vec2(0, 0), path.segments[0].direction, -1),\r\n\t\t\t\tstartNormal = [-startDirection[1], startDirection[0]],\r\n\t\t\t\tendDirection = path.segments[path.segments.length - 1].direction,\r\n\t\t\t\tendNormal = [-endDirection[1], endDirection[0]];\r\n\r\n\t\t\tlet a = vec2.lerp(vec2(0, 0), startDirection, startNormal, 1 - options.capWeight);\r\n\t\t\tlet b = vec2.lerp(vec2(0, 0), startDirection, startNormal, options.capWeight);\r\n\t\t\tlet c = vec2.lerp(vec2(0, 0), endDirection, endNormal, 1 - options.capWeight);\r\n\t\t\tlet d = vec2.lerp(vec2(0, 0), endDirection, endNormal, options.capWeight);\r\n\r\n\t\t\tthis.caps = [\r\n\t\t\t\tnew Ray(path.start, [b[1], -b[0]]),\r\n\t\t\t\tnew Ray(path.start, a),\r\n\r\n\t\t\t\tnew Ray(path.end, [d[1], -d[0]]),\r\n\t\t\t\tnew Ray(path.end, c),\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\tthis.wavefronts = SkeletonEdge\r\n\t\t\t.create(path, this.length === infinity, this.cap)\r\n\t\t\t.map(each => new SkeletonWavefront(this, each, 0).initialise());\r\n\r\n\t\t//this.process();\r\n\t\toptions.DEBUG ? this.debugprocess() : this.process();\r\n\t}\r\n\r\n\tget name() { return \"StraightSkeleton\"; }\r\n\r\n\tprocess() {\r\n\t\twhile(this.wavefronts.length > 0) {\r\n\t\t\tlet wavefront = this.wavefronts[0];\r\n\t\t\tif (!wavefront.process(this.length)) {\r\n\t\t\t\t// if (this.length === infinity) throw \"EventsExhaustedPrematurely\";\r\n\t\t\t\tthis.commitWavefront(wavefront);\r\n\t\t\t\twavefront.remove();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tdebugprocess() {\r\n\t\twhile(this.wavefronts.length > 0) {\r\n\t\t\tlet wavefront = this.wavefronts[0];\r\n\t\t\tif (!wavefront.debugprocess(this.length)) {\r\n\t\t\t\tif (this.length === infinity) throw \"EventsExhaustedPrematurely\";\r\n\t\t\t\tthis.commitWavefront(wavefront);\r\n\t\t\t\twavefront.remove();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\taddWavefront(wavefront) {\r\n\t\tthis.wavefronts.push(wavefront);\r\n\t}\r\n\r\n\tremoveWavefront(wavefront) {\r\n\t\tthis.wavefronts.splice(this.wavefronts.indexOf(wavefront), 1);\r\n\t}\r\n\r\n\tcommitSkeletonSpoke(start, end) {\r\n\t\tthis.spokes.push(new LineSegment(vec3.clone(start), vec3.clone(end)));\r\n\t}\r\n\r\n\tcommitSkeletonVertex(vertex) {\r\n\t\tlet beginning = vec3(vertex.position[0], vertex.position[1], vertex.wavefront.time);\r\n\t\tthis.commitSkeletonSpoke(vertex.beginning, beginning);\r\n\t\tvertex.beginning = beginning;\r\n\t}\r\n\r\n\tcommitWavefront(wavefront) {\r\n\t\tfor (let edge of wavefront.root)\r\n\t\t\tthis.commitSkeletonVertex(edge.start);\r\n\r\n\t\tif (!(\"caps\" in this))\r\n\t\t\treturn this.commitFullWavefront(wavefront);\r\n\r\n\t\t// Find all the caps\r\n\t\tlet caps = [];\r\n\t\tfor (let edge of wavefront.root)\r\n\t\t\tif (edge.isCap) caps.push(edge);\r\n\r\n\t\tif (caps.length === 0)\r\n\t\t\treturn this.commitFullWavefront(wavefront);\r\n\r\n\t\t// iterate forward, then backward, marking edges as 'dead' until one\r\n\t\t// intersects the cut, which gets split at the cutting point, or another\r\n\t\t// cap is reached\r\n\t\tfor (let cap of caps) {\r\n\t\t\tlet cut = cap.side === SkeletonEdge.StartCapEdge ? this.caps[0] : this.caps[2];\r\n\t\t\tlet current = cap;\r\n\t\t\tlet dead = [];\r\n\t\t\twhile(true) {\r\n\t\t\t\tlet intersections = intersect(current.segment, cut);\r\n\t\t\t\tif (intersections.length !== 0) {\r\n\t\t\t\t\tcurrent.cutsegment = new LineSegment(intersections[0].p, (current.cutsegment || current.segment).end);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!current.isCap) current.side = DeadEdge;\r\n\t\t\t\tdead.push(current);\r\n\r\n\t\t\t\tcurrent = current.next;\r\n\t\t\t\tif (current.isCap) break;\r\n\t\t\t}\r\n\r\n\t\t\tcut = cap.side === SkeletonEdge.EndCapEdge ? this.caps[3] : this.caps[1];\r\n\t\t\tcurrent = cap;\r\n\t\t\tdead = [];\r\n\t\t\twhile(true) {\r\n\t\t\t\tlet intersections = intersect(current.segment, cut);\r\n\t\t\t\tif (intersections.length !== 0) {\r\n\t\t\t\t\tif (current.cutsegment) current.cutreverse = true;\r\n\t\t\t\t\tcurrent.cutsegment = new LineSegment((current.cutsegment || current.segment).start, intersections[0].p);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!current.isCap) current.side = DeadEdge;\r\n\t\t\t\tdead.push(current);\r\n\r\n\t\t\t\tcurrent = current.previous;\r\n\t\t\t\tif (current.isCap) break;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let cap of caps)\r\n\t\t\tif (!cap.cutsegment)\r\n\t\t\t\tcap.side = DeadEdge;\r\n\r\n\t\tthis.commitFullWavefront(wavefront);\r\n\t}\r\n\r\n\tcommitFullWavefront(wavefront) {\r\n\t\tlet side = null, pather = null, segment = null;\r\n\t\tvar commit = () => {\r\n\t\t\tif (pather && side !== DeadEdge)\r\n\t\t\t\tthis.waves.push({\"path\": pather.path, \"side\": side});\r\n\t\t};\r\n\r\n\t\tfor (let edge of wavefront.root) {\r\n\t\t\tsegment = edge.cutsegment || edge.segment;\r\n\t\t\tif (side !== edge.side) {\r\n\t\t\t\tcommit();\r\n\t\t\t\tside = edge.side;\r\n\t\t\t\tpather = new Pather();\r\n\r\n\t\t\t\tif (edge.cutreverse) {\r\n\t\t\t\t\tpather.moveTo(vec2.clone(edge.start.position));\r\n\t\t\t\t\tpather.lineTo(vec2.clone(edge.cutsegment.end));\r\n\t\t\t\t\tcommit();\r\n\t\t\t\t\tpather = new Pather();\r\n\t\t\t\t\tpather.moveTo(vec2.clone(edge.cutsegment.start));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpather.moveTo(vec2.clone(segment.start));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (edge.cutreverse) {\r\n\t\t\t\tpather.lineTo(vec2.clone(edge.segment.end));\r\n\t\t\t} else {\r\n\t\t\t\tpather.lineTo(vec2.clone(segment.end));\r\n\t\t\t}\r\n\t\t}\r\n\t\tcommit();\r\n\t}\r\n\r\n\tdraw(context) {\r\n\t\tfor (let wavefront of this.wavefronts)\r\n\t\t\twavefront.draw(context);\r\n\t\tfor (let spoke of this.spokes)\r\n\t\t\tspoke.draw(context);\r\n\t}\r\n}\r\n","import * as THREE from 'three';\r\nimport { ROUGHLY_EPSILON } from '../missing-stuff';\r\nimport vec3 from '../nd-linalg/Vector3';\r\n\r\nimport cdt2d from 'cdt2d';\r\nimport cleanPSLG from 'clean-pslg';\r\n\r\nexport default Shape;\r\n\r\nfunction Shape(contourPath, holes) {\r\n\tthis.contour = contourPath;\r\n\tthis.holes = holes || [];\r\n}\r\n\r\nObject.defineProperties(Shape.prototype, {\r\n\t\"contains\": {value: contains},\r\n\t\"union\": {value: union},\r\n\t\"difference\": {value: difference},\r\n\t\"intersection\": {value: intersection},\r\n\t\"not\": {value: not},\r\n\t\"triangulate\": {value: triangulate},\r\n\t\"area\": {value: area},\r\n\t\"split\": {value: split},\r\n\t\"grow\": {value: grow},\r\n\t\"growWithSkeleton\": {value: growWithSkeleton}\r\n});\r\n\r\nfunction contains(otherShape) {\r\n\tvar intersects = this.contour.intersections(otherShape.contour).length === 0;\r\n\tif (intersects) return false;\r\n\r\n\tfor (var point of otherShape.contour.segments.map(s => s.start)) {\r\n\t\tif (!this.contour.containsPoint(point)) return false;\r\n\t}\r\n\r\n\treturn true;\r\n}\r\n\r\nfunction union(otherShape) {\r\n\r\n}\r\n\r\nfunction difference(otherShape, clipGrowthOffset) {\r\n\tif (otherShape.contains(this)) return [];\r\n\tvar difference = Clipper.difference(this.contour, otherShape.grow(clipGrowthOffset).contour);\r\n\treturn difference.map(contour => new Shape(contour));\r\n}\r\n\r\nfunction intersection(otherShape) {\r\n\r\n}\r\n\r\nfunction not(otherShape) {\r\n\r\n}\r\n\r\nfunction triangulate(minVertexDistance = 0.00001) {\r\n\tconst geometry = new THREE.Geometry();\r\n\r\n\tconst points = [];\r\n\tconst edges = [];\r\n\r\n\tconst vertices = [];\r\n\r\n\tthis.contour.segments.forEach( function( {start, end}, index ){\r\n\t\tvertices.push( start, end );\r\n\t\tpoints.push( [start[0], start[1]], [end[0], end[1]] );\r\n\t\tedges.push( [index * 2, index * 2 + 1] );\r\n\t});\r\n\r\n\t//\tpreserve z-axis data...\r\n\tconst zs = {};\r\n\tvertices.forEach( function( [x,y,z] ){\r\n\t\tzs[ x.toFixed(4)+'_'+y.toFixed(4) ] = z;\r\n\t});\r\n\r\n\t//\tclean up skeleton + contour because it's not a valid edge loop\r\n\tcleanPSLG( points, edges );\r\n\r\n\tconst triangulation = cdt2d( points, edges, {exterior:false} );\r\n\r\n\tconst points3D = points.map( function( [x,y] ){\r\n\t\tconst key = x.toFixed(4)+'_'+y.toFixed(4);\r\n\t\tconst z = zs[key];\r\n\t\tif( z === undefined ){\r\n\t\t\treturn [ x,y,0 ];\r\n\t\t}\r\n\t\treturn [x,y,z];\r\n\t});\r\n\r\n\t// console.log( zs, points3D );\r\n\r\n\tgeometry.vertices = points3D.map( function( [x,y,z] ){\r\n\t\treturn new THREE.Vector3( x,y,z );\r\n\t});\r\n\r\n\tgeometry.faces = triangulation.map( function( [ix, iy, iz] ){\r\n\t\treturn new THREE.Face3( ix, iy, iz );\r\n\t});\r\n\r\n\treturn geometry;\r\n}\r\n\r\n// function triangulate2(minVertexDistance = 0.00001) {\r\n// \tvar geometry = new THREE.Geometry();\r\n\r\n// \tconst vs = this.contour.vertices(0, minVertexDistance);\r\n\r\n// \t//\tTODO / FIXME\r\n// \t//\tthis is pretty awful, find a more elegant solution...\r\n// \tconst unique = [];\r\n// \tfor( let i=0; i<vs.length; i++ ){\r\n// \t\tconst vertex = vs[ i ];\r\n\r\n// \t\tlet found = false;\r\n// \t\tfor( let s=0; s<unique.length; s++ ){\r\n// \t\t\tif( vec3.dist( unique[ s ], vertex ) < minVertexDistance ){\r\n// \t\t\t\tfound = true;\r\n// \t\t\t\tbreak;\r\n// \t\t\t}\r\n// \t\t}\r\n\r\n// \t\tif( !found ){\r\n// \t\t\tunique.push( vertex );\r\n// \t\t}\r\n// \t}\r\n\r\n// \tconsole.log( unique );\r\n\r\n// \tconst vertices = unique.reduce( function( collection, vertex ){\r\n// \t\tconst z = vertex[2] !== undefined ? vertex[2] : 0;\r\n// \t\tcollection.push( vertex[0], vertex[1], z );\r\n// \t\treturn collection;\r\n// \t}, [] );\r\n\r\n// \t// console.log(vertices);\r\n\r\n// \tvar triangulation = earcut( vertices, null, 3 );\r\n// \tconsole.log(triangulation);\r\n\r\n// \tfor (var i = 0; i < triangulation.length; i +=3){\r\n// \t\tconst ia = triangulation[ i ] * 3;\r\n// \t\tconst ib = triangulation[ i + 1 ] * 3;\r\n// \t\tconst ic = triangulation[ i + 2 ] * 3;\r\n\r\n// \t\tconst va = new THREE.Vector3( vertices[ia], vertices[ia+1], vertices[ia+2] );\r\n// \t\tconst vb = new THREE.Vector3( vertices[ib], vertices[ib+1], vertices[ib+2] );\r\n// \t\tconst vc = new THREE.Vector3( vertices[ic], vertices[ic+1], vertices[ic+2] );\r\n\r\n// \t\tgeometry.vertices.push( va, vb, vc );\r\n// \t\tgeometry.faces.push( new THREE.Face3( i, i+1, i+2 ) );\r\n\r\n// \t\t// console.log( i, va, i+1, vb, i+2, vc );\r\n// \t}\r\n\r\n// \t// console.log( geometry.vertices );\r\n\r\n// \treturn geometry;\r\n// }\r\n\r\nfunction area() {\r\n\tvar vertices = earcut([this.contour.vertices(0, 1)]);\r\n\r\n\tvar area = 0;\r\n\tvar side1 = vec2(0, 0);\r\n\tvar side2 = vec2(0, 0);\r\n\r\n\tfor (var t = 0; t < vertices.length; t += 3) {\r\n\t\tvec2.sub(side1, vertices[t + 1], vertices[t]);\r\n\t\tvec2.sub(side2, vertices[t + 2], vertices[t]);\r\n\t\tarea += 0.5 * Math.abs(vec2.crossz(side1, side2));\r\n\t}\r\n\r\n\treturn area;\r\n}\r\n\r\nfunction split(splittingBiRay) {\r\n\t// TODO faking it by intersecting the shape with two really large boxes on either side of the biray\r\n\t// TODO doesn't handle split resulting in more than 2 shapes\r\n\tvar boxSize = 1000;\r\n\tvar perpendicularDirection = vec2.perpendicular(vec2(0, 0), splittingBiRay.direction);\r\n\r\n\tvar box1 = (new Pather())\r\n\t\t.lineTo(splittingBiRay.direction)\r\n\t\t.lineTo(vec2.add(vec2(0, 0), splittingBiRay.direction, perpendicularDirection))\r\n\t\t.lineTo(vec2.sub(vec2(0, 0), perpendicularDirection, splittingBiRay.direction))\r\n\t\t.lineTo(vec2.negate(vec2(0, 0), splittingBiRay.direction))\r\n\t\t.close()\r\n\t\t.scale(boxSize)\r\n\t\t.translate(splittingBiRay.middle);\r\n\r\n\tvar box2 = box1.translate(vec2.scale(vec2(0, 0), perpendicularDirection, -boxSize));\r\n\r\n\tvar results = [\r\n\t\tClipper.intersection(this.contour, box1)[0],\r\n\t\tClipper.intersection(this.contour, box2)[0]\r\n\t].filter(c => c).map(c => new Shape(c));\r\n\r\n\tfor (var shape of results) {\r\n\t\tif (!shape.contour.isClosed) {\r\n\t\t\tDebugPaths.add(box1, 0x00ff00, \"splitfail\", 0, 2);\r\n\t\t\tDebugPaths.add(this.contour, 0x00ffff, \"splitfail\", 0, 4);\r\n\t\t\tDebugPaths.add(shape.contour, 0xff00ff, \"splitfail\", 0, 4);\r\n\t\t\tthrow(\"splitfail\");\r\n\t\t}\r\n\t}\r\n\r\n\treturn results;\r\n}\r\n\r\nfunction grow (amount) {\r\n\r\n\r\n\t//var offsetContour = this.contour.offsetPerpendicular(this.contour.isCounterClockwise ? amount : -amount);\r\n\t//DebugPaths.add(offsetContour, 0xffffff, \"grow\", 0, 1);\r\n\t//offsetContour = offsetContour.makeContiguous(true);\r\n\t//DebugPaths.add(offsetContour, 0x888888, \"grow\", 0, 1.5);\r\n\t//offsetContour = offsetContour.simplifySelfIntersections();\r\n\t//DebugPaths.add(offsetContour, 0x8800ff, \"grow\", 0, 2);\r\n\treturn new Shape(offsetContour);\r\n}\r\n\r\nfunction growWithSkeleton (amount) {\r\n\tvar skeleton = new Skeleton(amount > 0 ? this.contour : this.contour.reverse(), Math.abs(amount));\r\n\treturn new Shape(skeleton.waves[0].path);\r\n}","// require(\"babel-core/register\")({\r\n// \tblacklist: ['regenerator', 'es6.forOf'],\r\n// \toptional: ['es7.classProperties']\r\n// });\r\n\r\n// import Clipper from './es6/clipper/clipper';\r\n// import Intersections from './es6/intersections/Intersections';\r\n// import PathCollisionCollection from './es6/shapes/PathCollisionCollection';\r\n\r\nimport * as BabelPolyfill from 'babel-polyfill';\r\n\r\nimport Skeleton from './skeleton/Skeleton';\r\n// import Circle from './es6/primitives/Circle';\r\n// import Curve from './es6/primitives/Curve';\r\n// import Line from './es6/primitives/Line';\r\n// import LineSegment from './es6/primitives/LineSegment';\r\n// import Ray from './es6/primitives/Ray';\r\n// import Rectangle from './es6/primitives/Rectangle';\r\n// import Triangle from './es6/primitives/Triangle';\r\nimport Path from './shapes/Path';\r\nimport Pather from './helpers/Pather';\r\nimport Shape from './shapes/Shape';\r\n// import Stroke from './es6/shapes/Stroke';\r\n\r\nconst out = {\r\n\tSkeleton,\r\n\tshapes: {\r\n\t\tPath, Pather, Shape\r\n\t}\r\n};\r\n\r\nmodule.exports = out;\r\n\r\n// module.exports = {\r\n// \tClipper: require('./es6/clipper/Clipper'),\r\n// \tIntersections: require('./es6/intersections/Intersections').default,\r\n// \tPathCollisionCollection: require('./es6/shapes/PathCollisionCollection'),\r\n// \tSkeleton: require('./es6/skeleton/Skeleton').default,\r\n// \tprimitives: {\r\n// \t\tCircle: require('./es6/primitives/Circle'),\r\n// \t\tCurve: require('./es6/primitives/Curve'),\r\n// \t\tLine: require('./es6/primitives/Line'),\r\n// \t\tLineSegment: require('./es6/primitives/LineSegment'),\r\n// \t\tRay: require('./es6/primitives/Ray'),\r\n// \t\tRectangle: require('./es6/primitives/Rectangle'),\r\n// \t\tTriangle: require('./es6/primitives/Triangle')\r\n// \t},\r\n// \tshapes: {\r\n// \t\tPath: require('./es6/shapes/Path').default,\r\n// \t\tPather: require('./es6/helpers/Pather').default,\r\n// \t\tShape: require('./es6/shapes/Shape').default,\r\n// \t\tStroke: require('./es6/shapes/Stroke').default\r\n// \t},\r\n// \tDrawing2D: require('./es6/drawing/Drawing2D')\r\n// };"],"names":["Mathmin","Math","min","Mathmax","max","Mathabs","abs","ROUGHLY_EPSILON","clamp","number","between","roughlyEqual","other","epsilon","roughlyEqualVec2","a","b","roughlyBetween","isRoughly","assert","condition","message","Vector2","x","y","fromValues","require","create","properties","value","crossz","cross","perpendicular","scalePerpendicularAndAdd","angleBetween","angleBetweenWithDirections","rotate","Object","defineProperties","output","scale","theta","dot","len","acos","aDirection","simpleAngle","linearDirection","sub","PI","out","v","angle","c","cos","s","sin","Vector3","z","ax","ay","az","bx","by","bz","atan2","Intersection","u","p","vec2","prototype","get","uIsDegenerate","vIsDegenerate","boundingBox","draw","Rectangle","corner","context","THICKNESS","pointToLineDistance","point","start","direction","perpendicularDirection","rayRayIntersections","det","bToA","normalize","dx","dy","lineLineIntersections","middle","lineRayIntersections","swapuv","rayLineIntersections","lineSegmentRayIntersections","line","ray","rayLineSegmentIntersections","potentials","lineLength","length","intersects","potential","push","lineSegmentLineSegmentIntersections","da","end","db","na","nb","orientation","sorted","id","position","sort","q","r","getAlphaValueAtPosition","order","position1","position2","u1","v1","u2","v2","determinant","uTolerance","vTolerance","lerp","circleLineSegmentIntersections","circle","lineSegmentCircleIntersections","dp","squaredLength","center","cCenter","radius","cInner","cOuter","bb4acCenter","bb4acInner","bb4acOuter","s1Center","sqrt","s2Center","s1Inner","s2Inner","s1Outer","s2Outer","s1","s2","solution1exists","solution2exists","solution1","solution2","AngleTheta","curveLineSegmentIntersections","curve","lineSegmentCurveIntersections","intersections","i","intersection","wedgeContainsPoint","circleCircleIntersections","c0","c1","r0","r1","d","dist","h","cx","cy","rx","ry","curveCurveIntersections","intersectionTypeLookup","intersectionTypeInstall","f","type","RAY","LINE","LINE_SEGMENT","CIRCLE","CURVE","intersect","RayTypeFunction","typeName","LineTypeFunction","LineSegmentTypeFunction","CircleTypeFunction","CurveTypeFunction","top","right","bottom","left","newRectangleCorner","origin","enumerable","getWidth","set","setWidth","getHeight","setHeight","getOrigin","setOrigin","getExtent","setExtent","getCorner","setCorner","containsPoint","translate","expand","width","height","scalar","offset","rectangle","stroke","Triangle","colinear","m","n","LineSegment","createProjection","add","project","midpoint","endDirection","subdivide","reverse","offsetPerpendicular","offsetPerpendicularLength","mapPerpendicular","roughlyContainsPoint","offsetOf","closestPointTo","positionOf","directionOf","vertices","uvs","clone","RectangleCorner","startToPoint","distance","Intersections","scaleAndAdd","offsetToRight","offsetA","offsetToRightA","offsetToRightB","multiplierAlongPath","startUV","endUV","Ray","Number","infinity","negate","arrow","Line","rayOrMiddle","TIME_EPSILON","Infinity","SkeletonWavefront","processor","root","time","edge","wavefront","computeDirection","next","computeDirectionAndSpeed","computeCollapseEvent","computeSplitEvents","maximum","events","nextEvents","move","event","isValid","remove","process","group","log","depth","groupEnd","description","wavefronts","Drawing2D","concat","colour","visuals","spokes","removeWavefront","maxtime","testEvent","eventTime","old","collapseEvent","vertexEvents","delta","pather","Pather","moveTo","lineTo","path","dimmer","alpha","segment","SkeletonSplitEvent","vertex","projection","projectionToEdgePosition","previousEdge","bisector","lineDirection","edgeToEdgePosition","dir1","dir2","lengthAt","projected","projectBy","distance1","distance2","isAcute","futureEdge","futureVertex","_this","filter","ele","name","nextEdge","cut","split","style","legend","join","previous","moved","commitSkeletonVertex","twist1","isDegenerate","twist2","edgeVertex","cutVertex","wavefront0","wavefront1","previous0","previous1","next0","next1","length0","length1","endit","commitSkeletonSpoke","vec3","addWavefront","pair","SkeletonVertex","isFinite","beginning","isParallel","speed","previousLine","nextLine","amount","movementBy","SkeletonCollapseEvent","collapse","lastElementId","Chain","each","Symbol","iterator","current","node","InnerEdge","OuterEdge","StartCapEdge","EndCapEdge","isInfinite","isClosed","createClosedPath","createOpenPath","segments","first","SkeletonEdge","second","edges","Array","slice","connect","side","isCap","startPosition","endPosition","previousDirection","sane","thisshouldnotbehappening","measuring","middle1","middle2","cutreverse","cutsegment","fontsize","textBaseline","textAlign","text","Curve","vChord","sign","chordLength","diff","rayStartToCenter","rayFromStartToCenter","rayHalfChordToCenter","rayFromHalfChordToCenter","angleSpan","createIfValid","e","undefined","vStartToCenter","pHalfChord","vHalfChord","vHalfChordToCenter","head","tail","rotationSign","centerToStart","centerToPoint","vEnd","squaredDistance","tolerance","test","endToStart","dir","sign0","sign1","sign2","centerToEnd","directionAtPoint","angleAToPoint","angleBToPoint","DEBUG_CURVE_DISPLAY","Circle","arrowhead","desiredRadius","scaling","subdivisions","ceil","rotationMatrix","mat2","rotation","pointer","map","It","op","iterable","compose","chain","cycler","flattener","mapping","mapper","predicate","filterer","taker","dropper","size","windower","chunker","otherIterable","commoner","zipper","appender","step","initial","reducerer","firster","finder","item","haser","extremer","maxer","miner","aller","anyer","uniquer","emptyer","concatenation","createIteration","composition","cycle","seenValues","flatten","subIterable","take","drop","startIn","windows","window","shift","chunk","otherItems","Set","common","has","zip","done","append","reduce","reducedValue","find","extreme","bestMetric","best","rest","metric","negativeMapping","negativeMin","all","any","unique","empty","Path","isClockwise","aabb","segmentOffsets","j","startOffset","endOffset","firstSegmentToReplace","firstSegmentToReplaceIndex","lastSegmentToReplace","lastSegmentToReplaceIndex","segmentOffset","newSegments","newFirstSegment","unshift","newLastSegment","isLoop","values","segmentA","segmentB","eps","previousIntersectionPosition","foundSelfIntersection","intersectionPosition","nextSegmentIndex","otherSegment","offsetOnOtherSegment","o","intersectionInfos","offsetOfPreviousIntersection","directionOfPreviousIntersection","maxWeldDistance","longEnoughSegments","of","nextSegment","newEnd","isCurve","currentSegment","currentOffsetA","currentOffsetB","segmentLengthA","segmentLengthB","nextOffsetA","nextOffsetB","offsetAOnSegment","offsetBOnSegment","aSegments","bSegments","allIntersections","aSegment","bSegment","relativeIntersections","crossings","degenerate","alongRayLonger","returnInvalid","closestSegmentIndex","closestDistance","POSITIVE_INFINITY","closestOffset","closestInvalidOffset","closestInvalidSegmentIndex","closestPoint","noEndPoints","closestPointAtEndOfSegment","closestDistanceFromEndOfSegment","closestPointOnSegment","segmentWithPoint","segmentWithPointOffset","segmentToUse","last","minPointDistance","lastVertex","segmentVertices","pop","uv","DEBUG_DRAW_JOINTS","BinaryTypes","getByteSize","buffer","maxSize","fSize","writeFloatLE","nSegments","startX","readFloatLE","startY","directionX","directionY","endX","endY","sum","MAX_VALUE","MIN_VALUE","bb","toPath","isCounterClockwise","curveTo","close","NoDirection","updateOrientation","DeadEdge","StraightSkeleton","options","waves","DEBUG_DRAW_INITIAL","DEBUG_DRAW_SKIPPED_EVENTS","DEBUG_DRAW_STEPS","DEBUG_DRAW_MOVE","DEBUG_DRAW_OBTUSE_EVENTS_EACH_STEP","startDirection","startNormal","endNormal","capWeight","caps","cap","initialise","DEBUG","debugprocess","commitWavefront","splice","indexOf","commitFullWavefront","dead","commit","spoke","Shape","contourPath","holes","contour","contains","union","difference","not","triangulate","area","grow","growWithSkeleton","otherShape","clipGrowthOffset","Clipper","minVertexDistance","geometry","THREE","points","forEach","index","zs","toFixed","triangulation","cdt2d","exterior","points3D","key","faces","ix","iy","iz","earcut","side1","side2","t","splittingBiRay","boxSize","box1","box2","results","shape","offsetContour","skeleton","Skeleton","module","exports"],"mappings":"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"}