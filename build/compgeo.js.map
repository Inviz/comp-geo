{"version":3,"file":"compgeo.js","sources":["../es6/missing-stuff/index.js","../es6/nd-linalg/Vector.js","../es6/nd-linalg/Vector2.js","../es6/nd-linalg/Vector3.js","../es6/helpers/Angles.js","../es6/intersections/Intersections.js","../es6/primitives/Rectangle.js","../es6/primitives/Triangle.js","../es6/primitives/LineSegment.js","../es6/primitives/Ray.js","../es6/primitives/Line.js","../es6/skeleton/SkeletonWavefront.js","../es6/skeleton/SkeletonSplitEvent.js","../es6/skeleton/SkeletonVertex.js","../es6/skeleton/SkeletonCollapseEvent.js","../es6/datastructures/Chain.js","../es6/skeleton/SkeletonEdge.js","../es6/primitives/Curve.js","../es6/iteratorers/index.js","../es6/shapes/Path.js","../es6/helpers/Pather.js","../es6/skeleton/Skeleton.js","../es6/shapes/Shape.js","../es6/index.js"],"sourcesContent":["import Vector2 from '../nd-linalg/Vector2';\n\nconst Mathmin = Math.min,\n\tMathmax = Math.max,\n\tMathabs = Math.abs;\n\nexport const ROUGHLY_EPSILON = 1e-4;\n\nexport function clamp(min, number, max) {\n\treturn Mathmin(Mathmax(number, min), max);\n}\n\nexport function between(min, number, max) {\n\treturn min <= number && number <= max;\n}\n\nexport function withinRange(target, number, range) {\n\t$Number.between(target - range, number, target + range);\n}\n\nexport function betweenModulo(start, number, end, period) {\n\tvar numberModulo = (number % period + period) % period;\n\tvar startModulo = (start % period + period) % period;\n\tvar endModulo = (end % period + period) % period;\n\tif (start <= end) return numberModulo.between(startModulo, end === period ? period : endModulo);\n\telse return numberModulo > startModulo || numberModulo < endModulo;\n}\n\nexport function roughlyEqual(number, other, epsilon) {\n\treturn Mathabs(number - other) <= (epsilon || ROUGHLY_EPSILON);\n}\n\nexport function roughlyEqualVec2( a, b, epsilon ){\n\treturn ( Math.abs(a[0] - b[0]) <= ( epsilon || ROUGHLY_EPSILON) )\n\t\t&& ( Math.abs(a[1] - b[1]) <= ( epsilon || ROUGHLY_EPSILON) );\n}\n\nexport function assertRoughlyEqual(number, other, epsilon ) {\n\treturn assert( Mathabs(number - other) <= ( epsilon || ROUGHLY_EPSILON) );\n}\n\nexport function assertRoughlyEqualVec2(vec, other, epsilon ) {\n\treturn assert( ( Math.abs(vec[0] - other[0]) <= ( epsilon || ROUGHLY_EPSILON) )\n\t\t&& ( Math.abs(vec[1] - other[1]) <= ( epsilon || ROUGHLY_EPSILON) ) );\n}\n\nexport function roughlyBetween(min, number, max, epsilon) {\n\treturn (min < number || isRoughly( min, number, epsilon))\n\t\t&& (number < max || isRoughly( max, number, epsilon));\n}\n\nexport function assert(condition, message) {\n  if (!condition) {\n      throw message || \"Assertion failed\";\n  }\n}\n\nexport function mapPush( map, key, value ){\n\treturn map.set( key, value );\n}\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw message || \"Assertion failed\";\n  }\n}\n\nfunction isRoughly( a, b, epsilon ){\n\treturn Math.abs( a-b ) <= ( epsilon || ROUGHLY_EPSILON );\n}","var VectorFactory = require(\"./VectorFactory\");\nvar {SourceWriter, CodeBuilder} = require(\"../code-builder\");\n\nvar aliases = [\n\t\t\"x\", \"y\", \"z\", \"w\",\n\t\t\"q\", \"r\", \"s\", \"t\",\n\t\t\"u\", \"v\",\n\t\t\"i\", \"j\", \"k\", \"l\",\n\t\t\"m\", \"n\", \"o\", \"p\"];\n\nexport function create(dimensions, destination) {\n\tvar createArray = new Array(dimensions);\n\tfor (var i = 0; i < dimensions; i++) createArray[i] = 0.0;\n\tvar createSource = `\treturn [${createArray.join(\", \")}];`;\n\tvar createFunction = CodeBuilder.compile(\"create\", [], createSource, \"Vector\" + dimensions);\n\n\tvar cloneSource = `\treturn out.slice();`;\n\tvar cloneFunction = CodeBuilder.compile(\"clone\", [\"out\"], cloneSource, \"Vector\" + dimensions);\n\n\tvar decomposed = aliases.slice(0, dimensions);\n\tvar fromSource = `\treturn [${decomposed.join(\", \")}];`;\n\tvar fromFunction = CodeBuilder.compile(\"fromSource\", decomposed, fromSource, \"Vector\" + dimensions);\n\tvar averageFunction = function (out, iterable) {\n\t\tdestination.set(out, 0, 0);\n\t\tlet n = 0;\n\t\tfor (let vector of iterable) {\n\t\t\tdestination.add(out, out, vector);\n\t\t\tn++;\n\t\t}\n\t\treturn destination.scale(out, out, 1 / n);\n\t};\n\n\tvar properties = {\n\t\t\"create\": \t\t{value: createFunction},\n\t\t\"clone\": \t\t{value: cloneFunction},\n\t\t\"fromValues\": \t{value: fromFunction},\n\t\t\"average\":      {value: averageFunction}\n\t};\n\n\tObject.defineProperties(destination, properties);\n\t//Object.defineProperties(fromFunction, properties);\n\n\tvar operations = {\n\t\t\"copy\":\n\t\t\t{\"function\": (cb, a) => a,\n\t\t\t \"arguments\": [\"out\", \"a\"],\n\t\t\t \"types\": [\"vector\", \"vector\"]},\n\t\t\"set\":\n\t\t\t{\"function\": VectorFactory.set(aliases.slice(0, dimensions)),\n\t\t\t \"arguments\": [\"out\"].concat(aliases.slice(0, dimensions)),\n\t\t\t \"types\": aliases.slice(0, dimensions + 1).map(each => \"vector\")},\n\n\t\t\"add\":\n\t\t\t{\"function\": VectorFactory.operation(\"+\"),\n\t\t\t \"arguments\": [\"out\", \"a\", \"b\"],\n\t\t\t \"types\": [\"vector\", \"vector\", \"vector\"]},\n\t\t\"sub\":\n\t\t \t{\"function\": VectorFactory.operation(\"-\"),\n\t\t \t \"arguments\": [\"out\", \"a\", \"b\"],\n\t\t \t \"types\": [\"vector\", \"vector\", \"vector\"]},\n\t\t\"mul\":\n\t\t \t{\"function\": VectorFactory.operation(\"*\"),\n\t\t \t \"arguments\": [\"out\", \"a\", \"b\"],\n\t\t \t \"types\": [\"vector\", \"vector\", \"vector\"]},\n\t\t\"div\":\n\t\t \t{\"function\": VectorFactory.operation(\"/\"),\n\t\t \t \"arguments\": [\"out\", \"a\", \"b\"],\n\t\t \t \"types\": [\"vector\", \"vector\", \"vector\"]},\n\t\t\"min\":\n\t\t \t{\"function\": VectorFactory.min,\n\t\t \t \"arguments\": [\"out\", \"a\", \"b\"],\n\t\t \t \"types\": [\"vector\", \"vector\", \"vector\"]},\n\t\t\"max\":\n\t\t \t{\"function\": VectorFactory.max,\n\t\t \t \"arguments\": [\"out\", \"a\", \"b\"],\n\t\t \t \"types\": [\"vector\", \"vector\", \"vector\"]},\n\n\t\t\"scale\":\n\t\t \t{\"function\": VectorFactory.operation(\"*\"),\n\t\t \t \"arguments\": [\"out\", \"a\", \"b\"],\n\t\t \t \"types\": [\"vector\", \"vector\", \"scalar\"]},\n\t\t\"scaleAndAdd\":\n\t\t \t{\"function\": VectorFactory.scaleAndAdd,\n\t\t \t \"arguments\": [\"out\", \"a\", \"b\", \"c\"],\n\t\t \t \"types\": [\"vector\", \"vector\", \"vector\", \"scalar\"]},\n\t\t\"lerp\":\n\t\t \t{\"function\": VectorFactory.lerp,\n\t\t \t \"arguments\": [\"out\", \"a\", \"b\", \"t\"],\n\t\t \t \"types\": [\"vector\", \"vector\", \"vector\", \"scalar\"]},\n\n\t\t\"negate\":\n\t\t \t{\"function\": VectorFactory.negate,\n\t\t \t \"arguments\": [\"out\", \"a\"],\n\t\t \t \"types\": [\"vector\", \"vector\"]},\n\t\t\"inverse\":\n\t\t \t{\"function\": VectorFactory.inverse,\n\t\t \t \"arguments\": [\"out\", \"a\"],\n\t\t \t \"types\": [\"vector\", \"vector\"]},\n\t\t\"normalize\":\n\t\t \t{\"function\": VectorFactory.normalize,\n\t\t \t \"arguments\": [\"out\", \"a\"],\n\t\t \t \"types\": [\"vector\", \"vector\"]},\n\n\t\t\"dot\":\n\t\t \t{\"function\": VectorFactory.dot,\n\t\t \t \"arguments\": [\"a\", \"b\"],\n\t\t \t \"types\": [\"vector\", \"vector\"]},\n\t\t\"wellFormed\":\n\t\t\t{\"function\": VectorFactory.wellFormed,\n\t\t\t\"arguments\": [\"a\"],\n\t\t\t\"types\": [\"vector\"]},\n\t\t\"squaredLength\":\n\t\t \t{\"function\": VectorFactory.squaredLength,\n\t\t \t \"arguments\": [\"a\"],\n\t\t \t \"types\": [\"vector\"]},\n\t\t\"len\":\n\t\t \t{\"function\": VectorFactory.length,\n\t\t \t \"arguments\": [\"a\"],\n\t\t \t \"types\": [\"vector\"]},\n\t\t\"squaredDistance\":\n\t\t \t{\"function\": VectorFactory.squaredDistance,\n\t\t \t \"arguments\": [\"a\", \"b\"],\n\t\t \t \"types\": [\"vector\", \"vector\"]},\n\t\t\"dist\":\n\t\t \t{\"function\": VectorFactory.distance,\n\t\t \t \"arguments\": [\"a\", \"b\"],\n\t\t \t \"types\": [\"vector\", \"vector\"]},\n\t\t\"sum\":\n\t\t\t{\"function\": VectorFactory.sum,\n\t\t\t \"arguments\": [\"a\"],\n\t\t\t \"types\": [\"vector\"]}\n\t};\n\n\tfor (let operationName in operations) {\n\t\tlet cb = new CodeBuilder(),\n\t\t\tsource = new SourceWriter(),\n\t\t\toperation = operations[operationName],\n\t\t\targs = [];\n\n\t\tcb.temporariesPool = aliases.slice();\n\n\t\tlet output = operation[\"arguments\"][0] == \"out\";\n\t\tfor (let i = (output ? 1 : 0); i < operation[\"arguments\"].length; i++) {\n\t\t\tlet name = operation[\"arguments\"][i],\n\t\t\t\ttype = operation[\"types\"][i];\n\t\t\tswitch(type) {\n\t\t\t\tcase \"scalar\":\n\t\t\t\t\targs.push(cb.scalar(name));\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"vector\":\n\t\t\t\t\targs.push(cb.vector(dimensions, name));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow \"Unknown type for function argument\";\n\t\t\t}\n\t\t}\n\n\t\tlet body = operation[\"function\"].apply(null, [cb].concat(args));\n\t\tif (output) body = cb.assign(cb.vector(dimensions, \"out\"), body);\n\t\tbody = cb.output(body);\n\n\t\tsource.tab();\n\t\t\tcb.write(source, [body]);\n\t\tsource.untab();\n\n\t\tlet compiled = CodeBuilder.compile(operationName, operation[\"arguments\"], source.string, \"Vector\" + dimensions);\n\t\t//fromFunction[operationName] || Object.defineProperty(fromFunction, operationName, {value: compiled});\n\t\tdestination[operationName] || Object.defineProperty(destination, operationName, {value: compiled});\n\t}\n}\n","import { clamp } from '../missing-stuff';\nimport { create } from './Vector';\n\nvar Vector2 = function (x, y) {\n\treturn Vector2.fromValues(x, y);\n};\ncreate(2, Vector2);\n\nlet properties = {\n\t\"crossz\": \t                    {value: crossz},\n\t\"cross\": \t                    {value: cross},\n\t\"perpendicular\":                {value: perpendicular},\n\t\"scalePerpendicularAndAdd\":     {value: scalePerpendicularAndAdd},\n\t\"angleBetween\": \t\t\t\t{value: angleBetween},\n\t\"angleBetweenWithDirections\": \t{value: angleBetweenWithDirections},\n\t\"rotate\":                \t\t{value: rotate}\n}\n\nObject.defineProperties(Vector2, properties);\n// module.exports = Vector2;\nexport default Vector2\n\nfunction crossz(a, b) {\n\treturn a[0] * b[1] - b[0] * a[1];\n}\n\nfunction cross(output, a, b) {\n\toutput[0] = 0;\n\toutput[1] = 1;\n\toutput[2] = crossz(a, b);\n\treturn output;\n}\n\nfunction perpendicular(output, a) {\n\toutput[0] = a[1];\n\toutput[1] = -a[0];\n\treturn output;\n}\n\nfunction scalePerpendicularAndAdd(output, a, b, scale) {\n\toutput[0] = a[0] + b[1] * scale;\n\toutput[1] = a[1] - b[0] * scale;\n\treturn output;\n}\n\nfunction angleBetween(a, b) {\n\tvar theta = Vector2.dot(a, b) / (Vector2.len(a) * Vector2.len(b));\n\treturn Math.acos(clamp( theta,-1, 1) );\n}\n\nfunction angleBetweenWithDirections(a, aDirection, b) {\n\tvar simpleAngle = angleBetween(a, b);\n\tvar linearDirection = Vector2.sub(Vector2.fromValues(0, 0), b, a);\n\n\tif (Vector2.dot(aDirection, linearDirection) >= 0) {\n\t\treturn simpleAngle;\n\t} else {\n\t\treturn 2 * Math.PI - simpleAngle;\n\t}\n}\n\nfunction rotate(out, v, angle) {\n//\tslow version:\n//\treturn Matrix2x2.map(out, Matrix2x2.rotation(angle), v);\n\n\tvar x = v[0], y = v[1],\n\t\tc = Math.cos(angle),\n\t\ts = Math.sin(angle);\n\n\tout[0] = c * x - s * y;\n\tout[1] = s * x + c * y;\n\treturn out;\n}","import { create } from './Vector';\nvar Vector3 = function (x, y, z) {\n\treturn Vector3.fromValues(x, y, z);\n};\n\ncreate(3, Vector3);\nObject.defineProperties(Vector3, {\n\t\"cross\": \t{value: cross}\n});\nexport default Vector3\n\nfunction cross(output, a, b) {\n\tvar ax = a[0], ay = a[1], az = a[2],\n\t\tbx = b[0], by = b[1], bz = a[2];\n\n\toutput[0] = ay * bz - az * by;\n\toutput[1] = az * bx - ax * bz;\n\toutput[2] = ax * by - ay * bx;\n\treturn output;\n}\n","import vec2 from '../nd-linalg/Vector2';\r\n\r\nexport {theta, angleFrom};\r\n\r\nfunction theta(v) {\r\n\tvar angle = Math.atan2(v[1], v[0]);\r\n\treturn (angle < 0 ? angle + (2 * Math.PI) : angle) / (2 * Math.PI);\r\n}\r\n\r\nfunction angleFrom(p, center) {\r\n\treturn theta(vec2.sub(vec2(0, 0), p, center));\r\n}","import { assert } from '../missing-stuff';\r\nimport {theta as AngleTheta} from '../helpers/Angles';\r\nimport vec2 from '../nd-linalg/Vector2';\r\nimport {clamp, between, roughlyEqual, roughlyEqualVec2, ROUGHLY_EPSILON} from '../missing-stuff';\r\n\r\nexport default intersect;\r\n\r\nfunction Intersection(x, y, u, v) {\r\n\tthis.p = vec2.fromValues(x, y);\r\n\tthis.u = u;\r\n\tthis.v = v;\r\n}\r\n\r\nObject.defineProperties(Intersection.prototype,\t{\r\n\t\"isDegenerate\": \t{get: function() { return this.uIsDegenerate || this.vIsDegenerate; }},\r\n\t\"uIsDegenerate\": \t{get: function() { return roughlyEqual(this.u, 0) || roughlyEqual(this.u, 1); }},\r\n\t\"vIsDegenerate\": \t{get: function() { return roughlyEqual(this.v, 0) || roughlyEqual(this.v, 1); }},\r\n\r\n\t\"boundingBox\": \t\t{get: boundingBox},\r\n\t\"draw\": \t\t\t{value: draw}\r\n});\r\n\r\nfunction boundingBox() {\r\n\treturn Rectangle.corner(this.p, this.p);\r\n}\r\n\r\nfunction draw(context) {\r\n\tcontext.dot(this.p);\r\n}\r\n\r\nfunction tidydown(number) {\r\n\t// if the number is < 0 but > -EPSILON then make it 0\r\n\tif (number < 0 && number > -ROUGHLY_EPSILON)\r\n\t\treturn 0;\r\n\treturn number;\r\n}\r\n\r\nfunction tidyup(number) {\r\n\t// if the number is > 1 but < 1 + EPSILON then make it 1\r\n\tif (number > 1 && number < (1 + ROUGHLY_EPSILON))\r\n\t\treturn 1;\r\n\treturn number;\r\n}\r\n\r\nconst THICKNESS = 0.03;\r\nexport {THICKNESS};\r\n\r\nfunction pointToLineDistance(point, start, direction) {\r\n\tlet perpendicularDirection = vec2.perpendicular(vec2(0, 0), direction);\r\n\treturn Math.abs(vec2.dot(vec2.sub(vec2(0, 0), point, start), perpendicularDirection));\r\n}\r\n\r\n// http://stackoverflow.com/questions/2931573/determining-if-two-rays-intersect\r\nfunction rayRayIntersections(a, b) {\r\n\tvar det = b.direction[0] * a.direction[1] - b.direction[1] * a.direction[0];\r\n\r\n\t// Parallel, overlap or no intersection\r\n\tif (roughlyEqual(det, 0)) {\r\n\t\t// edge case: same start position\r\n\t\tif (roughlyEqualVec2(a.start, b.start, THICKNESS))\r\n\t\t\treturn [new Intersection(a.start[0], a.start[1], 0, 0)];\r\n\r\n\t\t// not facing the same direction\r\n\t\tif (!roughlyEqualVec2(a.direction, b.direction)) return [];\r\n\r\n\t\t// too far apart\r\n\t\tif (pointToLineDistance(a.start, b.start, b.direction) > THICKNESS) return [];\r\n\r\n\t\t// a contains b or b contains a depending on the\r\n\t\t// direction from a.start to b.start\r\n\t\tvar bToA = vec2(0, 0);\r\n\t\tvec2.sub(bToA, b.start, a.start);\r\n\t\tvec2.normalize(bToA, bToA);\r\n\t\tif (roughlyEqualVec2(a.direction, bToA))\r\n\t\t\treturn [new Intersection(b.start[0], b.start[1], 0, 0)];\r\n\t\telse\r\n\t\t\treturn [new Intersection(a.start[0], a.start[1], 0, 0)];\r\n\t}\r\n\r\n\tvar dx = b.start[0] - a.start[0];\r\n\tvar dy = b.start[1] - a.start[1];\r\n\tvar u = (dy * b.direction[0] - dx * b.direction[1]) / det;\r\n\tvar v = (dy * a.direction[0] - dx * a.direction[1]) / det;\r\n\r\n\t// No intersection\r\n\tif (u < -THICKNESS || v < -THICKNESS)\r\n\t\treturn [];\r\n\r\n\tif (u < 0 && u > -THICKNESS) u = 0;\r\n\tif (v < 0 && v > -THICKNESS) v = 0;\r\n\r\n\treturn [new Intersection(a.start[0] + u * a.direction[0], a.start[1] + u * a.direction[1], u, v)];\r\n}\r\n\r\nfunction lineLineIntersections(a, b) {\r\n\tvar det = b.direction[0] * a.direction[1] - b.direction[1] * a.direction[0];\r\n\r\n\t// Parallel, overlap or no intersection\r\n\tif (roughlyEqual(det, 0)) {\r\n\t\t// edge case: same start position\r\n\t\tif (roughlyEqualVec2(a.middle, b.middle, THICKNESS))\r\n\t\t\treturn [new Intersection(a.middle[0], a.middle[1], 0, 0)];\r\n\r\n\t\t// too far apart\r\n\t\tif (pointToLineDistance(a.middle, b.middle, b.direction) > THICKNESS) return [];\r\n\r\n\t\t// a contains b or b contains a depending on the\r\n\t\t// direction from a.middle to b.middle\r\n\t\tvar c = vec2(0, 0);\r\n\t\tvec2.sub(c, b.middle, a.middle);\r\n\t\tvec2.normalize(c, c);\r\n\t\tif (roughlyEqualVec2(a.direction, c))\r\n\t\t\treturn [new Intersection(b.middle[0], b.middle[1], 0, 0)];\r\n\t\telse\r\n\t\t\treturn [new Intersection(a.middle[0], a.middle[1], 0, 0)];\r\n\t}\r\n\r\n\tvar dx = b.middle[0] - a.middle[0];\r\n\tvar dy = b.middle[1] - a.middle[1];\r\n\tvar u = (dy * b.direction[0] - dx * b.direction[1]) / det;\r\n\tvar v = (dy * a.direction[0] - dx * a.direction[1]) / det;\r\n\r\n\treturn [new Intersection(a.middle[0] + u * a.direction[0], a.middle[1] + u * a.direction[1], u, v)];\r\n}\r\n\r\nfunction lineRayIntersections(a, b) { return swapuv(rayLineIntersections(b, a)); }\r\nfunction rayLineIntersections(a, b) {\r\n\tvar det = b.direction[0] * a.direction[1] - b.direction[1] * a.direction[0];\r\n\r\n\t// Parallel, overlap or no intersection\r\n\tif (roughlyEqual(det, 0)) {\r\n\t\t// edge case: same start position\r\n\t\tif (roughlyEqualVec2(a.start, b.middle, THICKNESS))\r\n\t\t\treturn [new Intersection(a.start[0], a.start[1], 0, 0)];\r\n\r\n\t\t// too far apart\r\n\t\tif (pointToLineDistance(a.start, b.middle, b.direction) > THICKNESS) return [];\r\n\r\n\t\t// a contains b or b contains a depending on the\r\n\t\t// direction from a.start to b.middle\r\n\t\tvar c = vec2(0, 0);\r\n\t\tvec2.sub(c, b.middle, a.start);\r\n\t\tvec2.normalize(c, c);\r\n\t\tif (roughlyEqualVec2(a.direction, c))\r\n\t\t\treturn [new Intersection(b.middle[0], b.middle[1], 0, 0)];\r\n\t\telse\r\n\t\t\treturn [new Intersection(a.start[0], a.start[1], 0, 0)];\r\n\t}\r\n\r\n\tvar dx = b.middle[0] - a.start[0];\r\n\tvar dy = b.middle[1] - a.start[1];\r\n\tvar u = (dy * b.direction[0] - dx * b.direction[1]) / det;\r\n\tvar v = (dy * a.direction[0] - dx * a.direction[1]) / det;\r\n\r\n\t// No intersection\r\n\tif (u < -THICKNESS)\r\n\t\treturn [];\r\n\r\n\tif (u < 0 && u > -THICKNESS) u = 0;\r\n\r\n\treturn [new Intersection(a.start[0] + u * a.direction[0], a.start[1] + u * a.direction[1], u, v)];\r\n}\r\n\r\nfunction lineSegmentRayIntersections(line, ray) { return swapuv(rayLineSegmentIntersections(ray, line)); }\r\nfunction rayLineSegmentIntersections(ray, line) {\r\n\tvar potentials = rayRayIntersections(ray, line),\r\n\t\tlineLength = line.length,\r\n\t\tintersects = [];\r\n\tfor (let potential of potentials) {\r\n\t\tif (potential.v <= lineLength + THICKNESS) {\r\n\t\t\tpotential.v /= lineLength;\r\n\t\t\tpotential.v = Math.min(potential.v, 1);\r\n\t\t\tintersects.push(potential);\r\n\t\t}\r\n\t}\r\n\treturn intersects;\r\n}\r\n\r\nfunction lineSegmentLineSegmentIntersections(a, b) {\r\n\tvar da = vec2.sub(vec2(0, 0), a.end, a.start);\r\n\tvar db = vec2.sub(vec2(0, 0), b.end, b.start);\r\n\tvar na = vec2.normalize(vec2(0, 0), da);\r\n\tvar nb = vec2.normalize(vec2(0, 0), db);\r\n\tvar orientation = vec2.crossz(na, nb);\r\n\r\n\t// Parallel - overlapping or no intersection\r\n\tif (roughlyEqual(orientation, 0)) {\r\n\t\t// too far apart\r\n\t\tif (pointToLineDistance(a.start, b.start, b.direction) > THICKNESS) return [];\r\n\r\n\t\t// edge case: both lines have zero length\r\n\t\tif (roughlyEqual(a.length, 0) && roughlyEqual(b.length, 0))\r\n\t\t\treturn [];\r\n\r\n\t\t// sort the positions by either the x-coordinate, or y-coordinate if they\r\n\t\t// share the same x-coordinate. If they share the same x and y coordinates\r\n\t\t// then the shared point test later will pick it up.\r\n\t\t// this will leave the sorted array as:\r\n\t\t//     [outside, inside, inside, outside]\r\n\t\t//     [n/a, shared, shared, n/a]\r\n\t\t//     [n/a, shared, inside, outside]\r\n\t\t//     [outside, inside, shared, n/a]\r\n\t\t// or for the case where there is no intersection\r\n\t\t//     [outside, outside, outside, outside]\r\n\t\tvar sorted = [\r\n\t\t\t{id: 0, position: a.start},\r\n\t\t\t{id: 1, position: a.end},\r\n\t\t\t{id: 2, position: b.start},\r\n\t\t\t{id: 3, position: b.end}\r\n\t\t];\r\n\t\tif (roughlyEqual(a.start[0], a.end[0], THICKNESS) && roughlyEqual(b.start[0], b.end[0], THICKNESS)) {\r\n\t\t\tsorted.sort(function(q, r) { return q.position[1] > r.position[1]; });\r\n\t\t} else {\r\n\t\t\tsorted.sort(function(q, r) { return q.position[0] > r.position[0]; });\r\n\t\t}\r\n\r\n\t\t// Shared point in the center\r\n\t\tif (roughlyEqualVec2(sorted[1].position, sorted[2].position, THICKNESS)) {\r\n\t\t\tvar position = sorted[1].position;\r\n\t\t\treturn [new Intersection(\r\n\t\t\t\tposition[0],\r\n\t\t\t\tposition[1],\r\n\t\t\t\ta.getAlphaValueAtPosition(position),\r\n\t\t\t\tb.getAlphaValueAtPosition(position))];\r\n\t\t}\r\n\r\n\t\t// Check if the first two points in the sorted set are (a.start, a.end), or (b.start, b.end)\r\n\t\t// indicating that the two lines do not overlap\r\n\t\tvar order = sorted[0].id + sorted[1].id;\r\n\t\tif (order == 1 || order == 5)\r\n\t\t\treturn [];\r\n\r\n\t\tvar position1 = sorted[1].position,\r\n\t\t\tposition2 = sorted[2].position,\r\n\t\t\tu1 = a.getAlphaValueAtPosition(position1),\r\n\t\t\tv1 = b.getAlphaValueAtPosition(position1),\r\n\t\t\tu2 = a.getAlphaValueAtPosition(position2),\r\n\t\t\tv2 = b.getAlphaValueAtPosition(position2);\r\n\r\n\t\treturn [\r\n\t\t\tnew Intersection(position1[0], position1[1], u1, v1),\r\n\t\t\tnew Intersection(position2[0], position2[1], u2, v2)\r\n\t\t];\r\n\t}\r\n\r\n\tvar determinant = vec2.crossz(db, da);\r\n\tvar u = ((db[0] * (b.start[1] - a.start[1])) - (db[1] * (b.start[0] - a.start[0]))) / determinant;\r\n\tvar v = ((da[0] * (b.start[1] - a.start[1])) - (da[1] * (b.start[0] - a.start[0]))) / determinant;\r\n\t//u = tidydown(tidyup(u));\r\n\t//v = tidydown(tidyup(v));\r\n\r\n\t// No intersection\r\n\t// TODO: for flat angles this approximation is stupid\r\n\t// u might be much further away from 0 than -Thickness,\r\n\t// even when lines are just thickness apart\r\n\tconst uTolerance = THICKNESS / vec2.len(da);\r\n\tconst vTolerance = THICKNESS / vec2.len(db);\r\n\tif (!between(-uTolerance, u, 1 + uTolerance)) return [];\r\n\tif (!between(-vTolerance, v, 1 + vTolerance)) return [];\r\n\r\n\tu = clamp(0, u, 1);\r\n\tv = clamp(0, v, 1);\r\n\r\n\tvar p = vec2(0, 0);\r\n\tvec2.lerp(p, a.start, a.end, u);\r\n\treturn [new Intersection(p[0], p[1], u, v)];\r\n}\r\n\r\nfunction circleLineSegmentIntersections(circle, line) { return swapuv(lineSegmentCircleIntersections(line, circle)) }\r\nfunction lineSegmentCircleIntersections(line, circle) {\r\n\tvar dp = vec2(0, 0);\r\n\tvec2.sub(dp, line.end, line.start);\r\n\tvar a = vec2.squaredLength(dp);\r\n\tvar b = 2 * (dp[0] * (line.start[0] - circle.center[0]) + dp[1] * (line.start[1] - circle.center[1]));\r\n\tvar c = vec2.squaredLength(circle.center);\r\n\tc += vec2.squaredLength(line.start);\r\n\tc -= 2 * (circle.center[0] * line.start[0] + circle.center[1] * line.start[1]);\r\n\tvar cCenter = c - circle.radius * circle.radius;\r\n\tvar cInner = c - (circle.radius * circle.radius - THICKNESS * THICKNESS);\r\n\tvar cOuter = c - (circle.radius * circle.radius + THICKNESS * THICKNESS);\r\n\tvar bb4acCenter = b * b - 4 * a * cCenter;\r\n\tvar bb4acInner = b * b - 4 * a * cInner;\r\n\tvar bb4acOuter = b * b - 4 * a * cOuter;\r\n\r\n\t// No intersection\r\n\tif (Math.abs(a) <= ROUGHLY_EPSILON || (bb4acCenter < 0 && bb4acInner < 0 && bb4acOuter < 0))\r\n\t\treturn [];\r\n\r\n\tvar s1Center = (-b + Math.sqrt(bb4acCenter)) / (2 * a);\r\n\tvar s2Center = (-b - Math.sqrt(bb4acCenter)) / (2 * a);\r\n\tvar s1Inner = (-b + Math.sqrt(bb4acInner)) / (2 * a);\r\n\tvar s2Inner = (-b - Math.sqrt(bb4acInner)) / (2 * a);\r\n\tvar s1Outer = (-b + Math.sqrt(bb4acOuter)) / (2 * a);\r\n\tvar s2Outer = (-b - Math.sqrt(bb4acOuter)) / (2 * a);\r\n\r\n\tvar s1 = between(0, s1Center, 1) ? s1Center : between(0, s1Outer, 1) ? s1Outer : s1Inner;\r\n\tvar s2 = between(0, s2Center, 1) ? s2Center : between(0, s2Outer, 1) ? s2Outer : s2Inner;\r\n\r\n\tvar solution1exists = between(0, s1, 1);\r\n\tvar solution2exists = !roughlyEqual(s1, s2) && between(0, s2, 1);\r\n\tvar solution1, solution2;\r\n\tvar p = vec2(0, 0);\r\n\r\n\t// Solution 1\r\n\tif (solution1exists) {\r\n\t\tsolution1 = new Intersection(line.start[0] + s1 * dp[0], line.start[1] + s1 * dp[1], s1, null);\r\n\t\tvec2.sub(p, solution1.p, circle.center);\r\n\t\tsolution1.v = AngleTheta(p);\r\n\t\tif (!solution2exists)\r\n\t\t\treturn [solution1];\r\n\t} else {\r\n\t\tif (!solution2exists)\r\n\t\t\treturn [];\r\n\t}\r\n\r\n\t// Solution 2\r\n\tif (solution2exists) {\r\n\t\tsolution2 = new Intersection(line.start[0] + s2 * dp[0], line.start[1] + s2 * dp[1], s2, null);\r\n\t\tvec2.sub(p, solution2.p, circle.center);\r\n\t\tsolution2.v = AngleTheta(p);\r\n\t\tif (!solution1exists)\r\n\t\t\treturn [solution2];\r\n\t}\r\n\r\n\treturn [solution1, solution2];\r\n}\r\n\r\nfunction curveLineSegmentIntersections(curve, line) { return swapuv(lineSegmentCurveIntersections(line, curve)) }\r\nfunction lineSegmentCurveIntersections(line, curve) {\r\n\t//throw \"No!!\"\r\n\tvar potentials = lineSegmentCircleIntersections(line, curve);\r\n\tvar intersections = [];\r\n\tfor (var i = 0; i < potentials.length; i++) {\r\n\t\tvar intersection = potentials[i];\r\n\t\tif (curve.wedgeContainsPoint(intersection.p, THICKNESS)) {\r\n\t\t\tintersection.v = curve.getAlphaValueAtPosition(intersection.p);\r\n\t\t\tintersection.u = clamp(0, intersection.u, 1);\r\n\t\t\tintersection.v = clamp(0, intersection.v, 1);\r\n\t\t\tintersections.push(intersection);\r\n\t\t}\r\n\t}\r\n\treturn intersections;\r\n}\r\n\r\nfunction circleCircleIntersections(a, b) {\r\n\tvar c0 = a.center;\r\n\tvar c1 = b.center;\r\n\tvar r0 = a.radius;\r\n\tvar r1 = b.radius;\r\n\tvar d = vec2.dist(c0, c1);\r\n\r\n\t// No solution, circles are the same\r\n\tif (d == 0 && r0 == r1)\r\n\t\treturn [];\r\n\r\n\t// No solution, circles do not intersect\r\n\tif (d > (r0 + r1))\r\n\t\treturn [];\r\n\r\n\t// No solution, one circle inside the other\r\n\tif (d < Math.abs(r0 - r1))\r\n\t\treturn [];\r\n\r\n\t// Determine the distance from center c0 to centroid\r\n\tvar c = (r0 * r0 - r1 * r1 + d * d) / (2 * d);\r\n\r\n\t// Determine the distance from centroid to either intersection point\r\n\tvar h = Math.sqrt(r0 * r0 - c * c);\r\n\r\n\t// Determine position of centroid\r\n\tvar dx = c1[0] - c0[0];\r\n\tvar dy = c1[1] - c0[1];\r\n\tvar cx = c0[0] + (dx * c / d);\r\n\tvar cy = c0[1] + (dy * c / d);\r\n\r\n\t// Determine the offset vector from the centroid to the intersection points\r\n\tvar rx = -dy * h / d;\r\n\tvar ry = dx * h / d;\r\n\r\n\t\"Solution 1\"\r\n\tvar p = vec2(0, 0);\r\n\tvar solution1 = new Intersection(cx + rx, cy + ry, 0, 0);\r\n\tvec2.sub(p, solution1.p, c0);\r\n\tsolution1.u = AngleTheta(p);\r\n\tvec2.sub(p, solution1.p, c1);\r\n\tsolution1.v = AngleTheta(p);\r\n\r\n\tif (roughlyEqual(h, 0))\r\n\t\treturn [solution1];\r\n\r\n\t\"Solution 2\"\r\n\tvar solution2 = new Intersection(cx - rx, cy - ry, 0, 0);\r\n\tvec2.sub(p, solution2.p, c0);\r\n\tsolution2.u = AngleTheta(p);\r\n\tvec2.sub(p, solution2.p, c1);\r\n\tsolution2.v = AngleTheta(p);\r\n\treturn [solution1, solution2];\r\n}\r\n\r\nfunction curveCurveIntersections(a, b) {\r\n\tvar intersections = [];\r\n\r\n\tif (roughlyEqualVec2(a.center, b.center, THICKNESS)\r\n\t\t&& roughlyEqual(a.radius, b.radius, THICKNESS)) {\r\n\t\tif (a.wedgeContainsPoint(b.start, THICKNESS))\r\n\t\t\tintersections.push(\r\n\t\t\t\tnew Intersection(b.start[0], b.start[1], a.getAlphaValueAtPosition(b.start), 0));\r\n\r\n\t\tif (a.wedgeContainsPoint(b.end, THICKNESS))\r\n\t\t\tintersections.push(\r\n\t\t\t\tnew Intersection(b.end[0], b.end[1], a.getAlphaValueAtPosition(b.end), 1));\r\n\r\n\t\tif (intersections.length == 2)\r\n\t\t\treturn intersections;\r\n\r\n\t\tif (b.wedgeContainsPoint(a.start, THICKNESS))\r\n\t\t\tintersections.push(\r\n\t\t\t\tnew Intersection(a.start[0], a.start[1], 0, b.getAlphaValueAtPosition(a.start)));\r\n\r\n\t\tif (intersections.length == 2)\r\n\t\t\treturn intersections;\r\n\r\n\t\tif (b.wedgeContainsPoint(a.end, THICKNESS))\r\n\t\t\tintersections.push(\r\n\t\t\t\tnew Intersection(a.end[0], a.end[1], 1, b.getAlphaValueAtPosition(a.end)));\r\n\r\n\t\treturn intersections;\r\n\t}\r\n\r\n\tvar potentials = circleCircleIntersections(a, b);\r\n\tfor (var i = 0; i < potentials.length; i++) {\r\n\t\tvar intersection = potentials[i];\r\n\t\t//console.log(\"curve-curve potential\", intersection);\r\n\t\tif (a.wedgeContainsPoint(intersection.p, THICKNESS) &&\r\n\t\t\tb.wedgeContainsPoint(intersection.p, THICKNESS)) {\r\n\t\t\tintersection.u = a.getAlphaValueAtPosition(intersection.p);\r\n\t\t\tintersection.v = b.getAlphaValueAtPosition(intersection.p);\r\n\t\t\tintersections.push(intersection);\r\n\t\t}\r\n\t}\r\n\treturn intersections;\r\n}\r\n\r\nfunction swapuv(intersections) {\r\n\tfor (var i = 0; i < intersections.length; i++) {\r\n\t\tvar intersection = intersections[i],\r\n\t\t\tu = intersection.u,\r\n\t\t\tv = intersection.v;\r\n\t\tintersection.u = v;\r\n\t\tintersection.v = u;\r\n\t}\r\n\treturn intersections;\r\n}\r\n\r\nfunction notYetImplemented(a, b) {\r\n\tthrow \"Intersection combination not yet implemented\";\r\n}\r\n\r\n// RAY = 1 and 2\r\n// LINE_SEGMENT = 4 and 8\r\n// CIRCLE = 16 and 32\r\n// CURVE = 64 and 128\r\n//\r\n// RAY(1) + RAY(2) = 3\r\n// RAY(1) + LINE_SEGMENT(4) = 5\r\n// LINE_SEGMENT(4) + RAY(2) = 6\r\n// LINE_SEGMENT(4) + LINE_SEGMENT(8) = 12\r\n// LINE_SEGMENT(4) + CIRCLE(16) = 20\r\n// CIRCLE(16) + LINE_SEGMENT(8) = 24\r\n// CIRCLE(16) + CIRCLE(32) = 48\r\n// etc\r\nvar intersections = [];\r\nfunction intersectionTypeLookup(a, b) { return a + 2 * b }\r\nfunction intersectionTypeInstall(a, b, f) {\r\n\tvar type = intersectionTypeLookup(a, b);\r\n\tassert(intersections[type] == null);\r\n\tintersections[type] = f;\r\n}\r\n\r\nvar RAY = 1;\r\nvar LINE = 4;\r\nvar LINE_SEGMENT = 16;\r\nvar CIRCLE = 64;\r\nvar CURVE = 256;\r\nintersectionTypeInstall(RAY         , RAY         , rayRayIntersections);\r\nintersectionTypeInstall(RAY         , LINE        , rayLineIntersections);\r\nintersectionTypeInstall(RAY         , LINE_SEGMENT, rayLineSegmentIntersections);\r\nintersectionTypeInstall(LINE        , LINE        , lineLineIntersections);\r\nintersectionTypeInstall(LINE        , RAY         , lineRayIntersections);\r\nintersectionTypeInstall(LINE_SEGMENT, RAY         , lineSegmentRayIntersections);\r\nintersectionTypeInstall(LINE_SEGMENT, LINE_SEGMENT, lineSegmentLineSegmentIntersections);\r\nintersectionTypeInstall(LINE_SEGMENT, CIRCLE      , lineSegmentCircleIntersections);\r\nintersectionTypeInstall(LINE_SEGMENT, CURVE       , lineSegmentCurveIntersections);\r\nintersectionTypeInstall(CIRCLE      , LINE_SEGMENT, circleLineSegmentIntersections);\r\nintersectionTypeInstall(CIRCLE      , CIRCLE      , circleCircleIntersections);\r\nintersectionTypeInstall(CURVE       , LINE_SEGMENT, curveLineSegmentIntersections);\r\nintersectionTypeInstall(CURVE       , CURVE       , curveCurveIntersections);\r\n\r\nfunction intersect(a, b) {\r\n\t// I know what you're thinking. I've thought the same thing\r\n\t// quite a few times myself. You're here because of an exception\r\n\t// or perhaps you're just reading the code. If you're just\r\n\t// reading the code then you're thinking this is an odd kind of\r\n\t// comment to stumble upon. If you're here because of an\r\n\t// exception you're thinking gee I wish there was a catch here\r\n\t// to make sure 'a' and 'b' are actually geometric objects that\r\n\t// we can measure the intersection between. You must resist the\r\n\t// temptation to add such a test because intersect() is called\r\n\t// all over the place, constantly and in many tight loops. Your\r\n\t// real issue is somewhere else up in the stack. Go look there,\r\n\t// not here. Here you will find no answers, only pain and\r\n\t// suffering and darkness and all that other stuff the Jedi\r\n\t// want you to believe about the dark side that clearly isn't\r\n\t// true. The dark side just wants us to be ourselves, to feel\r\n\t// our emotions and learn to be responsible with it. It's that\r\n\t// Lucas fellow and his strange 'light side' and 'dark side'\r\n\t// biases that have fooled so much of the world in to believing\r\n\t// that the dark side only leads to gibbering power hungry\r\n\t// idiots with no self control and that somehow living a life\r\n\t// without love, with attachments, is the ultimate way to be\r\n\t// in touch with the force. I've digressed. The point is, you\r\n\t// don't want to look here, your issue is elsewhere.\r\n\tvar type = intersectionTypeLookup(a.type(), b.type());\r\n\treturn intersections[type](a, b);\r\n};\r\n\r\nintersect.RayTypeFunction = function() { return RAY; }\r\nintersect.RayTypeFunction.typeName = \"ray\";\r\nintersect.LineTypeFunction = function() { return LINE; }\r\nintersect.RayTypeFunction.typeName = \"line\";\r\nintersect.LineSegmentTypeFunction = function() { return LINE_SEGMENT; }\r\nintersect.LineSegmentTypeFunction.typeName = \"lineSegment\";\r\nintersect.CircleTypeFunction = function() { return CIRCLE; }\r\nintersect.CircleTypeFunction.typeName = \"circle\";\r\nintersect.CurveTypeFunction = function() { return CURVE; }\r\nintersect.CurveTypeFunction.typeName = \"curve\";\r\n","import vec2 from '../nd-linalg/Vector2';\r\n\r\nexport default Rectangle;\r\n\r\nexport {\r\n\tnewRectangleCorner as corner,\r\n\tnewRectangleExtent as extent,\r\n\tnewRectanglePoint as point,\r\n\tnewRectangleMinMax as minmax,\r\n\tnewRectangleZero as zero\r\n};\r\n\r\nfunction Rectangle(top, right, bottom, left) {\r\n\tthis.top = top;\r\n\tthis.bottom = bottom;\r\n\tthis.left = left;\r\n\tthis.right = right;\r\n}\r\n\r\nfunction newRectangleCorner(origin, corner) {\r\n\treturn new Rectangle(origin[1], corner[0], corner[1], origin[0]);\r\n}\r\n\r\nfunction newRectangleExtent(origin, extent) {\r\n\treturn new Rectangle(\r\n\t\torigin[1],\r\n\t\torigin[0] + extent[0],\r\n\t\torigin[1] + extent[1],\r\n\t\torigin[0]);\r\n}\r\n\r\nfunction newRectanglePoint(position) {\r\n\treturn newRectangleCorner(position, position);\r\n}\r\n\r\nfunction newRectangleMinMax() {\r\n\treturn new Rectangle(Infinity, -Infinity, -Infinity, Infinity);\r\n}\r\n\r\nfunction newRectangleZero() {\r\n\treturn new Rectangle(0, 0, 0, 0);\r\n}\r\n\r\nObject.defineProperties(Rectangle.prototype, {\r\n\t\"name\": \t\t\t{value: \"Rectangle\"},\r\n\t\"width\": \t\t\t{enumerable: true, get: getWidth, set: setWidth},\r\n\t\"height\": \t\t\t{enumerable: true, get: getHeight, set: setHeight},\r\n\t\"center\": \t\t\t{get: center},\r\n\t\"origin\": \t\t\t{get: getOrigin, set: setOrigin},\r\n\t\"extent\": \t\t\t{get: getExtent, set: setExtent},\r\n\t\"corner\": \t\t\t{get: getCorner, set: setCorner},\r\n\t\"boundingBox\": \t\t{get: boundingBox},\r\n\r\n\t\"containsPoint\": \t{value: containsPoint},\r\n\t\"scale\": \t\t\t{value: scale},\r\n\t\"translate\": \t\t{value: translate},\r\n\t\"expand\": \t\t\t{value: expand},\r\n\r\n\t\"draw\": \t\t\t{value: draw}\r\n});\r\n\r\nfunction getWidth() {\r\n\treturn this.right - this.left;\r\n}\r\n\r\nfunction setWidth(value) {\r\n\tthis.right = this.left + value;\r\n}\r\n\r\nfunction getHeight() {\r\n\treturn this.bottom - this.top;\r\n}\r\n\r\nfunction setHeight(value) {\r\n\tthis.bottom = this.top + value;\r\n}\r\n\r\nfunction center() {\r\n\tvar center = vec2(0, 0);\r\n\tvec2.lerp(center, this.origin, this.corner, 0.5);\r\n\treturn center;\r\n}\r\n\r\nfunction getOrigin() {\r\n\treturn vec2.fromValues(this.left, this.top);\r\n}\r\n\r\nfunction setOrigin(v) {\r\n\tthis.left = v[0];\r\n\tthis.top = v[1];\r\n}\r\n\r\nfunction getExtent() {\r\n\treturn vec2.fromValues(this.width, this.height);\r\n}\r\n\r\nfunction setExtent(v) {\r\n\tthis.width = v[0];\r\n\tthis.height = v[1];\r\n}\r\n\r\nfunction getCorner() {\r\n\treturn vec2.fromValues(this.right, this.bottom);\r\n}\r\n\r\nfunction setCorner(v) {\r\n\tthis.right = v[0];\r\n\tthis.bottom = v[1];\r\n}\r\n\r\nfunction boundingBox() {\r\n\treturn this;\r\n}\r\n\r\nfunction containsPoint(p) {\r\n\treturn this.left <= p[0] && p[0] < this.right && this.top <= p[1] && p[1] < this.bottom;\r\n}\r\n\r\nfunction scale(scalar) {\r\n\treturn new Rectangle(\r\n\t\tthis.top * scalar,\r\n\t\tthis.right * scalar,\r\n\t\tthis.bottom * scalar,\r\n\t\tthis.left * scalar);\r\n}\r\n\r\nfunction translate(offset) {\r\n\treturn new Rectangle(\r\n\t\tthis.top + offset[1],\r\n\t\tthis.right + offset[0],\r\n\t\tthis.bottom + offset[1],\r\n\t\tthis.left + offset[0]);\r\n}\r\n\r\nfunction expand(rectangle) {\r\n\treturn new Rectangle(\r\n\t\tMath.min(this.top, rectangle.top),\r\n\t\tMath.max(this.right, rectangle.right),\r\n\t\tMath.max(this.bottom, rectangle.bottom),\r\n\t\tMath.min(this.left, rectangle.left));\r\n}\r\n\r\nfunction draw(context) {\r\n\tcontext.stroke(this);\r\n}\r\n","import { roughlyEqual } from '../missing-stuff';\r\n\r\nexport default class Triangle {\r\n\tconstructor(a, b, c) {\r\n\t\tthis.a = a;\r\n\t\tthis.b = b;\r\n\t\tthis.c = c;\r\n\t}\r\n\r\n\tget isColinear() { return colinear(this.a, this.b, this.c); }\r\n\tget center() { return center(this.a, this.b, this.c); }\r\n}\r\n\r\nexport function colinear(a, b, c) {\r\n\tconst m = (c[0] - a[0]) * (b[1] - a[1]);\r\n\tconst n = ((b[0] - a[0]) * (c[1] - a[1]));\r\n\treturn roughlyEqual( n, m );\r\n}\r\n\r\nexport function center(a, b, c) {\r\n\treturn [(a[0] + b[0] + c[0]) / 3,\r\n\t\t\t(a[1] + b[1] + c[1]) / 3];\r\n}\r\n","import intersect from '../intersections/Intersections';\r\nimport vec2 from '../nd-linalg/Vector2';\r\nimport {corner as RectangleCorner} from './Rectangle';\r\nimport * as Triangle from './Triangle';\r\nimport { roughlyEqual, roughlyBetween } from '../missing-stuff';\r\n// import { colinear } from triangle;\r\n\r\nexport default LineSegment;\r\n\r\nfunction LineSegment(start, end) {\r\n\tthis.start = start;\r\n\tthis.end = end;\r\n\tthis.direction = vec2.sub(vec2(0, 0), this.end, this.start);\r\n\tthis.length = vec2.len(this.direction);\r\n\tvec2.normalize(this.direction, this.direction);\r\n}\r\n\r\nfunction createProjection(start, direction, length) {\r\n\tvar end = vec2.scale(vec2(0, 0), direction, length || 1);\r\n\tvec2.add(end, start, end);\r\n\treturn new LineSegment(start, end);\r\n}\r\n\r\nLineSegment.project = createProjection;\r\n\r\nObject.defineProperties(LineSegment.prototype, {\r\n\t\"name\": \t\t\t\t\t\t{value: \"LineSegment\"},\r\n\t\"type\": \t\t\t\t\t\t{value: intersect.LineSegmentTypeFunction},\r\n\t\"isRay\": \t\t\t\t\t\t{value: false},\r\n\t\"isLineSegment\": \t\t\t\t{value: true},\r\n\t\"isCurve\": \t\t\t\t\t\t{value: false},\r\n\t\"isCircle\": \t\t\t\t\t{value: false},\r\n\r\n\t\"midpoint\": \t\t\t\t\t{get: midpoint},\r\n\t\"boundingBox\": \t\t\t\t\t{get: boundingBox},\r\n\t\"endDirection\": \t\t\t\t{get: endDirection},\r\n\r\n\t\"subdivide\": \t\t\t\t\t{value: subdivide},\r\n\t\"reverse\": \t\t\t\t\t\t{value: reverse},\r\n\t\"scale\": \t\t\t\t\t\t{value: scale},\r\n\t\"translate\": \t\t\t\t\t{value: translate},\r\n\t\"offsetPerpendicular\": \t\t\t{value: offsetPerpendicular},\r\n\r\n\t\"offsetPerpendicularLength\":\t{value: offsetPerpendicularLength},\r\n\t\"mapPerpendicular\": \t\t\t{value: mapPerpendicular},\r\n\r\n\t\"containsPoint\": \t\t\t\t{value: containsPoint},\r\n\t\"roughlyContainsPoint\": \t\t{value: roughlyContainsPoint},\r\n\t\"getAlphaValueAtPosition\":\t\t{value: getAlphaValueAtPosition},\r\n\t\"offsetOf\": \t\t\t\t\t{value: offsetOf},\r\n\t\"closestPointTo\": \t\t\t\t{value: closestPointTo},\r\n\t\"positionOf\": \t\t\t\t\t{value: positionOf},\r\n\t\"directionOf\": \t\t\t\t\t{value: directionOf},\r\n\r\n\t\"vertices\": \t\t\t\t\t{value: vertices},\r\n\t\"uvs\": \t\t\t\t\t\t\t{value: uvs},\r\n\t\"draw\": \t\t\t\t\t\t{value: draw}\r\n});\r\n\r\nfunction midpoint() {\r\n\tvar midpoint = vec2(0, 0);\r\n\tvec2.lerp(midpoint, this.start, this.end, 0.5);\r\n\treturn midpoint;\r\n}\r\n\r\nvar min = Math.min,\r\n\tmax = Math.max;\r\nfunction boundingBox() {\r\n\tvar origin = vec2.clone(this.start);\r\n\tvar corner = vec2.clone(this.start);\r\n\torigin[0] = min(origin[0], this.end[0]);\r\n\torigin[1] = min(origin[1], this.end[1]);\r\n\tcorner[0] = max(corner[0], this.end[0]);\r\n\tcorner[1] = max(corner[1], this.end[1]);\r\n\treturn RectangleCorner(origin, corner);\r\n}\r\n\r\nfunction endDirection() {\r\n\treturn this.direction;\r\n}\r\n\r\nfunction subdivide(p) {\r\n\treturn [new LineSegment(this.start, p), new LineSegment(p, this.end)];\r\n}\r\n\r\nfunction reverse() {\r\n\treturn new LineSegment(this.end, this.start);\r\n}\r\n\r\nfunction scale(scalar) {\r\n\tvar start = vec2.clone(this.start),\r\n\t\tend = vec2.clone(this.end);\r\n\tvec2.scale(start, start, scalar);\r\n\tvec2.scale(end, end, scalar);\r\n\treturn new LineSegment(start, end);\r\n}\r\n\r\nfunction translate(offset) {\r\n\tvar start = vec2.clone(this.start),\r\n\t\tend = vec2.clone(this.end);\r\n\tvec2.add(start, start, offset);\r\n\tvec2.add(end, end, offset);\r\n\treturn new LineSegment(start, end);\r\n}\r\n\r\nfunction containsPoint(point) {\r\n\tlet perpendicularDirection = vec2.perpendicular(vec2(0, 0), direction);\r\n\tlet startToPoint = vec2.sub(vec2(0, 0), start, p);\r\n\tlet distance = Math.abs(vec2.dot(startToPoint, perpendicularDirection));\r\n\tlet u = vec2.dot(startToPoint, this.direction);\r\n\treturn distance < Intersections.THICKNESS && u > -THICKNESS && u < this.length + THICKNESS;\r\n\r\n}\r\n\r\nfunction roughlyContainsPoint(p) {\r\n\t// http://stackoverflow.com/questions/328107/how-can-you-determine-a-point-is-between-two-other-points-on-a-line-segment\r\n\tlet start = this.start, end = this.end;\r\n\treturn Triangle.colinear(start, p, end)\r\n\t\t&& ((roughlyEqual(start[0], p[0]) || roughlyEqual(end[0], p[0]))\r\n\t\t\t? roughlyBetween( start[1], p[1], end[1]) || roughlyBetween( end[1], p[1], start[1])\r\n\t\t\t: roughlyBetween( start[0], p[0], end[0]) || roughlyBetween( end[0], p[0], start[0]));\r\n}\r\n\r\n\r\nfunction getAlphaValueAtPosition(p) {\r\n\treturn vec2.dist(this.start, p) / this.length;\r\n}\r\n\r\nfunction directionOf(p) {\r\n\treturn this.direction;\r\n}\r\n\r\nfunction offsetOf(p) {\r\n\treturn vec2.dot(this.direction, vec2.sub(vec2(0, 0), p, this.start));\r\n}\r\n\r\nfunction closestPointTo(p) {\r\n\tvar offset = this.offsetOf(p);\r\n\r\n\tif (offset < 0)\r\n\t\treturn this.start;\r\n\tif (offset > this.length)\r\n\t\treturn this.end;\r\n\r\n\treturn vec2.scaleAndAdd(vec2(0, 0), this.start, this.direction, offset);\r\n}\r\n\r\nfunction positionOf(offset) {\r\n\treturn vec2.scaleAndAdd(vec2(0, 0), this.start, this.direction, offset);\r\n}\r\n\r\nfunction offsetPerpendicular(offsetToRight) {\r\n\treturn new LineSegment(\r\n\t\tvec2.scalePerpendicularAndAdd(vec2(0, 0), this.start, this.direction, offsetToRight),\r\n\t\tvec2.scalePerpendicularAndAdd(vec2(0, 0), this.end, this.direction, offsetToRight)\r\n\t);\r\n}\r\n\r\nfunction offsetPerpendicularLength(offsetToRight) {\r\n\treturn this.length;\r\n}\r\n\r\nfunction mapPerpendicular(offsetA, offsetToRightA, offsetToRightB) {\r\n\treturn offsetA;\r\n}\r\n\r\nfunction vertices(offsetToRight) {\r\n\toffsetToRight = offsetToRight || 0;\r\n\tvar start = offsetToRight\r\n\t\t? vec2.scalePerpendicularAndAdd(vec2(0, 0), this.start, this.direction, offsetToRight)\r\n\t\t: this.start;\r\n\tvar end = offsetToRight\r\n\t\t? vec2.scalePerpendicularAndAdd(vec2(0, 0), this.end, this.direction, offsetToRight)\r\n\t\t: this.end;\r\n\treturn [start, end];\r\n}\r\n\r\nfunction uvs(offsetToRight, multiplierAlongPath) {\r\n\tvar startUV = vec2.fromValues(0, offsetToRight);\r\n\tvar endUV = vec2.fromValues(this.length * multiplierAlongPath, offsetToRight);\r\n\treturn [startUV, endUV];\r\n}\r\n\r\nfunction draw(context) {\r\n\tcontext.stroke(this);\r\n}\r\n","import Intersections from '../intersections/Intersections';\r\nimport vec2 from '../nd-linalg/Vector2';\r\n\r\nexport default Ray;\r\n\r\nfunction Ray(start, direction) {\r\n\tthis.start = start;\r\n\tthis.direction = direction;\r\n}\r\n\r\nObject.defineProperties(Ray.prototype, {\r\n\t\"name\": \t\t{value: \"Ray\"},\r\n\t\"type\": \t\t{value: Intersections.RayTypeFunction},\r\n\t\"isRay\": \t\t{value: true},\r\n\t\"isLineSegment\": \t\t{value: false},\r\n\t\"isCurve\": \t\t{value: false},\r\n\t\"isCircle\": \t{value: false},\r\n\r\n\t\"length\": \t\t{value: Number.infinity},\r\n\t\"end\": \t\t\t{value: vec2.fromValues(Number.infinity, Number.infinity)},\r\n\t\"midpoint\": \t{value: Number.infinity},\r\n\r\n\t\"subdivide\": \t{value: subdivide},\r\n\t\"reverse\": \t\t{value: reverse},\r\n\t\"scale\": \t\t{value: scale},\r\n\t\"translate\": \t{value: translate},\r\n\r\n\t\"draw\": \t\t{value: draw},\r\n\t\"boundingBox\": \t{get: boundingBox}\r\n});\r\n\r\nfunction subdivide(p) {\r\n\treturn [new LineSegment(this.start, p), new Ray(p, this.direction)];\r\n}\r\n\r\nfunction reverse() {\r\n\treturn new Ray(this.start, vec2.negate(vec2(0, 0), this.direction));\r\n}\r\n\r\nfunction scale(scalar) {\r\n\tvar start = vec2.clone(this.start);\r\n\tvec2.scale(start, start, scalar);\r\n\treturn new Ray(start, this.direction);\r\n}\r\n\r\nfunction translate(offset) {\r\n\tvar start = vec2.clone(this.start);\r\n\tvec2.add(start, start, offset);\r\n\treturn new Ray(start, this.direction);\r\n}\r\n\r\nfunction boundingBox() {\r\n\treturn Rectangle.point(this.start);\r\n}\r\n\r\nfunction draw(context) {\r\n\tcontext.arrow(this.start, this.direction);\r\n}\r\n","import Intersections from '../intersections/Intersections';\r\nimport vec2 from '../nd-linalg/Vector2';\r\n\r\nexport default Line;\r\n\r\nfunction Line(rayOrMiddle, direction) {\r\n\tif (rayOrMiddle.type === Intersections.RayTypeFunction) {\r\n\t\tthis.middle = rayOrMiddle.start;\r\n\t\tthis.direction = rayOrMiddle.direction;\r\n\t\treturn this;\r\n\t}\r\n\tthis.middle = rayOrMiddle; // LOL!\r\n\tthis.direction = direction;\r\n}\r\n\r\nObject.defineProperties(Line.prototype, {\r\n\t\"name\": \t\t{value: \"Line\"},\r\n\t\"type\": \t\t{value: Intersections.LineTypeFunction},\r\n\t\"isRay\": \t\t{value: true},\r\n\t\"isLineSegment\":{value: false},\r\n\t\"isCurve\": \t\t{value: false},\r\n\t\"isCircle\": \t{value: false},\r\n\r\n\t\"length\": \t\t{value: Number.infinity},\r\n\t\"start\": \t\t{value: vec2.fromValues(Number.infinity, Number.infinity)},\r\n\t\"end\": \t\t\t{value: vec2.fromValues(Number.infinity, Number.infinity)},\r\n\t\"midpoint\": \t{value: midpoint}, // ALSO LOL!\r\n\t\"boundingBox\": \t{get: boundingBox}, // TROLLOLOLOL\r\n\r\n\t\"subdivide\": \t{value: subdivide},\r\n\t\"reverse\": \t\t{value: reverse},\r\n\t\"scale\": \t\t{value: scale},\r\n\t\"translate\": \t{value: translate},\r\n\r\n\t\"draw\": \t\t{value: draw}\r\n});\r\n\r\nfunction midpoint() {\r\n\treturn this.middle;\r\n}\r\n\r\nfunction subdivide(p) {\r\n\tthrow \"Cannot subdivide a bidirection ray\";\r\n}\r\n\r\nfunction reverse() {\r\n\treturn this;\r\n}\r\n\r\nfunction scale(scalar) {\r\n\tthrow \"Cannot scale a bidirectional ray\";\r\n}\r\n\r\nfunction translate(offset) {\r\n\tvar middle = vec2.clone(this.middle);\r\n\tvec2.add(middle, middle, offset);\r\n\treturn new Line(middle, this.direction);\r\n}\r\n\r\nfunction boundingBox() {\r\n\treturn Rectangle.point(this.middle);\r\n}\r\n\r\nfunction draw(context) {\r\n\tcontext.arrow(this.middle, this.direction, 0.5);\r\n\tcontext.arrow(this.middle, vec2.scale(vec2(0, 0), this.direction, -1), 0.5);\r\n}\r\n","import { roughlyEqual } from '../missing-stuff';\r\n\r\nconst TIME_EPSILON = 1e-8;\r\nvar max = Math.max;\r\nvar infinity = Infinity;\r\nvar weakmap = WeakMap;\r\n\r\nvar id = 0;\r\nexport default class SkeletonWavefront {\r\n\tconstructor(processor, root, time) {\r\n\t\tthis.id = id++;\r\n\t\tthis.processor = processor;\r\n\t\tthis.root = root;\r\n\t\tthis.time = time;\r\n\r\n\t\t// take ownership of edges and compute length\r\n\t\tvar length = 0;\r\n\t\tfor (let edge of root) {\r\n\t\t\tlength++;\r\n\t\t\tedge.wavefront = this;\r\n\t\t}\r\n\t\tthis.length = length;\r\n\t}\r\n\r\n\tinitialise() {\r\n\t\t// compute initial edge direction\r\n\t\tlet edge = this.root;\r\n\t\twhile(true) {\r\n\t\t\tedge.computeDirection();\r\n\t\t\tedge = edge.next;\r\n\t\t\tif (edge === this.root) break;\r\n\t\t}\r\n\r\n\t\t// compute initial vertex direction and speed\r\n\t\twhile(true) {\r\n\t\t\tedge.start.computeDirectionAndSpeed();\r\n\t\t\tedge = edge.next;\r\n\t\t\tif (edge === this.root) break;\r\n\t\t}\r\n\r\n\t\t// compute initial collapse events\r\n\t\twhile(true) {\r\n\t\t\tedge.computeCollapseEvent();\r\n\t\t\tedge = edge.next;\r\n\t\t\tif (edge === this.root) break;\r\n\t\t}\r\n\r\n\t\t// compute initial cut/split events\r\n\t\twhile(true) {\r\n\t\t\tedge.computeSplitEvents();\r\n\t\t\tedge = edge.next;\r\n\t\t\tif (edge === this.root) break;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tprocess(maximum) {\r\n\t\tlet events = [];\r\n\t\twhile(true) {\r\n\t\t\t// compute events\r\n\t\t\tvar nextEvents = this.nextEvents();\r\n\r\n\t\t\t// shortcut if we're done processing\r\n\t\t\tif (nextEvents.events.length === 0 || nextEvents.time > maximum) {\r\n\t\t\t\tthis.move(maximum);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// filter events\r\n\t\t\tfor (let i = 0; i < nextEvents.events.length; i++) {\r\n\t\t\t\tlet event = nextEvents.events[i];\r\n\t\t\t\tif (!event.isValid())\r\n\t\t\t\t\tevent.remove();\r\n\t\t\t\telse\r\n\t\t\t\t\tevents.push(event);\r\n\t\t\t}\r\n\t\t\tif (events.length > 0)\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tevents = [];\r\n\t\t}\r\n\r\n\t\t// process events\r\n\t\tthis.move(nextEvents.time);\r\n\t\tfor (let i = 0; i < nextEvents.events.length; i++) {\r\n\t\t\tlet event = nextEvents.events[i];\r\n\t\t\tevent.isValid() && event.process();\r\n\t\t\tevent.remove();\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tdebugprocess(maximum) {\r\n\t\tconsole.group(\"step\");\r\n\t\tDrawing2D.log(\"before\", this);\r\n\r\n\t\tlet events;\r\n\t\tlet depth = 0;\r\n\t\twhile(true) {\r\n\t\t\tdepth++;\r\n\t\t\tif (depth == 100) debugger;\r\n\r\n\t\t\t// compute events\r\n\t\t\tvar nextEvents = this.nextEvents();\r\n\r\n\t\t\t// shortcut if we're done processing\r\n\t\t\tif (nextEvents.events.length === 0 || nextEvents.time > maximum) {\r\n\t\t\t\tthis.move(maximum);\r\n\t\t\t\tDrawing2D.log(\"after move\", this);\r\n\t\t\t\tconsole.groupEnd(\"step\");\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// filter events\r\n\t\t\tevents = [];\r\n\t\t\tfor (let i = 0; i < nextEvents.events.length; i++) {\r\n\t\t\t\tlet event = nextEvents.events[i];\r\n\t\t\t\tif (!event.isValid()) {\r\n\t\t\t\t\tconsole.log(\"removing\", event.description());\r\n\t\t\t\t\tevent.remove();\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\tevents.push(event);\r\n\t\t\t}\r\n\t\t\tif (events.length > 0)\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\t// process events\r\n\t\tthis.move(nextEvents.time);\r\n\t\tDrawing2D.log(\"after move\", this);\r\n\t\tfor (let event of events) {\r\n\t\t\tif (event.isValid()) {\r\n\t\t\t\tconsole.log(event.description());\r\n\t\t\t\tevent.process();\r\n\t\t\t\tthis.processor.wavefronts.length > 0 && Drawing2D.log(\"after event\", this.processor.wavefronts.concat([{colour: \"#F0F\", visuals: this.processor.spokes}]));\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"late removal of\", event.description());\r\n\t\t\t}\r\n\t\t\tevent.remove();\r\n\t\t}\r\n\r\n\t\tconsole.groupEnd(\"step\");\r\n\t\treturn true;\r\n\t}\r\n\r\n\tremove() {\r\n\t\tthis.length = 0;\r\n\t\tfor (let edge of this.root)\r\n\t\t\tedge.wavefront = null;\r\n\t\tthis.root = null;\r\n\t\tthis.processor.removeWavefront(this);\r\n\t}\r\n\r\n\tnextEvents() {\r\n\t\tvar events = [],\r\n\t\t\ttime = infinity,\r\n\t\t\tmaxtime = -infinity;\r\n\r\n\t\tvar wavefront = this;\r\n\t\tfunction testEvent(event) {\r\n\t\t\tlet eventTime = event.time;\r\n\t\t\tif (eventTime < wavefront.time)\r\n\t\t\t\tthrow \"Time machine?\";\r\n\t\t\tif (eventTime < time) {\r\n\t\t\t\t//console.log(\"testing\", event.description(), \"<\", time);\r\n\t\t\t\tlet old = events;\r\n\t\t\t\tevents = [event];\r\n\t\t\t\tmaxtime = time = eventTime;\r\n\t\t\t\tfor (let i = 0; i < old.length; i++)\r\n\t\t\t\t\ttestEvent(old[i]);\r\n\t\t\t} else if (eventTime < infinity && roughlyEqual(eventTime, time, TIME_EPSILON)) {\r\n\t\t\t\t//console.log(\"testing\", event.description(), \"<\", \"~\" + time);\r\n\t\t\t\tevents.push(event);\r\n\t\t\t\tmaxtime = max(maxtime, eventTime);\r\n\t\t\t} else {\r\n\t\t\t\t//console.log(\"testing\", event.description(), \"skipped\");\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tlet edge = this.root;\r\n\t\twhile(true) {\r\n\t\t\ttestEvent(edge.collapseEvent);\r\n\t\t\tlet vertexEvents = edge.start.events;\r\n\t\t\tfor (let i = 0; i < vertexEvents.length; i++)\r\n\t\t\t\ttestEvent(vertexEvents[i]);\r\n\r\n\t\t\tedge = edge.next;\r\n\t\t\tif (edge === this.root) break;\r\n\t\t}\r\n\r\n\t\tif (time === infinity)\r\n\t\t\tmaxtime = infinity;\r\n\r\n\t\tevents.sort((a, b) => b - a);\r\n\t\treturn {\"time\": maxtime, \"events\": events};\r\n\t}\r\n\r\n\tmove(time) {\r\n\t\tlet delta = time - this.time;\r\n\t\tlet edge = this.root;\r\n\t\twhile(true) {\r\n\t\t\tedge.start.move(delta);\r\n\t\t\tedge = edge.next;\r\n\t\t\tif (edge === this.root) break;\r\n\t\t}\r\n\t\tthis.time = time;\r\n\t}\r\n\r\n\ttoPath() {\r\n\t\tvar pather = new Pather();\r\n\t\tpather.moveTo(vec2.clone(this.root.start.position));\r\n\t\tfor (let edge of this.root)\r\n\t\t\tpather.lineTo(vec2.clone(edge.end.position));\r\n\t\treturn pather.path;\r\n\t}\r\n\r\n\tdraw(context) {\r\n\t\tif (!this.root) return;\r\n\t\tvar dimmer = context.clone();\r\n\t\tdimmer.alpha = 0.2;\r\n\t\tfor (let edge of this.root) {\r\n\t\t\tedge.draw(context);\r\n\t\t\t//LineSegment.project(edge.start.position, edge.start.direction, edge.start.speed / 10).draw(dimmer);\r\n\t\t\tnew Ray(edge.segment.midpoint, edge.direction).draw(dimmer);\r\n\t\t}\r\n\t}\r\n}\r\n","import Ray from '../primitives/Ray';\r\nimport Line from '../primitives/Line';\r\nimport intersect from '../intersections/Intersections';\r\nimport vec2 from '../nd-linalg/Vector2';\r\nimport vec3 from '../nd-linalg/Vector3';\r\nimport { roughlyEqual } from '../missing-stuff';\r\nimport * as SkeletonEdge from './SkeletonEdge';\r\nimport SkeletonWavefront from './SkeletonWavefront';\r\n\r\nvar id = 0;\r\nvar infinity = Infinity;\r\nvar ROUGHLY_EPSILON = Number.ROUGHLY_EPSILON;\r\nexport default class SkeletonSplitEvent {\r\n\tconstructor(edge, vertex) {\r\n\t\tthis.id = id++;\r\n\t\tthis.edge = edge;\r\n\t\tthis.vertex = vertex;\r\n\r\n//\t\tif (this.edge.isSelfIntersectionCap)\r\n//\t\t\treturn this.time = infinity;\r\n\r\n\t\tlet intersections = intersect(vertex.projection, edge.line);\r\n\t\tif (intersections.length == 0)\r\n\t\t\treturn this.time = infinity;\r\n\r\n\t\t// Find the bisector(s)\r\n\t\tlet projectionToEdgePosition = intersections[0].p;\r\n\t\tintersections = intersect(edge.line, vertex.previousEdge.line);\r\n\t\tif (intersections.length == 0) {\r\n\t\t\t// the two edges are parallel to each other, find the midpoint between them for the bisector\r\n\t\t\tlet midpoint = vec2.lerp(vec2(0, 0), edge.start.position, vertex.previousEdge.start.position, 0.5);\r\n\t\t\tvar bisector = new Line(midpoint, vertex.previousEdge.lineDirection);\r\n\t\t} else {\r\n\t\t\tlet edgeToEdgePosition = intersections[0].p,\r\n\t\t\t\tdir1 = vec2.sub(vec2(0, 0), vertex.position, edgeToEdgePosition),\r\n\t\t\t\tdir2 = vec2.sub(vec2(0, 0), projectionToEdgePosition, edgeToEdgePosition);\r\n\r\n\t\t\tvec2.normalize(dir1, dir1);\r\n\t\t\tvec2.normalize(dir2, dir2);\r\n\t\t\tlet direction = vec2.add(vec2(0, 0), dir1, dir2);\r\n\t\t\tvec2.normalize(direction, direction);\r\n\t\t\tvar bisector = new Ray(edgeToEdgePosition, direction);\r\n\t\t}\r\n\r\n\t\t// Find the point of split\r\n\t\tintersections = intersect(vertex.projection, bisector);\r\n\t\tif (intersections.length === 0)\r\n\t\t\treturn this.time = infinity;\r\n\r\n\t\t// How far from the vertex to the bisector\r\n\t\tlet length = edge.lengthAt(intersections[0].p);\r\n\t\tif (length < 0 || length === infinity)\r\n\t\t\treturn this.time = infinity;\r\n\r\n\t\tthis.time = length + this.edge.wavefront.time;\r\n\t\t//Drawing2D.log(\"created \" + this.description(), [this.edge.wavefront, this, {colour: \"pink\", legend: \"bisector\", visuals: [bisector]}]);\r\n\t}\r\n\r\n\tname() {\r\n\t\tif (!this.edge.wavefront || this.edge.wavefront != this.vertex.wavefront)\r\n\t\t\treturn \"Split(dead)\";\r\n\t\tlet projected = this.edge.projectBy(this.time - this.edge.wavefront.time),\r\n\t\t\tposition = this.vertex.projectBy(this.time - this.edge.wavefront.time);\r\n\t\tlet distance1 = vec2.dist(this.edge.start.position, this.vertex.position),\r\n\t\t\tdistance2 = vec2.dist(this.edge.end.position, this.vertex.position);\r\n\t\tif (roughlyEqual(distance1, 0))\r\n\t\t\treturn \"Cut.start\";\r\n\t\tif (roughlyEqual(distance2, 0))\r\n\t\t\treturn \"Cut.end\";\r\n\t\telse\r\n\t\t\treturn \"Split\";\r\n\t}\r\n\r\n\tisValid() {\r\n\t\t// The event must be on an existing wavefront and both the edge and vertex must also be on the same wavefront\r\n\t\tif (!this.edge.wavefront || this.edge.wavefront != this.vertex.wavefront)\r\n\t\t\treturn false;\r\n\r\n\t\t// No events are allowed to happen immediately, that would require a self-intersecting source shape and that is not allowed for this algorithm. The only other way this can happen is with an open-path and no events should happen at instance-zero then either\r\n\t\tif (this.time === 0)\r\n\t\t\treturn false;\r\n\r\n\t\t// No split or cut can happen with < 4 edges\r\n\t\tif (this.edge.wavefront.length < 4)\r\n\t\t\treturn false;\r\n\r\n\t\t// Is the vertex still acute?\r\n\t\tif (this.vertex.isAcute)\r\n\t\t\treturn false;\r\n\r\n\t\t// Is the event time infinite?\r\n\t\tif (this.time === infinity)\r\n\t\t\treturn false;\r\n\r\n\t\t// Is the event actually happening?\r\n\t\tlet futureEdge = this.edge.projectBy(this.time - this.edge.wavefront.time),\r\n\t\t\tfutureVertex = this.vertex.projectBy(this.time - this.edge.wavefront.time);\r\n\t\treturn futureEdge.roughlyContainsPoint(futureVertex);\r\n\t}\r\n\r\n\tremove() {\r\n\t\tconst _this = this;\r\n\t\tthis.vertex.events = this.vertex.events.filter( function( ele ){\r\n\t\t\treturn ele !== _this;\r\n\t\t});\r\n\t\t// this.vertex.events = this.vertex.events.without(this);\r\n\t}\r\n\r\n\tdescription() {\r\n\t\treturn `${this.name()}:${this.id} edge ${this.edge.id} from between ${this.vertex.previousEdge.id} and ${this.vertex.nextEdge.id} at ${this.time}`;\r\n\t}\r\n\r\n\tprocess() {\r\n\t\tlet distance1 = vec2.dist(this.edge.start.position, this.vertex.position);\r\n\t\tif (roughlyEqual(distance1, 0))\r\n\t\t\treturn cut(this.edge.start, this.vertex);\r\n\r\n\t\tlet distance2 = vec2.dist(this.edge.end.position, this.vertex.position);\r\n\t\tif (roughlyEqual(distance2, 0))\r\n\t\t\treturn cut(this.edge.end, this.vertex);\r\n\r\n\t\t// The vertex.position was roughly contained within the edge, but not close\r\n\t\t// enough to have a roughly close distance to either end and when we test\r\n\t\t// if it's really contained and it is not, then it must still be treated as\r\n\t\t// a cut\r\n\t\tif (!this.edge.segment.boundingBox.containsPoint(this.vertex.position))\r\n\t\t\treturn distance1 < distance2\r\n\t\t\t\t ? cut(this.edge.start, this.vertex)\r\n\t\t\t\t : cut(this.edge.end, this.vertex);\r\n\r\n\t\treturn split(this.edge, this.vertex);\r\n\t}\r\n\r\n\tdraw(context) {\r\n\t\tcontext.style = \"#F00\";\r\n\t\tcontext.legend(\"this.edge\");\r\n\t\tthis.edge.draw(context);\r\n\r\n\t\tcontext.style = \"#F66\";\r\n\t\tcontext.legend(\"this.edge - future\");\r\n\t\tthis.edge.projectBy(this.time - this.edge.wavefront.time).draw(context);\r\n\r\n\t\tcontext.style = \"#00F\";\r\n\t\tcontext.legend(\"this.vertex\");\r\n\t\tthis.vertex.previousEdge.draw(context);\r\n\t\tthis.vertex.nextEdge.draw(context);\r\n\r\n\t\tcontext.style = \"#66F\";\r\n\t\tcontext.legend(\"this.vertex - future\");\r\n\t\tthis.vertex.previousEdge.projectBy(this.time - this.edge.wavefront.time).draw(context);\r\n\t\tthis.vertex.nextEdge.projectBy(this.time - this.edge.wavefront.time).draw(context);\r\n\r\n\t\tcontext.style = \"rgba(0, 0, 255, 0.25)\";\r\n\t\tcontext.legend(\"this.vertex - projection\");\r\n\t\tthis.vertex.projection.draw(context);\r\n\r\n\t\tcontext.style = \"#300\";\r\n\t\tcontext.legend(\"intersection\");\r\n\t\tcontext.dot(this.vertex.projectBy(this.time - this.edge.wavefront.time));\r\n\t}\r\n}\r\n\r\nfunction join(previous, next, length) {\r\n\t// find the point at which these two edges connect and 'extend' or 'contract' the edges until they meet to preserve the direction of both edges\r\n\tlet intersections = intersect(previous.line, next.line),\r\n\t\tmoved = intersections.length > 0;\r\n\tif (moved) {\r\n\t\tnext.start.position = intersections[0].p;\r\n\t\tnext.wavefront.processor.commitSkeletonVertex(next.start);\r\n\t}\r\n\r\n\t// connect the edges\r\n\tSkeletonEdge.connect([previous, next]);\r\n\r\n\t// did we twist an edge trying to do this, if so, try again skipping the twisted edge\r\n\tif (moved) {\r\n\t\tlet twist1 = intersect(previous.previous.segment, next.segment);\r\n\t\tif (twist1.length > 0 && !twist1[0].isDegenerate)\r\n\t\t\treturn join(previous.previous, next, length + 1);\r\n\t\tlet twist2 = intersect(previous.segment, next.next.segment);\r\n\t\tif (twist2.length > 0 && !twist2[0].isDegenerate)\r\n\t\t\treturn join(previous, next.next, length + 1);\r\n\t}\r\n\r\n\t// compute direction and speed\r\n\tnext.start.computeDirectionAndSpeed();\r\n\r\n\t// compute collapse events\r\n\tprevious.computeCollapseEvent();\r\n\tnext.computeCollapseEvent();\r\n\r\n\t// compute split events\r\n\tnext.start.computeSplitEvents();\r\n\r\n\treturn [previous, next, length];\r\n}\r\n\r\nfunction cut(edgeVertex, cutVertex) {\r\n\tif (edgeVertex === cutVertex)\r\n\t\treturn false;\r\n\r\n\tedgeVertex.wavefront.processor.commitSkeletonVertex(edgeVertex);\r\n\tcutVertex.wavefront.processor.commitSkeletonVertex(cutVertex);\r\n\r\n\tlet wavefront0 = edgeVertex.wavefront,\r\n\t\twavefront1 = null,\r\n\t\tprevious0 = edgeVertex.previousEdge,\r\n\t\tprevious1 = cutVertex.previousEdge,\r\n\t\tnext0 = cutVertex.nextEdge,\r\n\t\tnext1 = edgeVertex.nextEdge,\r\n\t\tlength0 = 0,\r\n\t\tlength1 = 0;\r\n\r\n\t[previous0, next0, length0] = join(previous0, next0, length0);\r\n\t[previous1, next1, length1] = join(previous1, next1, length1);\r\n\r\n\t// create the new wavefront\r\n\twavefront0.root = previous0;\r\n\twavefront1 = new SkeletonWavefront(\r\n\t\twavefront0.processor,\r\n\t\tprevious1,\r\n\t\twavefront0.time);\r\n\twavefront0.length -= wavefront1.length + length0 + length1;\r\n\r\n\t//SkeletonEdge.isBroken(previous0);\r\n\t//SkeletonEdge.isBroken(previous1);\r\n\r\n\t// it's possible at this point that one of the two wavefronts\r\n\t// has < 3 vertices. If that's the case, we might as well\r\n\t// delete it now and add its spokes, otherwise make sure the\r\n\t// two wavefronts exist in the processor\r\n\tfunction endit(wavefront) {\r\n\t\twavefront.processor.commitSkeletonVertex(wavefront.root.start);\r\n\t\twavefront.processor.commitSkeletonVertex(wavefront.root.end);\r\n\t\twavefront.processor.commitSkeletonSpoke(\r\n\t\t\tvec3(wavefront.root.start.position[0], wavefront.root.start.position[1], wavefront.time),\r\n\t\t\tvec3(wavefront.root.end.position[0], wavefront.root.end.position[1], wavefront.time));\r\n\t}\r\n\tif (wavefront0.length < 3) {\r\n\t\tendit(wavefront0);\r\n\t\twavefront0.remove();\r\n\t} else {\r\n\t\t// wavefront[0] already exists in the processor\r\n\t}\r\n\tif (wavefront1.length < 3) {\r\n\t\tendit(wavefront1)\r\n\t\twavefront1.root.next.wavefront = null;\r\n\t\twavefront1.root.wavefront = null;\r\n\t} else {\r\n\t\twavefront1.processor.addWavefront(wavefront1);\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction split(edge, vertex) {\r\n\tlet pair = edge.split(vertex.position);\r\n\r\n\t// compute direction and speed\r\n\tpair[1].start.computeDirectionAndSpeed();\r\n\r\n\t// compute collapse events\r\n\t// SKIPPED: cut will do it\r\n\r\n\t// compute split events for the two halves\r\n\t// pair[1].start is not acute and we do not have to compute its split events\r\n\tpair[0].computeSplitEvents();\r\n\tpair[1].computeSplitEvents();\r\n\r\n\treturn cut(pair[1].start, vertex);\r\n}\r\n","import vec2 from '../nd-linalg/Vector2';\r\nimport vec3 from '../nd-linalg/Vector3';\r\nimport { roughlyEqual } from '../missing-stuff';\r\nimport Ray from '../primitives/Ray';\r\nimport Line from '../primitives/Line';\r\nimport intersect from '../intersections/Intersections';\r\nimport SkeletonSplitEvent from './SkeletonSplitEvent';\r\n\r\nvar id = 0;\r\nexport default class SkeletonVertex {\r\n\tconstructor(position, nextEdge) {\r\n\t\tif (!isFinite(position[0]) || !isFinite(position[1]))\r\n\t\t\tthrow \"Bad vertex\";\r\n\r\n\t\tthis.id = id++;\r\n\t\tthis.position = vec2.clone(position);\r\n\t\tthis.beginning = vec3(position[0], position[1], 0);\r\n\t\tthis.nextEdge = nextEdge;\r\n\r\n\t\tthis.events = [];\r\n\t\tthis.isParallel = null;\r\n\t\tthis.isAcute = null;\r\n\t\tthis.direction = null;\r\n\t\tthis.projection = null;\r\n\t\tthis.speed = null;\r\n\t}\r\n\r\n\tget name() { return \"SkeletonVertex\"; }\r\n\tget wavefront() { return this.nextEdge.wavefront; }\r\n\tget previousEdge() { return this.nextEdge.previous; }\r\n\tget next() { return this.nextEdge.end; }\r\n\tget previous() { return this.previousEdge.start; }\r\n\r\n\tcomputeDirectionAndSpeed() {\r\n\t\t// if direction and speed change, any split/cut events for this vertex\r\n\t\t// are now invalid\r\n\t\tthis.events = [];\r\n\r\n\t\tlet position = this.position;\r\n\t\tlet nextEdge = this.nextEdge;\r\n\t\tlet previousEdge = this.previousEdge;\r\n\t\tlet orientation = vec2.crossz(previousEdge.direction, nextEdge.direction);\r\n\t\tlet isParallel = this.isParallel = roughlyEqual( vec2.crossz(previousEdge.direction, nextEdge.direction), 0 );\r\n\t\tthis.isAcute = isParallel || orientation > 0;\r\n\r\n\t\t// direction & projection\r\n\t\tlet direction = this.direction = vec2.add(vec2(0, 0), previousEdge.direction, nextEdge.direction);\r\n\t\tvec2.normalize(direction, direction);\r\n\t\tthis.projection = new Ray(position, direction);\r\n\r\n\t\t// speed\r\n\t\tif (isParallel) return this.speed = 1;\r\n\t\tlet previousLine = new Line(\r\n\t\t\t\tvec2.add(vec2(0, 0), position, previousEdge.lineDirection),\r\n\t\t\t\tpreviousEdge.direction),\r\n\t\t\tnextLine = new Line(\r\n\t\t\t\tvec2.add(vec2(0, 0), position, nextEdge.lineDirection),\r\n\t\t\t\tnextEdge.direction),\r\n\t\t\tintersections = intersect(previousLine, nextLine);\r\n\r\n\t\tif (intersections.length === 0)\r\n\t\t\treturn this.speed = 0;\r\n\r\n\t\tthis.speed = vec2.dist(position, intersections[0].p);\r\n\t}\r\n\r\n\tcomputeSplitEvents() {\r\n\t\tthis.events = [];\r\n\t\tif (this.isAcute) return;\r\n\r\n\t\tlet start = this.nextEdge.next.next,\r\n\t\t\tend = this.previousEdge;\r\n\t\twhile(true) {\r\n\t\t\tif (start === end) break;\r\n\t\t\tthis.events.push(new SkeletonSplitEvent(start, this));\r\n\t\t\tstart = start.next;\r\n\t\t}\r\n\t}\r\n\r\n\tmovementBy(amount) {\r\n\t\treturn vec2.scale(vec2(0, 0), this.direction, this.speed * amount);\r\n\t}\r\n\r\n\tprojectBy(amount) {\r\n\t\treturn vec2.add(vec2(0, 0), this.position, this.movementBy(amount));\r\n\t}\r\n\r\n\tmove(amount) {\r\n\t\tvec2.add(this.position, this.position, this.movementBy(amount));\r\n\t}\r\n\r\n\tdraw(context) {\r\n\t\tcontext.dot(this.position);\r\n\r\n\t\tcontext.style = \"#AAF\";\r\n\t\tthis.projection && this.projection.draw(context);\r\n\t}\r\n}\r\n","import Ray from '../primitives/Ray';\r\nimport Line from '../primitives/Line';\r\nimport * as Triangle from '../primitives/Triangle';\r\nimport { roughlyEqual, roughlyEqualVec2 } from '../missing-stuff';\r\nimport intersect from '../intersections/Intersections';\r\nimport vec2 from '../nd-linalg/Vector2';\r\nimport vec3 from '../nd-linalg/Vector3';\r\n\r\nvar id = 0;\r\nvar infinity = Infinity;\r\nexport default class SkeletonCollapseEvent {\r\n\tconstructor(edge) {\r\n\t\tthis.id = id++;\r\n\t\tthis.edge = edge;\r\n\r\n\t\tlet wavefront = edge.wavefront,\r\n\t\t\tintersections = intersect(edge.start.projection, edge.end.projection);\r\n\r\n\t\tif (intersections.length === 0)\r\n\t\t\treturn this.time = infinity;\r\n\r\n\t\tthis.position = intersections[0].p;\r\n\t\tthis.time = edge.lengthAt(this.position) + wavefront.time;\r\n\r\n\t\t//if (this.time === 0)\r\n\t\t//\treturn this.time = infinity;\r\n\t}\r\n\r\n\tname() {\r\n\t\tif (!this.edge.wavefront || this.edge.wavefront.length < 3) return \"SkeletonCollapseEvent(dead)\";\r\n\t\treturn this.edge.wavefront.length === 3\r\n\t\t\t? \"Triangle\"\r\n\t\t\t: \"Collapse\";\r\n\t}\r\n\r\n\tisValid() {\r\n\t\tif (!this.edge.wavefront)\r\n\t\t\treturn false;\r\n\r\n\t\t// No events are allowed to happen immediately, that would require a self-intersecting source shape and that is not allowed for this algorithm. The only other way this can happen is with an open-path and no events should happen at instance-zero then either\r\n\t\tif (this.time === 0)\r\n\t\t\treturn false;\r\n\r\n\t\tswitch(this.edge.wavefront.length) {\r\n\t\t\tcase 0:\r\n\t\t\tcase 1:\r\n\t\t\tcase 2:\r\n\t\t\t\treturn false;\r\n\t\t\tcase 3:\r\n\t\t\t\treturn true;\r\n\t\t\tdefault: {\r\n\t\t\t\t// an edge cannot collapse if either of its projections are parallel to the edge\r\n\t\t\t\tconst az = vec2.crossz(this.edge.lineDirection, this.edge.start.direction);\r\n\t\t\t\tconst bz = vec2.crossz(this.edge.lineDirection, this.edge.end.direction);\r\n\t\t\t\treturn !roughlyEqual(az,0)\r\n\t\t\t\t\t&& !roughlyEqual(bz,0);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tremove() {\r\n\t\tthis.time = infinity;\r\n\t}\r\n\r\n\tdescription() {\r\n\t\treturn `${this.name()}:${this.id} edge ${this.edge.id} at ${this.time}`;\r\n\t}\r\n\r\n\tprocess() {\r\n\t\tlet wavefront = this.edge.wavefront;\r\n\t\twavefront.processor.commitSkeletonVertex(this.edge.start);\r\n\t\twavefront.processor.commitSkeletonVertex(this.edge.end);\r\n\r\n\t\tif (wavefront.length === 3) {\r\n\t\t\tlet position = this.time === infinity ? this.edge.start.position : this.position;\r\n\r\n\t\t\t// commit the third vertex of the triangle\r\n\t\t\twavefront.processor.commitSkeletonVertex(this.edge.next.end);\r\n\r\n\t\t\t// we know that -one- of the sides of the triangle has collapsed, but it's possible\r\n\t\t\t// the other two have not, they might now be parallel lines that overlap.\r\n\t\t\t// If that is the case, find one of the uncollapsed sides and connect it to the\r\n\t\t\t// triangle center\r\n\t\t\tlet a = this.edge.start.position,\r\n\t\t\t\tb = this.edge.end.position,\r\n\t\t\t\tc = this.edge.next.end.position,\r\n\t\t\t\tcenter = Triangle.center(a, b, c);\r\n\r\n\t\t\tlet start = a, end = b;\r\n\t\t\tif (roughlyEqualVec2(a, b)) {\r\n\t\t\t\tif (roughlyEqualVec2(b, c)) {\r\n\t\t\t\t\tstart = c;\r\n\t\t\t\t\tend = a;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstart = b;\r\n\t\t\t\t\tend = c;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcenter = vec3(center[0], center[1], wavefront.time);\r\n\t\t\tstart = vec3(start[0], start[1], wavefront.time);\r\n\t\t\tend = vec3(end[0], end[1], wavefront.time);\r\n\t\t\twavefront.processor.commitSkeletonSpoke(start, center);\r\n\t\t\twavefront.processor.commitSkeletonSpoke(center, end);\r\n\r\n\t\t\twavefront.remove();\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tlet previous = this.edge.previous,\r\n\t\t\tnext = this.edge.next;\r\n\r\n\t\t// collapse this.edge\r\n\t\tthis.edge.collapse();\r\n\r\n\t\t// compute the direction and speed for the newly connected vertex\r\n\t\tnext.start.computeDirectionAndSpeed();\r\n\r\n\t\t// compute the collapse events for the neighbours\r\n\t\tprevious.computeCollapseEvent();\r\n\t\tnext.computeCollapseEvent();\r\n\r\n\t\t// compute the split events for the connected vertex which may now be obtuse\r\n\t\tnext.start.computeSplitEvents();\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tdraw(context) {\r\n\t\tif (this.wavefront.length === 3) {\r\n\t\t\tcontext.dot(this.position);\r\n\t\t\treturn this.wavefront.draw(context);\r\n\t\t}\r\n\r\n\t\tthis.edge.draw(context);\r\n\t\tcontext.dot(this.position);\r\n\r\n\t\tcontext.alpha = 0.25;\r\n\r\n\t\tthis.edge.start.projection.draw(context);\r\n\t\tthis.edge.end.projection.draw(context);\r\n\t}\r\n}\r\n","let lastElementId = 0;\r\n\r\nexport default class Chain {\r\n\tconstructor () {\r\n\t\tthis.previous = this;\r\n\t\tthis.next = this;\r\n\t\tthis.id = lastElementId;\r\n\t\tlastElementId++;\r\n\t}\r\n\r\n\tstatic connect (previous, next) {\r\n\t\tprevious.next = next;\r\n\t\tnext.previous = previous;\r\n\t}\r\n\r\n\tstatic disconnect (node) {\r\n\t\tthis.previous = this;\r\n\t\tthis.next = this;\r\n\t}\r\n\r\n\tlength () {\r\n\t\tlet length = 0;\r\n\t\tfor (let each of this) length++;\r\n\t\treturn length;\r\n\t}\r\n\r\n\tisSingleElement () {\r\n\t\treturn this.next === this && this.previous === this;\r\n\t}\r\n\r\n\t* [Symbol.iterator] () {\r\n\t\tlet current = this;\r\n\t\tdo {\r\n\t\t\tyield current;\r\n\t\t\tcurrent = current.next;\r\n\t\t} while (current !== this);\r\n\t}\r\n}","var infinity = Infinity;\r\nimport SkeletonVertex from './SkeletonVertex';\r\nimport SkeletonCollapseEvent from './SkeletonCollapseEvent';\r\nimport SkeletonSplitEvent from './SkeletonSplitEvent';\r\nimport vec2 from '../nd-linalg/Vector2';\r\nimport Chain from '../datastructures/Chain';\r\nimport Ray from '../primitives/Ray';\r\nimport Line from '../primitives/Line';\r\nimport intersect from '../intersections/Intersections';\r\nimport LineSegment from '../primitives/LineSegment';\r\n\r\nexport var InnerEdge = Symbol(\"InnerEdge\"),\r\n\tOuterEdge = Symbol(\"OuterEdge\"),\r\n\tStartCapEdge = Symbol(\"StartCapEdge\"),\r\n\tEndCapEdge = Symbol(\"EndCapEdge\");\r\n\r\nexport function create(path, isInfinite) {\r\n\t// console.log('isclosed', path.isClosed);\r\n\treturn path.isClosed\r\n\t\t ? createClosedPath(path, isInfinite)\r\n\t\t : createOpenPath(path, isInfinite);\r\n}\r\n\r\nfunction createClosedPath(path, isInfinite) {\r\n\tlet segments = path.segments,\r\n\t\tfirst = new SkeletonEdge(segments[0].start, InnerEdge),\r\n\t\tprevious = first;\r\n\tfor (let i = 1; i < segments.length; i++) {\r\n\t\tlet next = new SkeletonEdge(segments[i].start, InnerEdge);\r\n\t\tconnect([previous, next]);\r\n\t\tprevious = next;\r\n\t}\r\n\tconnect([previous, first]);\r\n\t//Chain.isBroken(first);\r\n\r\n\tif (isInfinite) return [first];\r\n\r\n\tlet second = new SkeletonEdge(segments[segments.length-1].end, OuterEdge);\r\n\tprevious = second;\r\n\tfor (let i = segments.length - 2; i >= 0; i--) {\r\n\t\tlet next = new SkeletonEdge(segments[i].end, OuterEdge);\r\n\t\tconnect([previous, next]);\r\n\t\tprevious = next;\r\n\t}\r\n\tconnect([previous, second]);\r\n\t//Chain.isBroken(second);\r\n\r\n\treturn [first, second];\r\n}\r\n\r\nfunction createOpenPath(path, isInfinite) {\r\n\tif (isInfinite)\r\n\t\tthrow \"Cannot propagate an open path wavefront infinitely\";\r\n\r\n\tlet segments = path.segments,\r\n\t\tedges = new Array(segments.length * 2 + 2),\r\n\t\ti = 0;\r\n\r\n\tfor (let segment of segments.slice().reverse())\r\n\t\tedges[i++] = new SkeletonEdge(segment.end, OuterEdge);\r\n\tedges[i++] = new SkeletonEdge(segments[0].start, StartCapEdge);\r\n\r\n\tfor (let segment of segments)\r\n\t\tedges[i++] = new SkeletonEdge(segment.start, InnerEdge);\r\n\tedges[i] = new SkeletonEdge(segments[segments.length-1].end, EndCapEdge);\r\n\r\n\tconnect(edges);\r\n\tconnect([edges[edges.length-1], edges[0]]);\r\n\t//Chain.isBroken(edges[0]);\r\n\r\n\treturn [edges[0]];\r\n}\r\n\r\nexport function connect(edges) {\r\n\tif (edges.length < 2)\r\n\t\tthrow \"Need at least two edges to connect\";\r\n\r\n\t// connect the list of edges\r\n\tlet previous = edges[0];\r\n\tfor (var i = 1; i < edges.length; i++) {\r\n\t\tlet next = edges[i];\r\n\t\tChain.connect(previous, next);\r\n\t\tprevious = next;\r\n\t}\r\n}\r\n\r\nexport function isBroken(root) {\r\n\tlet length = 0;\r\n\tChain.isBroken(root);\r\n\tfor (let edge of root) {\r\n\t\tlength++;\r\n\t\tif (edge.start.nextEdge !== edge)\r\n\t\t\tthrow \"Edge vertex inconsistent\";\r\n\t\tif (edge.segment.start !== edge.start.position)\r\n\t\t\tthrow \"Edge segment.start inconsistent\";\r\n\t\tif (edge.segment.end !== edge.end.position)\r\n\t\t\tthrow \"Edge segment.end inconsistent\";\r\n\t}\r\n\tif (root.wavefront.length != length)\r\n\t\tthrow \"What?\";\r\n}\r\n\r\nvar id = 0;\r\nclass SkeletonEdge {\r\n\tconstructor(start, side) {\r\n\t\tthis.id = id++;\r\n\t\tthis.side = side;\r\n\t\tthis.start = new SkeletonVertex(start, this);\r\n\t\tthis.wavefront = null;\r\n\t\tthis.next = this;\r\n\t\tthis.previous = this;\r\n\t\tthis.isCap = this.side === StartCapEdge || this.side === EndCapEdge;\r\n\r\n\t\tthis.direction = null;\r\n\t\tthis.lineDirection = null;\r\n\t\tthis.collapseEvent = null;\r\n\t}\r\n\r\n\tget name() { return \"SkeletonEdge\"; }\r\n\tget end() { return this.next.start; }\r\n\tget segment() { return new LineSegment(this.start.position, this.end.position); }\r\n\tget line() { return new Line(this.start.position, this.lineDirection); }\r\n\r\n\tcomputeDirection() {\r\n\t\tlet startPosition = this.start.position,\r\n\t\t\tendPosition = this.end.position;\r\n\r\n\t\tif (this.isCap &&\r\n\t\t\tstartPosition[0] == endPosition[0] &&\r\n\t\t\tstartPosition[1] == endPosition[1]) {\r\n\t\t\tlet previousDirection = this.previous.direction;\r\n\t\t\tthis.direction = vec2(previousDirection[1], -previousDirection[0]);\r\n\t\t\tthis.lineDirection = vec2.clone(previousDirection);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.lineDirection = vec2.sub(vec2(0, 0), endPosition, startPosition);\r\n\t\tvec2.normalize(this.lineDirection, this.lineDirection);\r\n\t\tthis.direction = vec2(-this.lineDirection[1], this.lineDirection[0]);\r\n\t}\r\n\r\n\tcheckSanity() {\r\n\t\tlet sane = false;\r\n\t\tlet ray = new Ray(this.segment.midpoint, this.direction);\r\n\t\tfor (let edge of this.next) {\r\n\t\t\tif (edge !== this) {\r\n\t\t\t\tif (intersect(edge.segment, ray).length > 0) {\r\n\t\t\t\t\tsane = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!sane) throw \"Hangon...\";\r\n\t}\r\n\r\n\tcheckOverlap() {\r\n\t\tif (roughlyEqual(this.segment.length, 0)) return;\r\n\t\tintersect(this.previous.segment, this.next.segment).length > 0 && thisshouldnotbehappening();\r\n\t}\r\n\r\n\tcomputeCollapseEvent() {\r\n\t\tthis.collapseEvent = new SkeletonCollapseEvent(this);\r\n\t}\r\n\r\n\tcomputeSplitEvents() {\r\n\t\tlet edge = this.next.next.next,\r\n\t\t\tend = this.previous;\r\n\r\n\t\twhile(true) {\r\n\t\t\tif (edge === end) break;\r\n\t\t\tlet vertex = edge.start;\r\n\t\t\tvertex.isAcute || vertex.events.push(new SkeletonSplitEvent(this, vertex));\r\n\t\t\tedge = edge.next;\r\n\t\t}\r\n\t}\r\n\r\n\t* [Symbol.iterator]() {\r\n\t\tvar current = this;\r\n\t\twhile(true) {\r\n\t\t\tyield current;\r\n\t\t\tcurrent = current.next;\r\n\t\t\tif (current === this) break;\r\n\t\t}\r\n\t}\r\n\r\n\t// At a position p, assuming p is between start.projection and end.projection\r\n\t// return how long it will be before the edge reaches p\r\n\tlengthAt(p) {\r\n\t\tvar measuring = vec2(-this.direction[0], -this.direction[1]);\r\n\t\tvar intersections = intersect(new Ray(p, measuring), this.line);\r\n\r\n\t\t// If the point is behind the moving wavefront, return an infinite length\r\n\t\treturn intersections.length === 0 ? infinity : intersections[0].u;\r\n\t}\r\n\r\n\tprojectBy(amount) {\r\n\t\treturn new LineSegment(this.start.projectBy(amount), this.end.projectBy(amount));\r\n\t}\r\n\r\n\tcollapse() {\r\n\t\t// if we're the root edge, cycle to another edge\r\n\t\tif (this.wavefront.root === this)\r\n\t\t\tthis.wavefront.root = this.next;\r\n\r\n\t\tlet previous = this.previous,\r\n\t\t\tnext = this.next;\r\n\r\n\t\tconnect([previous, next]);\r\n\t\tthis.wavefront.length--;\r\n\t\t//isBroken(previous);\r\n\r\n\t\t// delete the edge and therefore any split/cut events for this edge\r\n\t\tthis.wavefront = null;\r\n\t}\r\n\r\n\tsplit(position) {\r\n\t\t// if we're the root edge, cycle to another edge\r\n\t\tif (this.wavefront.root === this)\r\n\t\t\tthis.wavefront.root = this.next;\r\n\r\n\t\tvar previous = this.previous,\r\n\t\t\tmiddle1 = new SkeletonEdge(this.start.position, previous.side),\r\n\t\t\tmiddle2 = new SkeletonEdge(position, previous.side),\r\n\t\t\tnext = this.next;\r\n\r\n\t\t// keep the current start\r\n\t\tmiddle1.start = this.start;\r\n\t\tmiddle1.start.nextEdge = middle1;\r\n\r\n\t\t// Copy the properties\r\n\t\tmiddle1.wavefront = this.wavefront;\r\n\t\tmiddle2.wavefront = this.wavefront;\r\n\t\tmiddle1.direction = vec2.clone(this.direction);\r\n\t\tmiddle2.direction = vec2.clone(this.direction);\r\n\t\tmiddle1.lineDirection = vec2.clone(this.lineDirection);\r\n\t\tmiddle2.lineDirection = vec2.clone(this.lineDirection);\r\n\r\n\t\t// Quick set the new vertex\r\n\t\tmiddle2.start.isAcute = false;\r\n\t\tmiddle2.start.isParallel = true;\r\n\t\tmiddle2.start.speed = 1;\r\n\t\tmiddle2.start.direction = vec2.clone(this.direction);\r\n\t\tmiddle2.start.projection = new Ray(middle2.start.position, middle2.start.direction);\r\n\r\n\t\tconnect([previous, middle1, middle2, next]);\r\n\t\tthis.wavefront.length++;\r\n\t\t//isBroken(previous);\r\n\r\n\t\t// delete the edge and therefore any split/cut events for this edge\r\n\t\tthis.wavefront = null;\r\n\r\n\t\treturn [middle1, middle2];\r\n\t}\r\n\r\n\tdraw(context) {\r\n\t\tif (!this.wavefront) return;\r\n\t\tif (this.cutreverse) {\r\n\t\t\tcontext.stroke(new LineSegment(this.segment.start, this.cutsegment.end));\r\n\t\t\tcontext.stroke(new LineSegment(this.cutsegment.start, this.segment.end));\r\n\t\t} else {\r\n\t\t\tcontext.stroke(this.cutsegment || this.segment);\r\n\t\t\t//context.arrowhead(this.segment.end, this.lineDirection);\r\n\t\t}\r\n\t\tcontext.dot(this.start.position);\r\n\t\tcontext.fontsize = 13;\r\n\t\tcontext.textBaseline = \"center\";\r\n\t\tcontext.textAlign = \"center\";\r\n\t\tcontext.text(this.id, this.segment.midpoint);\r\n\t}\r\n}\r\n","import intersect from '../intersections/Intersections';\r\nimport vec2 from '../nd-linalg/Vector2';\r\nimport LineSegment from './LineSegment';\r\nimport Ray from './Ray';\r\nimport Rectangle from './Rectangle';\r\nimport {roughlyEqual, roughlyBetween, roughlyEqualVec2} from '../missing-stuff';\r\n\r\nexport default function Curve(start, direction, end) {\r\n\tthis.start = start;\r\n\tthis.end = end;\r\n\tthis.direction = vec2.clone(direction);\r\n\tvec2.normalize(this.direction, this.direction);\r\n\r\n\t// using the chord vector start-end, find the orientation against direction\r\n\t// -1 is counter-clockwise, 1 is clockwise, 0 is either a line or\r\n\t// an invalid curve\r\n\tvar vChord = vec2(0, 0);\r\n\tvec2.sub(vChord, this.start, this.end);\r\n\tthis.orientation = sign(vec2.crossz(this.direction, vChord));\r\n\r\n\t// an estimate of the curve length, used for computing u,v intersection values\r\n\t// and for path finding estimates\r\n\tvar chordLength = vec2.len(vChord);\r\n\r\n\t// Check if this is a line\r\n\tif (this.orientation === 0) {\r\n\t\t// Determine if the direction faces the same way as the chord,\r\n\t\t// if it doesn't then this is an infinite circle, not a line\r\n\t\tvec2.normalize(vChord, vChord);\r\n\t\tvar diff = vec2.add(vec2(0, 0), vChord, this.direction);\r\n\t\tif (!roughlyEqualVec2(diff, [0, 0]))\r\n\t\t\tthrow \"Not a valid curve, infinite circle found\";\r\n\r\n\t\t//this.length = chordLength;\r\n\t\t//this.__proto__ = LineSegment.constructor.prototype;\r\n\t\t//return;\r\n\t\treturn new LineSegment(start, end);\r\n\t}\r\n\r\n\tthis.chordLength = chordLength;\r\n\r\n\t// compute the rays for intersection\r\n\tvar rayStartToCenter = this.rayFromStartToCenter(),\r\n\t\trayHalfChordToCenter = this.rayFromHalfChordToCenter();\r\n\r\n\t// the center of the circle is at the intersection of the two rays\r\n\t// but if none exist, then it's not a real circle\r\n\tvar i = intersect(rayStartToCenter, rayHalfChordToCenter);\r\n\r\n\t// check the opposite direction in case we're >180º\r\n\tif (i.length !== 1) {\r\n\t\ti = intersect(rayStartToCenter, rayHalfChordToCenter.reverse());\r\n\t}\r\n\r\n\tif (i.length !== 1)\r\n\t\tthrow \"Not a valid curve, no circle found\";\r\n\r\n\tthis.center = i[0].p;\r\n\tthis.radius = vec2.dist(this.center, this.start);\r\n\r\n\tvar angleSpan = 2 * vec2.angleBetween(rayStartToCenter.direction, rayHalfChordToCenter.direction);\r\n\tthis.length = this.radius * angleSpan;\r\n}\r\n\r\nCurve.createIfValid = createIfValid;\r\n\r\nfunction createIfValid(start, direction, end) {\r\n\ttry {\r\n\t\treturn new Curve(start, direction, end);\r\n\t} catch (e) {\r\n\t\treturn undefined;\r\n\t}\r\n};\r\n\r\nObject.defineProperties(Curve.prototype, {\r\n\t\"name\": \t\t\t\t\t\t{value: \"Curve\"},\r\n\t\"type\": \t\t\t\t\t\t{value: intersect.CurveTypeFunction},\r\n\t\"isRay\": \t\t\t\t\t\t{value: false},\r\n\t\"isLineSegment\": \t\t\t\t\t\t{value: false},\r\n\t\"isCurve\": \t\t\t\t\t\t{value: true},\r\n\t\"isCircle\": \t\t\t\t\t{value: false},\r\n\r\n\t\"midpoint\": \t\t\t\t\t{get: midpoint},\r\n\t\"boundingBox\": \t\t\t\t\t{get: boundingBox},\r\n\t\"endDirection\": \t\t\t\t{get: endDirection},\r\n\r\n\t\"rayFromStartToCenter\": \t\t{value: rayFromStartToCenter},\r\n\t\"rayFromHalfChordToCenter\": \t{value: rayFromHalfChordToCenter},\r\n\r\n\t\"subdivide\": \t\t\t\t\t{value: subdivide},\r\n\t\"reverse\": \t\t\t\t\t\t{value: reverse},\r\n\t\"translate\": \t\t\t\t\t{value: translate},\r\n\t\"scale\": \t\t\t\t\t\t{value: scale},\r\n\t\"offsetPerpendicular\":\t\t\t{value: offsetPerpendicular},\r\n\r\n\t\"offsetPerpendicularLength\":\t{value: offsetPerpendicularLength},\r\n\t\"mapPerpendicular\": \t\t\t{value: mapPerpendicular},\r\n\r\n\t\"positionOf\": \t\t\t\t\t{value: positionOf},\r\n\t\"closestPointTo\": \t\t\t\t{value: closestPointTo},\r\n\t\"offsetOf\": \t\t\t\t\t{value: offsetOf},\r\n\t\"directionOf\": \t\t\t\t\t{value: directionOf},\r\n\t\"containsPoint\": \t\t\t\t{value: containsPoint},\r\n\t\"wedgeContainsPoint\": \t\t\t{value: wedgeContainsPoint},\r\n\t\"getAlphaValueAtPosition\":\t\t{value: getAlphaValueAtPosition},\r\n\r\n\t\"vertices\": \t\t\t\t\t{value: vertices},\r\n\t\"uvs\": \t\t\t\t\t\t\t{value: uvs},\r\n\t\"draw\": \t\t\t\t\t\t{value: draw}\r\n});\r\n\r\nfunction midpoint() {\r\n\tvar direction = this.rayFromHalfChordToCenter().direction;\r\n\tvec2.normalize(direction, direction);\r\n\tvec2.scale(direction, direction, -this.radius);\r\n\tvec2.add(direction, this.center, direction);\r\n\treturn direction;\r\n}\r\n\r\nfunction boundingBox() {\r\n\tvar origin = vec2.clone(this.start),\r\n\t\tcorner = vec2.clone(this.end),\r\n\t\tmidpoint = this.midpoint,\r\n\t\tleft = Math.min(this.start[0], this.end[0]),\r\n\t\tleft = Math.min(left, midpoint[0]),\r\n\t\tright = Math.max(this.start[0], this.end[0]),\r\n\t\tright = Math.max(right, midpoint[0]),\r\n\t\ttop = Math.min(this.start[1], this.end[1]),\r\n\t\ttop = Math.min(top, midpoint[1]),\r\n\t\tbottom = Math.max(this.start[1], this.end[1]),\r\n\t\tbottom = Math.max(bottom, midpoint[1]);\r\n\r\n\treturn new Rectangle(top, right, bottom, left);\r\n}\r\n\r\nfunction rayFromStartToCenter() {\r\n\tvar vStartToCenter = vec2.fromValues(this.direction[1], -this.direction[0]);\r\n\tthis.orientation === -1 && vec2.negate(vStartToCenter, vStartToCenter);\r\n\treturn new Ray(this.start, vStartToCenter);\r\n}\r\n\r\nfunction rayFromHalfChordToCenter() {\r\n\tvar pHalfChord = vec2(0, 0),\r\n\t\tvHalfChord = vec2(0, 0);\r\n\tvec2.lerp(pHalfChord, this.start, this.end, 0.5);\r\n\tvec2.sub(vHalfChord, pHalfChord, this.start);\r\n\r\n\tvar vHalfChordToCenter = vec2.fromValues(vHalfChord[1], -vHalfChord[0]);\r\n\tvec2.normalize(vHalfChordToCenter, vHalfChordToCenter);\r\n\tthis.orientation === -1 && vec2.negate(vHalfChordToCenter, vHalfChordToCenter);\r\n\treturn new Ray(pHalfChord, vHalfChordToCenter);\r\n}\r\n\r\nfunction subdivide(p) {\r\n\tvar head = new Curve(this.start, this.direction, p);\r\n\tvar tail = new Curve(p, this.directionOf(this.offsetOf(p)), this.end);\r\n\treturn [head, tail];\r\n}\r\n\r\nfunction reverse() {\r\n\treturn new Curve(this.end, vec2.negate(vec2(0, 0), this.endDirection), this.start);\r\n}\r\n\r\nfunction scale(scalar) {\r\n\tvar start = vec2.clone(this.start),\r\n\t\tend = vec2.clone(this.end);\r\n\tvec2.scale(start, start, scalar);\r\n\tvec2.scale(end, end, scalar);\r\n\treturn new Curve(start, this.direction, end);\r\n}\r\n\r\nfunction translate(offset) {\r\n\tvar start = vec2.clone(this.start),\r\n\t\tend = vec2.clone(this.end);\r\n\tvec2.add(start, start, offset);\r\n\tvec2.add(end, end, offset);\r\n\treturn new Curve(start, this.direction, end);\r\n}\r\n\r\nfunction directionOf(offset) {\r\n\tvar rotationSign = -this.orientation;\r\n\tvar centerToStart = vec2.sub(vec2(0, 0), this.start, this.center);\r\n\tvar centerToPoint = vec2.rotate(vec2(0, 0), centerToStart, rotationSign * offset / this.radius);\r\n\r\n\tvar direction = this.orientation > 0\r\n\t\t? vec2.fromValues(centerToPoint[1], -centerToPoint[0])\r\n\t\t: vec2.fromValues(-centerToPoint[1], centerToPoint[0]);\r\n\r\n\tvec2.normalize(direction, direction);\r\n\r\n\treturn direction;\r\n}\r\n\r\nfunction endDirection() {\r\n\tvar vEnd = vec2(0, 0);\r\n\tvec2.sub(vEnd, this.center, this.end);\r\n\tvar direction = this.orientation > 0\r\n\t\t? vec2.fromValues(-vEnd[1], vEnd[0])\r\n\t\t: vec2.fromValues(vEnd[1], -vEnd[0]);\r\n\treturn vec2.normalize(direction, direction);\r\n}\r\n\r\nfunction containsPoint(p) {\r\n\tvar distance = vec2.squaredDistance(this.center, p);\r\n\treturn (distance <= this.radius * this.radius + Intersections.THICKNESS * Intersections.THICKNESS)\r\n\t\t&& this.wedgeContainsPoint(p, Intersections.THICKNESS);\r\n}\r\n\r\nfunction wedgeContainsPoint(p, tolerance) {\r\n\t// The point (p) must lye between start and end vectors\r\n\t// let start = 0, 0\r\n\t// let end = this.end - this.start\r\n\t// let test = p - this.start\r\n\t// let dir = this.direction\r\n\t// sign0 = sign(dir x end)\r\n\t//   sign0 == 0 error: all points are either inside or outside and it's impossile to tell\r\n\t// sign1 = sign(dir x test) <\r\n\t// sign2 = sign(test x end)\r\n\t// contained if:\r\n\t//    sign1 == 0 || sign2 == 0\r\n\t//    sign0 == sign1 && sign0 == sign2\r\n\r\n\tvar test = vec2(0, 0),\r\n\t\tendToStart = vec2(0, 0),\r\n\t\tdir = tolerance ? this.directionOf(-tolerance) : this.direction;\r\n\r\n\tlet start = tolerance ? this.positionOf(-tolerance) : this.start;\r\n\tlet end = tolerance ? this.positionOf(this.length + tolerance) : this.end;\r\n\r\n\tvec2.sub(test, p, start);\r\n\tvec2.sub(endToStart, end, start);\r\n\r\n\tvar sign0 = sign(vec2.crossz(dir, endToStart));\r\n\tvar sign1 = sign(vec2.crossz(dir, test));\r\n\tvar sign2 = sign(vec2.crossz(test, endToStart));\r\n\t//console.log(\"dir\", dir, \"end\", end, \"test\", test, \"sign0\", sign0, \"sign1\", sign1, \"sign2\", sign2);\r\n\r\n\t// All or no solutions because there is no arc, this should not be possible, it should\r\n\t// have been caught on curve creation\r\n\tif (sign0 === 0)\r\n\t\tthrow \"This curve has no wedge\";\r\n\r\n\t// Solution because the test is on an edge of the wedge\r\n\tif (sign1 === 0 || sign2 === 0)\r\n\t\treturn true;\r\n\r\n\treturn sign0 === sign1 && sign0 === sign2;\r\n}\r\n\r\nfunction getAlphaValueAtPosition(p) {\r\n\treturn this.offsetOf(p) / this.length;\r\n}\r\n\r\nfunction sign(value) {\r\n\treturn roughlyEqual(value, 0)\r\n\t\t? 0\r\n\t\t: value > 0\r\n\t\t\t? 1\r\n\t\t\t: -1;\r\n}\r\n\r\nfunction offsetOf(point) {\r\n\tvar tolerance = 1e-3;\r\n\tvar centerToStart = vec2.sub(vec2(0, 0), this.start, this.center);\r\n\tvar centerToPoint = vec2.sub(vec2(0, 0), point, this.center);\r\n\tvar centerToEnd = vec2.sub(vec2(0, 0), this.end, this.center);\r\n\r\n\tvar angleSpan = this.length / this.radius;\r\n\r\n\tvar directionAtPoint = this.orientation > 0\r\n\t\t? vec2.fromValues(centerToPoint[1], -centerToPoint[0])\r\n\t\t: vec2.fromValues(-centerToPoint[1], centerToPoint[0]);\r\n\tvar angleAToPoint = vec2.angleBetweenWithDirections(\r\n\t\tcenterToStart, this.direction, centerToPoint);\r\n\tvar angleBToPoint = vec2.angleBetweenWithDirections(\r\n\t\tcenterToPoint, directionAtPoint, centerToEnd);\r\n\r\n\treturn angleAToPoint <= angleSpan + tolerance && angleBToPoint <= angleSpan + tolerance\r\n\t\t? angleAToPoint * this.radius\r\n\t\t: vec2.dist(this.start, point) < vec2.dist(this.end, point)\r\n\t\t\t? -vec2.angleBetween(centerToStart, centerToPoint) * this.radius\r\n\t\t\t: this.length + vec2.angleBetween(centerToEnd, centerToPoint) * this.radius;\r\n}\r\n\r\nfunction closestPointTo(point) {\r\n\tvar offset = this.offsetOf(point);\r\n\tif (roughlyBetween(0, offset, this.length)) {\r\n\t\tvar centerToPoint = vec2.sub(vec2(0, 0), point, this.center);\r\n\t\treturn vec2.add(centerToPoint, centerToPoint, this.center, vec2.scale(\r\n\t\t\tcenterToPoint, centerToPoint,\r\n\t\t\tthis.radius / vec2.len(centerToPoint)\r\n\t\t));\r\n\t}\r\n\r\n\tif (vec2.dist(this.start, point) < vec2.dist(this.end, point)) {\r\n\t\treturn this.start;\r\n\t} else {\r\n\t\treturn this.end;\r\n\t}\r\n}\r\n\r\nfunction positionOf(offset) {\r\n\tvar rotationSign = -this.orientation;\r\n\tvar centerToStart = vec2.sub(vec2(0, 0), this.start, this.center);\r\n\tvar centerToPoint = vec2.rotate(vec2(0, 0), centerToStart, rotationSign * offset / this.radius);\r\n\treturn vec2.add(centerToPoint, centerToPoint, this.center);\r\n}\r\n\r\nfunction offsetPerpendicular(offsetToRight) {\r\n\treturn Curve.createIfValid(\r\n\t\tvec2.scalePerpendicularAndAdd(vec2(0, 0), this.start, this.direction, offsetToRight),\r\n\t\tthis.direction,\r\n\t\tvec2.scalePerpendicularAndAdd(vec2(0, 0), this.end, this.endDirection, offsetToRight)\r\n\t);\r\n}\r\n\r\nfunction offsetPerpendicularLength(offsetToRight) {\r\n\tif (offsetToRight === 0) return this.length;\r\n\tvar angleSpan = this.length / this.radius;\r\n\treturn this.length + (this.orientation < 0 ? 1 : -1) * angleSpan * offsetToRight;\r\n}\r\n\r\nfunction mapPerpendicular(offsetA, offsetToRightA, offsetToRightB) {\r\n\t// TODO: maybe simplify?\r\n\treturn offsetA * (\r\n\t\tthis.offsetPerpendicularLength(offsetToRightB) /\r\n\t\tthis.offsetPerpendicularLength(offsetToRightA));\r\n}\r\n\r\nvar DEBUG_CURVE_DISPLAY = false;\r\nfunction draw(context) {\r\n\tif (this.radius === 0) return;\r\n\r\n\t// Draw the full circle\r\n\tDEBUG_CURVE_DISPLAY && context.stroke(new Circle(this.center, this.radius));\r\n\r\n\t// Draw the arrow head at the end of the arc\r\n\tcontext.arrowhead(this.end, this.endDirection);\r\n\tcontext.stroke(this);\r\n}\r\n\r\nfunction vertices(offsetToRight) {\r\n\tvar centerToStart = vec2.sub(vec2(0, 0), this.start, this.center);\r\n\r\n\tif (offsetToRight) {\r\n\t\tvar desiredRadius = this.orientation > 0\r\n\t\t\t? this.radius - offsetToRight\r\n\t\t\t: this.radius + offsetToRight;\r\n\t\tvar scaling = desiredRadius / this.radius;\r\n\t\tvec2.scale(centerToStart, centerToStart, scaling);\r\n\t}\r\n\r\n\tvar angleSpan = this.length / this.radius;\r\n\t// TODO: make less magic\r\n\tvar subdivisions = Math.ceil(Math.abs(angleSpan) * 4 * (Math.abs(this.radius)/100 + 1)) + 1;\r\n\tvar vertices = new Array(subdivisions);\r\n\tvar rotationSign = -this.orientation;\r\n\tvar rotationMatrix = mat2.rotation(rotationSign * angleSpan * (1 / (subdivisions - 1)));\r\n\tvar pointer = vec2.clone(centerToStart);\r\n\r\n\tfor (var i = 0; i < subdivisions; i++) {\r\n\t\tvertices[i] = vec2.add(vec2(0, 0), pointer, this.center);\r\n\t\tmat2.map(pointer, rotationMatrix, pointer);\r\n\t}\r\n\r\n\treturn vertices;\r\n}\r\n\r\nfunction uvs(offsetToRight, multiplierAlongPath) {\r\n\tvar angleSpan = this.length / this.radius;\r\n\t// TODO: make less magic\r\n\tvar subdivisions = Math.ceil(Math.abs(angleSpan) * 4 * (Math.abs(this.radius)/100 + 1)) + 1;\r\n\r\n\tvar uvs = new Array(subdivisions);\r\n\r\n\tfor (var i = 0; i < subdivisions; i++) {\r\n\t\tuvs[i] = vec2.fromValues(multiplierAlongPath * this.length * (i / (subdivisions - 1)), offsetToRight);\r\n\t}\r\n\r\n\treturn uvs;\r\n}\r\n","class It {\n\tconstructor () {\n\t\tthis.op = id;\n\t}\n\n\tof (iterable) {\n\t\t// might return normal or iterator function\n\t\treturn this.op(iterable);\n\t}\n\n\tchain (second) {\n\t\tthis.op = compose(this.op, second);\n\t\treturn this;\n\t}\n\n\tstatic concat (first, second) {\n\t\t// this only returns an iterating function,\n\t\t// it doesn't run it yet!\n\t\treturn function * concatenation () {\n\t\t\tyield* first; yield* second;\n\t\t};\n\t}\n\n\t// Iterators\n\tcycle () {return this.chain(cycler());}\n\tflatten () {return this.chain(flattener());}\n\tmap (mapping) {return this.chain(mapper(mapping));}\n\tfilter (predicate) {return this.chain(filterer(predicate));}\n\ttake (n) {return this.chain(taker(n));}\n\tdrop (n) {return this.chain(dropper(n));}\n\twindows (size) {return this.chain(windower(size));}\n\tchunks (size) {return this.chain(chunker(size));}\n\tslice (start, end) {return this.chain(compose(dropper(start - 1), taker(start - end)));}\n\tcommon (otherIterable) {return this.chain(commoner(otherIterable));}\n\tzip (otherIterable) {return this.chain(zipper(otherIterable));}\n\tappend (otherIterable) {return this.chain(appender(otherIterable));}\n\n\t// Reducers\n\treduce (step, initial) {return this.chain(reducerer(step, initial));}\n\tfirst () {return this.chain(firster());}\n\tfind (predicate) {return this.chain(finder(predicate));}\n\thas (item) {return this.chain(haser(item));}\n\textreme (mapping) {return this.chain(extremer(mapping));}\n\tmax (mapping) {return this.chain(maxer(mapping));}\n\tmin (mapping) {return this.chain(miner(mapping));}\n\tall (predicate) {return this.chain(aller(predicate));}\n\tany (predicate) {return this.chain(anyer(predicate));}\n\tunique () {return this.chain(uniquer());}\n\tempty () {return this.chain(emptyer());}\n}\n\nfunction createIteration() {return new It();}\ncreateIteration.concat = It.concat;\nexport default createIteration;\n\nfunction id (iterable) {return iterable;}\n\nfunction compose (first, second) {\n\treturn function composition (iterable) {\n\t\treturn second(first(iterable));\n\t};\n}\n\n// Iterator-ers\n\nfunction cycler () {\n\treturn function * cycle (iterable) {\n\t\tlet seenValues = [];\n\n\t\tfor (let value of iterable) {\n\t\t\tseenValues.push(value);\n\t\t\tyield value;\n\t\t}\n\n\t\twhile (true) yield* seenValues;\n\t};\n}\n\nfunction flattener () {\n\treturn function * flatten (iterable) {\n\t\t// for some reason yield* doesn't compile in here\n\t\tfor (let subIterable of iterable) yield* subIterable;\n\t};\n}\n\nfunction mapper (mapping) {\n\treturn function * map (iterable) {for (let value of iterable) yield mapping(value);};\n}\n\nfunction filterer (predicate) {\n\treturn function * filter (iterable) {\n\t\tfor (let value of iterable) if (predicate(value)) yield value;\n\t};\n}\n\nfunction taker (n) {\n\treturn function * take (iterable) {\n\t\tlet left = n;\n\t\tfor (let value of iterable) {\n\t\t\tif (left === 0) return;\n\t\t\tleft--; yield value;\n\t\t}\n\t};\n}\n\nfunction dropper (n) {\n\treturn function * drop (iterable) {\n\t\tlet startIn = n;\n\t\tfor (let value of iterable) {\n\t\t\tif (startIn === 0) yield value;\n\t\t\telse startIn--;\n\t\t}\n\t};\n}\n\nfunction windower (size) {\n\treturn function * windows (iterable) {\n\t\tlet window = [];\n\n\t\tfor (let value of iterable) {\n\t\t\twindow.push(value);\n\t\t\tif (window.length === size) {\n\t\t\t\tyield window.slice();\n\t\t\t\twindow.shift();\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction chunker (size) {\n\treturn function * chunk (iterable) {\n\t\tlet group = [];\n\n\t\tfor (let value of iterable) {\n\t\t\tgroup.push(value);\n\t\t\tif (group.length === size) {\n\t\t\t\tyield group;\n\t\t\t\tgroup = [];\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction commoner (otherIterable) {\n\tlet otherItems = new Set(otherIterable);\n\treturn function * common (iterable) {\n\t\tfor (let value of (new Set(iterable))) if (otherItems.has(value)) yield value;\n\t};\n}\n\nfunction zipper (otherIterable) {\n\totherIterable = otherIterable[Symbol.iterator]();\n\treturn function * zip (iterable) {\n\t\tfor (let value of iterable) {\n\t\t\tlet other = otherIterable.next();\n\t\t\tif (other.done) break;\n\t\t\tyield [value, other.value];\n\t\t}\n\t};\n}\n\nfunction appender (otherIterable) {\n\treturn function * append (iterable) {\n\t\tyield* iterable;\n\t\tyield* otherIterable;\n\t};\n}\n\n// Reducer-ers\n\nfunction reducerer (step, initial) {\n\treturn function reduce (iterable) {\n\t\tlet reducedValue = initial;\n\t\tfor (let value of iterable) reducedValue = step(reducedValue, value);\n\t\treturn reducedValue;\n\t};\n}\n\nfunction firster () {\n\treturn function first (iterable) {\n\t\treturn iterable.next().value;\n\t};\n}\n\nfunction finder (predicate) {\n\treturn function find (iterable) {\n\t\tfor (let value of iterable) if (predicate(value)) return value;\n\t};\n}\n\nfunction haser (item) {\n\treturn function has (iterable) {\n\t\tfor (let value of iterable) if (value === item) return true;\n\t};\n}\n\nfunction extremer (mapping) {\n\treturn function extreme (iterable) {\n\t\tlet bestMetric;\n\t\tlet best;\n\t\tlet rest = [];\n\n\t\tfor (let value of iterable) {\n\t\t\tlet metric = mapping(value);\n\t\t\tif (best === undefined || metric > bestMetric) {\n\t\t\t\tif (best !== undefined) rest.push(best);\n\t\t\t\tbest = value;\n\t\t\t\tbestMetric = metric;\n\t\t\t} else rest.push(value);\n\t\t}\n\n\t\treturn {best, bestMetric, rest};\n\t};\n}\n\nfunction maxer (mapping) {\n\treturn function max (iterable) {\n\t\tlet {best, bestMetric: maximum, rest} = extremer(mapping)(iterable);\n\t\treturn {best, max: maximum, rest};\n\t};\n}\n\nfunction miner (mapping) {\n\tlet negativeMapping = (i) => - mapping(i);\n\treturn function min (iterable) {\n\t\tlet {best, bestMetric: negativeMin, rest} = extremer(negativeMapping)(iterable);\n\t\treturn {best, min: -negativeMin, rest};\n\t};\n}\n\nfunction aller (predicate) {\n\treturn function all (iterable) {\n\t\tfor (let value of iterable) if (!predicate(value)) return false;\n\t\treturn true;\n\t};\n}\n\nfunction anyer (predicate) {\n\treturn function  any (iterable) {\n\t\tfor (let value of iterable) if (predicate(value)) return true;\n\t\treturn false;\n\t};\n}\n\nfunction uniquer () {\n\treturn function unique (iterable) {\n\n\t\t//return new Set(iterable);\n\t\tlet s = new Set();\n\t\tfor (let value of iterable) s.add(value);\n\t\treturn s;\n\t};\n}\n\nfunction emptyer () {\n\treturn function empty (iterable) {\n\t\treturn iterable.next().done;\n\t};\n}","import intersect from '../intersections/Intersections';\r\nimport vec2 from '../nd-linalg/Vector2';\r\nimport LineSegment from '../primitives/LineSegment';\r\nimport Curve from '../primitives/Curve';\r\nimport {corner as RectangleCorner} from '../primitives/Rectangle';\r\nimport It from '../iteratorers';\r\nimport { roughlyEqualVec2 } from '../missing-stuff';\r\n\r\nexport default class Path {\r\n\tconstructor (segments, isClockwise, boundingBox) {\r\n\t\tthis.segments = segments === undefined ? [] : segments.slice(0);\r\n\t\tthis.isClockwise = isClockwise === undefined ? orientation(this.segments) : isClockwise;\r\n\t\tthis.boundingBox = boundingBox === undefined ? aabb(this.segments) : boundingBox;\r\n\r\n\t\tthis.segmentOffsets = new Array(this.segments.length);\r\n\t\tvar offset = 0;\r\n\t\tfor (var i = 0; i < this.segments.length; i++) {\r\n\t\t\tthis.segmentOffsets[i] = offset;\r\n\t\t\toffset += this.segments[i].length;\r\n\t\t}\r\n\t\tthis.length = offset;\r\n\t}\r\n\r\n\t//static name = \"Path\";\r\n\r\n\t// Return true if the path is closed and can be considered a shape\r\n\tget isClosed () {\r\n\t\t// console.log('is closed check', this.segments[0].start, this.segments[this.segments.length - 1].end)\r\n\t\treturn\tthis.segments.length > 1\r\n\t\t\t&&\troughlyEqualVec2(this.segments[0].start, this.segments[this.segments.length - 1].end);\r\n\t}\r\n\r\n\tget isCounterClockwise () {return !this.isClockwise}\r\n\tget isContiguous () {\r\n\t\tif (this.segments.length < 2)\r\n\t\t\treturn true;\r\n\r\n\t\tfor (var i = 0; i < this.segments.length - 1; i++) {\r\n\t\t\tvar a = this.segments[i];\r\n\t\t\tvar b = this.segments[i + 1];\r\n\t\t\tif (!roughlyEqualVec2(a.end, b.start))\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tget start () {return this.segments[0].start};\r\n\tget end () {return this.segments[ this.segments.length-1].end};\r\n\r\n\tconcat (path) {return new Path(this.segments.concat(path.segments));}\r\n\r\n\treverse () {\r\n\t\tvar segments = new Array(this.segments.length);\r\n\t\tfor (var i = 0, j = this.segments.length - 1; i < this.segments.length; i++, j--) {\r\n\t\t\tsegments[j] = this.segments[i].reverse();\r\n\t\t}\r\n\t\treturn new Path(segments, !this.isClockwise);\r\n\t}\r\n\r\n\tcut (startOffset, endOffset) {\r\n\t\t//startOffset = startOffset || 0;\r\n\t\t//endOffset = endOffset || this.length;\r\n\t\tvar tolerance = 1e-2;\r\n\r\n\t\tvar firstSegmentToReplace// = this.segments[0];\r\n\t\tvar firstSegmentToReplaceIndex// = 0;\r\n\t\tvar lastSegmentToReplace// = this.segments[ this.segments.length-1];\r\n\t\tvar lastSegmentToReplaceIndex// = this.segments.length - 1;\r\n\r\n\t\tfor (var s = 0; s < this.segments.length; s++) {\r\n\t\t\tvar segmentOffset = this.segmentOffsets[s];\r\n\t\t\tif (segmentOffset < startOffset + tolerance){\r\n\t\t\t\tfirstSegmentToReplaceIndex = s;\r\n\t\t\t\tfirstSegmentToReplace = this.segments[s];\r\n\t\t\t}\r\n\t\t\tif (segmentOffset < endOffset + tolerance) {\r\n\t\t\t\tlastSegmentToReplaceIndex = s;\r\n\t\t\t\tlastSegmentToReplace = this.segments[s];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (firstSegmentToReplace === lastSegmentToReplace) {\r\n\t\t\treturn new Path([new Curve(\r\n\t\t\t\tthis.positionOf(startOffset/*Math.max(0, startOffset)*/),\r\n\t\t\t\tthis.directionOf(startOffset/*Math.max(0, startOffset)*/),\r\n\t\t\t\tthis.positionOf(endOffset/*Math.min(endOffset, this.length)*/)\r\n\t\t\t)]);\r\n\t\t} else {\r\n\t\t\tvar newSegments = this.segments.slice(firstSegmentToReplaceIndex + 1, lastSegmentToReplaceIndex);\r\n\r\n\t\t\tvar newFirstSegment = new Curve(\r\n\t\t\t\tthis.positionOf(startOffset/*Math.max(0, startOffset)*/),\r\n\t\t\t\tthis.directionOf(startOffset/*Math.max(0, startOffset)*/),\r\n\t\t\t\tfirstSegmentToReplace.end\r\n\t\t\t);\r\n\r\n\t\t\tnewSegments.unshift(newFirstSegment);\r\n\r\n\t\t\tvar newLastSegment = new Curve(\r\n\t\t\t\tlastSegmentToReplace.start,\r\n\t\t\t\tlastSegmentToReplace.direction,\r\n\t\t\t\tthis.positionOf(endOffset/*Math.min(endOffset, this.length)*/)\r\n\t\t\t);\r\n\r\n\t\t\tnewSegments.push(newLastSegment);\r\n\r\n\t\t\treturn new Path(newSegments);\r\n\t\t}\r\n\t}\r\n\r\n\tmakeContigous (isLoop) {\r\n\t\tvar newSegments = [];\r\n\r\n\t\tfor (let [segmentA, segmentB] of this.segments.values().windows(2)) {\r\n\t\t\tnewSegments.push(segmentA);\r\n\t\t\tif (!roughlyEqualVec2(segmentA.end, segmentB.start)) {\r\n\t\t\t\tnewSegments.push(new LineSegment(segmentA.end, /*segmentA.endDirection,*/ segmentB.start));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tnewSegments.push(this.segments[ this.segments.length-1]);\r\n\r\n\t\tif (isLoop && !roughlyEqualVec2(this.segments[ this.segments.length-1].end, this.segments[0].start)) {\r\n\t\t\tnewSegments.push(new LineSegment(\r\n\t\t\t\tthis.segments[ this.segments.length-1].end, /*this.segments[ this.segments.length-1].end.endDirection,*/ this.segments[0].start));\r\n\t\t}\r\n\r\n\t\treturn new Path(newSegments);\r\n\t}\r\n\r\n\tsimplifySelfIntersections () {\r\n\t\tvar newSegments = [];\r\n\t\tvar eps = 1/10;\r\n\r\n\t\tvar previousIntersectionPosition;\r\n\r\n\t\tfor (var s = 0; s < this.segments.length; s++) {\r\n\t\t\tvar segment = this.segments[s];\r\n\t\t\tvar foundSelfIntersection = false;\r\n\t\t\tvar intersectionPosition;\r\n\t\t\tvar nextSegmentIndex;\r\n\t\t\tvar otherSegment;\r\n\t\t\tvar offsetOnOtherSegment;\r\n\r\n\t\t\tfor (var o = s + 1; o < this.segments.length + 1; o++) {\r\n\t\t\t\totherSegment = this.segments[o % this.segments.length];\r\n\r\n\t\t\t\tvar intersectionInfos = intersect(segment, otherSegment);\r\n\r\n\t\t\t\tif (intersectionInfos.length > 0) {\r\n\t\t\t\t\tintersectionPosition = intersectionInfos[0].p;\r\n\t\t\t\t\toffsetOnOtherSegment = otherSegment.offsetOf(intersectionPosition);\r\n\r\n\t\t\t\t\tif (offsetOnOtherSegment > eps && offsetOnOtherSegment < otherSegment.length - eps) {\r\n\t\t\t\t\t\t//DebugPoints.add(vec2.toThree(intersectionPosition), 0xff0000, \"si\");\r\n\t\t\t\t\t\tfoundSelfIntersection = true;\r\n\t\t\t\t\t\tnextSegmentIndex = o - 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (previousIntersectionPosition) {\r\n\t\t\t\tvar offsetOfPreviousIntersection = segment.offsetOf(previousIntersectionPosition);\r\n\t\t\t\tvar directionOfPreviousIntersection = segment.directionOf(offsetOfPreviousIntersection);\r\n\r\n\t\t\t\tif (foundSelfIntersection && !roughlyEqualVec2(previousIntersectionPosition, intersectionPosition)) {\r\n\t\t\t\t\tnewSegments.push(new Curve(previousIntersectionPosition, directionOfPreviousIntersection, intersectionPosition));\r\n\t\t\t\t\ts = nextSegmentIndex;\r\n\t\t\t\t\tpreviousIntersectionPosition = intersectionPosition;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnewSegments.push(new Curve(previousIntersectionPosition, directionOfPreviousIntersection, segment.end));\r\n\t\t\t\t\tpreviousIntersectionPosition = undefined;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (foundSelfIntersection) {\r\n\t\t\t\t\tnewSegments.push(new Curve(segment.start, segment.direction, intersectionPosition));\r\n\t\t\t\t\ts = nextSegmentIndex;\r\n\t\t\t\t\tpreviousIntersectionPosition = intersectionPosition;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnewSegments.push(segment);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn new Path(newSegments);\r\n\t}\r\n\r\n\tweld (maxWeldDistance) {\r\n\t\tlet longEnoughSegments = this.segments.filter(s => s.length > maxWeldDistance);\r\n\t\tlet newSegments = [];\r\n\t\tfor (let [segment, nextSegment] of It().windows(2).of(It.concat(longEnoughSegments, [longEnoughSegments[0]])())) {\r\n\t\t\tlet newEnd = segment.end;\r\n\r\n\t\t\tif (roughlyEqualVec2(segment.end, nextSegment.start, maxWeldDistance)) {\r\n\t\t\t\tnewEnd = nextSegment.start;\r\n\t\t\t}\r\n\r\n\t\t\tif (segment.isCurve)\r\n\t\t\t\tnewSegments.push(new Curve(segment.start, segment.direction, newEnd));\r\n\t\t\telse newSegments.push(new LineSegment(segment.start, newEnd));\r\n\t\t}\r\n\t\treturn new Path(newSegments);\r\n\t}\r\n\r\n\tscale (scalar) {\r\n\t\tvar segments = new Array(this.segments.length);\r\n\t\tfor (var i = 0; i < this.segments.length; i++) {\r\n\t\t\tvar each = this.segments[i];\r\n\t\t\tsegments[i] = each.scale(scalar);\r\n\t\t}\r\n\t\treturn new Path(segments, this.isClockwise);\r\n\t}\r\n\r\n\ttranslate (offset) {\r\n\t\tfunction translate(offset) {\r\n\t\t\tvar segments = new Array(this.segments.length);\r\n\t\t\tfor (var i = 0; i < this.segments.length; i++) {\r\n\t\t\t\tvar each = this.segments[i];\r\n\t\t\t\tsegments[i] = each.translate(offset);\r\n\t\t\t}\r\n\t\t\treturn new Path(segments, this.isClockwise);\r\n\t\t}\r\n\t}\r\n\r\n\toffsetPerpendicular (offsetToRight) {\r\n\t\treturn new Path(this.segments.map(function (segment) {\r\n\t\t\treturn segment.offsetPerpendicular(offsetToRight);\r\n\t\t}).filter(segment => segment));\r\n\t}\r\n\r\n\toffsetPerpendicularLength (offsetToRight) {\r\n\t\tvar length = 0;\r\n\t\tfor (var s = 0; s < this.segments.length; s++) {\r\n\t\t\tlength += this.segments[s].offsetPerpendicularLength(offsetToRight);\r\n\t\t}\r\n\t\treturn length;\r\n\t}\r\n\r\n\tmapPerpendicular (offsetA, offsetToRightA, offsetToRightB) {\r\n\t\tvar currentSegment;\r\n\t\tvar currentOffsetA = 0;\r\n\t\tvar currentOffsetB = 0;\r\n\t\tvar tolerance = 1e-2;\r\n\r\n\t\tfor (var s = 0; s < this.segments.length; s++) {\r\n\t\t\tcurrentSegment = this.segments[s];\r\n\t\t\tvar segmentLengthA = currentSegment.offsetPerpendicularLength(offsetToRightA);\r\n\t\t\tvar segmentLengthB = currentSegment.offsetPerpendicularLength(offsetToRightB);\r\n\t\t\tvar nextOffsetA = currentOffsetA + segmentLengthA;\r\n\t\t\tvar nextOffsetB = currentOffsetB + segmentLengthB;\r\n\r\n\t\t\tif (nextOffsetA > offsetA - tolerance) {\r\n\t\t\t\tvar offsetAOnSegment = offsetA - currentOffsetA;\r\n\t\t\t\tvar offsetBOnSegment = currentSegment.mapPerpendicular(offsetAOnSegment, offsetToRightA, offsetToRightB);\r\n\t\t\t\treturn currentOffsetB + offsetBOnSegment;\r\n\t\t\t} else {\r\n\t\t\t\tcurrentOffsetA = nextOffsetA;\r\n\t\t\t\tcurrentOffsetB = nextOffsetB;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t// Return the segments that intersect\r\n\tintersections (b) {\r\n\t\tvar aSegments = this.segments;\r\n\t\tvar bSegments = b.segments;\r\n\t\tvar allIntersections = [];\r\n\t\tfor (var i = 0; i < aSegments.length; i++) {\r\n\t\t\tvar aSegment = aSegments[i];\r\n\t\t\tfor (var j = 0; j < bSegments.length; j++) {\r\n\t\t\t\tvar bSegment = bSegments[j];\r\n\t\t\t\tvar relativeIntersections = intersect(aSegment, bSegment);\r\n\r\n\t\t\t\tfor (var r = 0; r < relativeIntersections.length; r++) {\r\n\t\t\t\t\tvar intersection = relativeIntersections[r];\r\n\r\n\t\t\t\t\t// u,v is meant to be a value between 0,1 - shouldn't they all get scaled?\r\n\t\t\t\t\tintersection.u += i;\r\n\t\t\t\t\tintersection.v += j;\r\n\r\n\t\t\t\t\tallIntersections.push(intersection);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn allIntersections;\r\n\t}\r\n\r\n\t// Use a 'crossings number' to determine if p is inside the path\r\n\tcontainsPoint(p) {\r\n\t\tif (!this.isClosed)\r\n\t\t\treturn false;\r\n\r\n\t\t// Should use an actual Ray here, but the intersections code for\r\n\t\t// Ray-Line, Ray-Curve hasn't been written yet, only Ray-Ray\r\n\t\tvar segments = this.segments,\r\n\t\t\tcrossings = 0,\r\n\t\t\tdegenerate = false,\r\n\t\t\tray = new LineSegment(p, vec2.fromValues(this.boundingBox.right + 1, p[1]));\r\n\t\tfor (var i = 0; i < segments.length; i++) {\r\n\t\t\tvar potentials = intersect(ray, segments[i]);\r\n\t\t\t//console.log(\"containsPoint step\", i + \"/\" + (segments.length - 1), potentials.length);\r\n\r\n\t\t\tfor (var j = 0; j < potentials.length; j++) {\r\n\t\t\t\tif (potentials[j].uIsDegenerate) {\r\n\t\t\t\t\t//console.warn(\"containsPoint uIsDegenerate\", potentials[j]);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\tif (potentials[j].vIsDegenerate) {\r\n\t\t\t\t\tdegenerate = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (degenerate) {\r\n\t\t\t\t// If a point is degenerate, restart the search\r\n\t\t\t\t//console.log(\"containsPoint vIsDegenerate\", potentials[j]);\r\n\t\t\t\ti = -1;\r\n\t\t\t\tcrossings = 0;\r\n\t\t\t\tdegenerate = false;\r\n\t\t\t\t// make the ray longer and rotate it\r\n\t\t\t\tlet alongRayLonger = vec2.sub(vec2(0, 0), ray.end, ray.start);\r\n\t\t\t\tvec2.add(alongRayLonger, alongRayLonger, alongRayLonger);\r\n\t\t\t\tvec2.rotate(alongRayLonger, alongRayLonger, 0.5);\r\n\t\t\t\tvec2.add(ray.end, ray.start, alongRayLonger);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tcrossings += potentials.length;\r\n\t\t}\r\n\t\t//console.log(\"crossings: \" + crossings + \" => contained: \" + ((crossings & 1) == 1));\r\n\t\t//console.canvas(Drawing2D.canvas([this, ray]));\r\n\t\t//console.log(\"containsPoint crossings\", crossings);\r\n\t\treturn (crossings & 1) == 1;\r\n\t}\r\n\r\n\toffsetOf (p, returnInvalid) {\r\n\t\tvar closestSegmentIndex;\r\n\t\tvar closestDistance = Number.POSITIVE_INFINITY;\r\n\t\tvar closestOffset;\r\n\t\tvar closestInvalidOffset;\r\n\t\tvar closestInvalidSegmentIndex;\r\n\t\tvar tolerance = 1e-2;\r\n\r\n\t\tfor (var s = 0; s < this.segments.length; s++) {\r\n\t\t\tvar segment = this.segments[s];\r\n\t\t\tvar closestPoint = segment.closestPointTo(p);\r\n\t\t\tif (closestPoint) {\r\n\t\t\t\tvar distance = vec2.dist(p, closestPoint);\r\n\r\n\t\t\t\tif (distance < closestDistance) {\r\n\t\t\t\t\tvar offset = segment.offsetOf(p);\r\n\t\t\t\t\tif (offset >= -tolerance && offset <= segment.length + tolerance) {\r\n\t\t\t\t\t\tclosestDistance = distance;\r\n\t\t\t\t\t\tclosestSegmentIndex = s;\r\n\t\t\t\t\t\tclosestOffset = offset;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tclosestInvalidOffset = offset;\r\n\t\t\t\t\t\tclosestInvalidSegmentIndex = s\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (closestOffset !== undefined)\r\n\t\t\treturn closestOffset + this.segmentOffsets[closestSegmentIndex];\r\n\t\telse if (returnInvalid)\r\n\t\t\treturn closestInvalidOffset + this.segmentOffsets[closestInvalidSegmentIndex];\r\n\t}\r\n\r\n\tclosestPointTo (p, noEndPoints) {\r\n\t\tvar closestPoint;\r\n\t\tvar closestPointAtEndOfSegment;\r\n\t\tvar closestDistance = Number.POSITIVE_INFINITY;\r\n\t\tvar closestDistanceFromEndOfSegment = Number.POSITIVE_INFINITY;\r\n\t\tvar tolerance = 1e-2;\r\n\r\n\t\tfor (var s = 0; s < this.segments.length; s++) {\r\n\t\t\tvar segment = this.segments[s];\r\n\t\t\tvar closestPointOnSegment = segment.closestPointTo(p);\r\n\t\t\tif (closestPointOnSegment) {\r\n\t\t\t\tvar distance = vec2.dist(p, closestPointOnSegment);\r\n\r\n\t\t\t\tif (distance < closestDistance) {\r\n\t\t\t\t\tclosestDistanceFromEndOfSegment = distance;\r\n\t\t\t\t\tclosestPointAtEndOfSegment = closestPointOnSegment;\r\n\r\n\t\t\t\t\tvar offset = segment.offsetOf(p);\r\n\t\t\t\t\tif (offset >= -tolerance && offset <= segment.length + tolerance) {\r\n\t\t\t\t\t\tclosestDistance = distance;\r\n\t\t\t\t\t\tclosestPoint = closestPointOnSegment;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn closestPoint || (noEndPoints ? undefined : closestPointAtEndOfSegment);\r\n\t}\r\n\r\n\tpositionOf (offset) {\r\n\t\tvar segmentWithPoint = this.segments[0];\r\n\t\tvar segmentWithPointOffset = 0;\r\n\r\n\t\tfor (var s = 0; s < this.segments.length; s++) {\r\n\t\t\tif (this.segmentOffsets[s] > offset)\r\n\t\t\t\tbreak;\r\n\t\t\tif (this.segmentOffsets[s] < offset) {\r\n\t\t\t\tsegmentWithPoint = this.segments[s];\r\n\t\t\t\tsegmentWithPointOffset = this.segmentOffsets[s];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn segmentWithPoint.positionOf(offset - segmentWithPointOffset);\r\n\t}\r\n\r\n\tdirectionOf (offset) {\r\n\t\tvar segmentToUse;\r\n\t\tvar segmentOffset;\r\n\r\n\t\tfor (var s = 0; s < this.segments.length; s++) {\r\n\t\t\tif (this.segmentOffsets[s] > offset) {\r\n\t\t\t\tsegmentToUse = this.segments[s - 1];\r\n\t\t\t\tsegmentOffset = this.segmentOffsets[s - 1];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!segmentToUse) {\r\n\t\t\tsegmentToUse = this.segments[ this.segments.length-1];\r\n\t\t\tsegmentOffset = this.segmentOffsets.last();\r\n\t\t}\r\n\r\n\t\treturn segmentToUse.directionOf(offset - segmentOffset);\r\n\t}\r\n\r\n\tstatic packedSize (path) {\r\n\t\treturn path.segments.length * 2 * 3 * BinaryTypes.getByteSize(\"FloatLE\");\r\n\t}\r\n\r\n\tstatic pack (path, buffer, offset, maxSize) {\r\n\t\tlet fSize = BinaryTypes.getByteSize(\"FloatLE\");\r\n\r\n\t\tfor (let segment of path.segments) {\r\n\t\t\tbuffer.writeFloatLE(segment.start[0]); offset += fSize;\r\n\t\t\tbuffer.writeFloatLE(segment.start[1]); offset += fSize;\r\n\r\n\t\t\tbuffer.writeFloatLE(segment.direction[0]); offset += fSize;\r\n\t\t\tbuffer.writeFloatLE(segment.direction[1]); offset += fSize;\r\n\r\n\t\t\tbuffer.writeFloatLE(segment.end[0]); offset += fSize;\r\n\t\t\tbuffer.writeFloatLE(segment.end[1]); offset += fSize;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic unpack (buffer, offset, size) {\r\n\t\tlet nSegments = size / (2 * 3 * BinaryTypes.getByteSize(\"FloatLE\"));\r\n\t\tlet segments = new Array(nSegments);\r\n\t\tlet fSize = BinaryTypes.getByteSize(\"FloatLE\");\r\n\r\n\t\tfor (let i = 0; i < nSegments; i++) {\r\n\t\t\tlet startX = buffer.readFloatLE(offset); offset += fSize;\r\n\t\t\tlet startY = buffer.readFloatLE(offset); offset += fSize;\r\n\t\t\tlet directionX = buffer.readFloatLE(offset); offset += fSize;\r\n\t\t\tlet directionY = buffer.readFloatLE(offset); offset += fSize;\r\n\t\t\tlet endX = buffer.readFloatLE(offset); offset += fSize;\r\n\t\t\tlet endY = buffer.readFloatLE(offset); offset += fSize;\r\n\r\n\t\t\tsegments[i] = new Curve(\r\n\t\t\t\tvec2(startX, startY), vec2(directionX, directionY), vec2(endX, endY)\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn new Path(segments);\r\n\t}\r\n\r\n\tdump () {\r\n\t\tconsole.log(\"path dump\");\r\n\t\tfor (var i = 0; i < this.segments.length; i++) {\r\n\t\t\tvar segment = this.segments[i];\r\n\t\t\tconsole.log(\r\n\t\t\t\t\"\\t\" + (i + 1) + \"/\" + this.segments.length,\r\n\t\t\t\tsegment.type.typeName,\r\n\t\t\t\tsegment.start[0] + \", \" + segment.start[1],\r\n\t\t\t\t\"to\",\r\n\t\t\t\tsegment.end[0] + \", \" + segment.end[1]);\r\n\t\t}\r\n\t}\r\n\r\n\tget debug () {\r\n\t\tDebugPaths.add(this, 0x0000ff, \"debug\", 0, 1);\r\n\t\treturn \"shown\";\r\n\t}\r\n\r\n\tvertices (offsetToRight, minPointDistance) {\r\n\t\tvar vertices = [];\r\n\t\tvar lastVertex;\r\n\r\n\t\tfor (var s = 0; s < this.segments.length; s++) {\r\n\t\t\tvar segment = this.segments[s];\r\n\t\t\tvar segmentVertices = segment.vertices(offsetToRight);\r\n\r\n\t\t\tfor (var v = 0; v < segmentVertices.length; v++) {\r\n\t\t\t\tvar vertex = segmentVertices[v];\r\n\r\n\t\t\t\tif (!minPointDistance || !lastVertex || vec2.dist(lastVertex, vertex) > minPointDistance)\r\n\t\t\t\t\tvertices.push(vertex);\r\n\r\n\t\t\t\tlastVertex = vertex;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (minPointDistance && this.isClosed) vertices.pop();\r\n\r\n\t\treturn vertices;\r\n\t}\r\n\r\n\tuvs (offsetToRight, multiplierAlongPath) {\r\n\t\tvar uvs = [];\r\n\r\n\t\tfor (var s = 0; s < this.segments.length; s++) {\r\n\t\t\tvar segment = this.segments[s];\r\n\t\t\tvar segmentOffset = this.segmentOffsets[s];\r\n\r\n\t\t\tuvs = uvs.concat(segment.uvs(\r\n\t\t\t\toffsetToRight, multiplierAlongPath\r\n\t\t\t).map(function (uv) {\r\n\t\t\t\tuv[0] += segmentOffset * multiplierAlongPath;\r\n\t\t\t\treturn uv;\r\n\t\t\t}));\r\n\t\t}\r\n\r\n\t\treturn uvs;\r\n\t}\r\n\r\n\tdraw (context) {\r\n\t\tconst DEBUG_DRAW_JOINTS = false;\r\n\t\tif (!this.segments.length) return;\r\n\r\n\t\tcontext.stroke(this);\r\n\r\n\t\tif (!DEBUG_DRAW_JOINTS) return;\r\n\t\tcontext.dot(this.segments[0].start);\r\n\t\tfor (let segment of this.segments) {\r\n\t\t\tcontext.dot(segment.end);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// For an array of segments, determine if they are clockwise or counter-clockwise\r\nfunction orientation(segments) {\r\n\tvar sum = 0;\r\n\tfor (var i = 0; i < segments.length; i++) {\r\n\t\tvar segment = segments[i],\r\n\t\t\tdx = segment.end[0] - segment.start[0],\r\n\t\t\tdy = segment.end[1] + segment.start[1];\r\n\t\tsum += dx * dy;\r\n\t}\r\n\treturn sum > 0;\r\n}\r\n\r\n// Find the boundingBox for an array of segments\r\nvar MAX_VALUE = Number.MAX_VALUE,\r\n\tMIN_VALUE = Number.MIN_VALUE;\r\nfunction aabb(segments) {\r\n\tvar origin = vec2.fromValues(MAX_VALUE, MAX_VALUE),\r\n\t\tcorner = vec2.fromValues(MIN_VALUE, MIN_VALUE);\r\n\tfor (var i = 0; i < segments.length; i++) {\r\n\t\tvar segment = segments[i];\r\n\t\tvar bb = segment.boundingBox;\r\n\t\torigin[0] = Math.min(origin[0], bb.origin[0]);\r\n\t\torigin[1] = Math.min(origin[1], bb.origin[1]);\r\n\t\tcorner[0] = Math.max(corner[0], bb.corner[0]);\r\n\t\tcorner[1] = Math.max(corner[1], bb.corner[1]);\r\n\t}\r\n\treturn RectangleCorner(origin, corner);\r\n}","import vec2 from '../nd-linalg/Vector2';\r\nimport Path from '../shapes/Path';\r\nimport LineSegment from '../primitives/LineSegment';\r\nimport Curve from '../primitives/Curve';\r\n\r\nexport default function Pather(start) {\r\n\tthis.current = start || vec2.fromValues(0, 0);\r\n\tthis.direction = null;\r\n\tthis.segments = [];\r\n\tthis.orientation = 0;\r\n}\r\n\r\nObject.defineProperties(Pather.prototype, {\r\n\t\"name\":\t\t\t\t\t{value: \"Pather\"},\r\n\t\"path\": \t\t\t\t{get: toPath},\r\n\t\"isClockwise\": \t\t\t{get: isClockwise},\r\n\t\"isCounterClockwise\": \t{get: isCounterClockwise},\r\n\r\n\t\"append\": \t\t\t\t{value: append},\r\n\t\"moveTo\": \t\t\t\t{value: moveTo},\r\n\t\"lineTo\": \t\t\t\t{value: lineTo},\r\n\t\"curveTo\": \t\t\t\t{value: curveTo},\r\n\t\"close\": \t\t\t\t{value: close},\r\n\r\n\t\"scale\": \t\t\t\t{value: scale},\r\n\t\"translate\": \t\t\t{value: translate}\r\n});\r\n\r\nfunction toPath() {\r\n\treturn new Path(this.segments, this.isClockwise);\r\n}\r\n\r\nfunction isClockwise() {\r\n\treturn this.orientation > 0;\r\n}\r\n\r\nfunction isCounterClockwise() {\r\n\treturn !this.isClockwise;\r\n}\r\n\r\nfunction append(pather) {\r\n\tif (!pather.segments.length) return;\r\n\tthis.segments = this.segments.concat(pather.segments);\r\n\tthis.current = this.segments[this.segments.length - 1].end;\r\n\tthis.direction = pather.direction;\r\n\tthis.orientation += pather.orientation\r\n\treturn this;\r\n}\r\n\r\nfunction moveTo(position) {\r\n\tthis.current = position;\r\n\tthis.direction = null;\r\n\treturn this;\r\n}\r\n\r\nfunction lineTo(position) {\r\n\tvar line = new LineSegment(this.current, position);\r\n\tthis.segments.push(line);\r\n\tthis.current = line.end;\r\n\tthis.direction = line.direction;\r\n\tupdateOrientation(this);\r\n\treturn this;\r\n}\r\n\r\nfunction curveTo(position, direction) {\r\n\tfunction NoDirection() { throw \"Direction required if no existing segments\"; }\r\n\tvar curve = new Curve(this.current, direction || this.direction || NoDirection(), position);\r\n\tthis.segments.push(curve);\r\n\tthis.current = curve.end;\r\n\tthis.direction = curve.endDirection;\r\n\tupdateOrientation(this);\r\n\treturn this;\r\n}\r\n\r\nfunction close() {\r\n\tif (!this.segments.length)\r\n\t\tthrow \"Cannot close an empty path\";\r\n\tif (this.path.isClosed)\r\n\t\treturn this.path;\r\n\r\n\tvar line = new LineSegment(this.current, this.segments[0].start);\r\n\tthis.segments.push(line);\r\n\tthis.current = line.end;\r\n\tthis.direction = line.direction;\r\n\tupdateOrientation(this);\r\n\r\n\t// console.log('after closing',this.path.isClosed );\r\n\r\n\treturn this.path;\r\n}\r\n\r\nfunction scale(scale) {\r\n\treturn this.path.scale(scale);\r\n}\r\n\r\nfunction translate(offset) {\r\n\treturn this.path.translate(offset);\r\n}\r\n\r\nfunction updateOrientation(pather) {\r\n\tvar segment = pather.segments[pather.segments.length - 1],\r\n\t\tdx = segment.end[0] - segment.start[0],\r\n\t\tdy = segment.end[1] + segment.start[1];\r\n\tpather.orientation += dx * dy;\r\n}\r\n","/* TODO\r\n * Curves\r\n\t1) For curves that are shrinking, only a wavefront that is within its original\r\n\t\tcircle can have a collision event with it\r\n\t2) For curves that are expanding, all vertices have a potential future event\r\n\t\twith the circle? can we limit this some how to only !acute vertices?\r\n\t3) A shrinking curve can collapse in on itself (radius=0)\r\n * Order the pathways from the center outward, return an array of paths rather than\r\n *   haphazard segments, building them up from outside in, merging as it intersects\r\n *\r\n * Find the center line:\r\n *  1) Find the longest spoke-tospoke\r\n *  2) Remove tiny segments\r\n *  3) Remove the first and last segment\r\n *  4) Extent the first and last segment to intersect the nearest original edge\r\n */\r\n\r\nimport vec2 from '../nd-linalg/Vector2';\r\nimport vec3 from '../nd-linalg/Vector3';\r\nimport LineSegment from '../primitives/LineSegment';\r\nimport * as SkeletonEdge from './SkeletonEdge';\r\nimport SkeletonWavefront from './SkeletonWavefront';\r\nimport Pather from '../../es6/helpers/Pather';\r\nimport Ray from '../primitives/Ray';\r\nimport Line from '../primitives/Line';\r\nimport intersect from '../intersections/Intersections';\r\n\r\nvar DeadEdge = Symbol(\"DeadEdge\");\r\nvar infinity = Infinity;\r\nexport default class StraightSkeleton {\r\n\tconstructor(path, length, options) {\r\n\t\toptions = options || {};\r\n\t\tthis.length = length || infinity;\r\n\t\tthis.spokes = [];\r\n\t\tthis.waves = [];\r\n\r\n\t\tthis.DEBUG_DRAW_INITIAL = options.DEBUG_DRAW_INITIAL || false;\r\n\t\tthis.DEBUG_DRAW_SKIPPED_EVENTS = options.DEBUG_DRAW_SKIPPED_EVENTS || false;\r\n\t\tthis.DEBUG_DRAW_STEPS = options.DEBUG_DRAW_STEPS || false;\r\n\t\tthis.DEBUG_DRAW_MOVE = options.DEBUG_DRAW_MOVE || this.DEBUG_DRAW_STEPS;\r\n\t\tthis.DEBUG_DRAW_OBTUSE_EVENTS_EACH_STEP = options.DEBUG_DRAW_OBTUSE_EVENTS_EACH_STEP || false;\r\n\r\n\t\tif (\"capWeight\" in options) {\r\n\t\t\tlet startDirection = vec2.scale(vec2(0, 0), path.segments[0].direction, -1),\r\n\t\t\t\tstartNormal = [-startDirection[1], startDirection[0]],\r\n\t\t\t\tendDirection = path.segments[path.segments.length - 1].direction,\r\n\t\t\t\tendNormal = [-endDirection[1], endDirection[0]];\r\n\r\n\t\t\tlet a = vec2.lerp(vec2(0, 0), startDirection, startNormal, 1 - options.capWeight);\r\n\t\t\tlet b = vec2.lerp(vec2(0, 0), startDirection, startNormal, options.capWeight);\r\n\t\t\tlet c = vec2.lerp(vec2(0, 0), endDirection, endNormal, 1 - options.capWeight);\r\n\t\t\tlet d = vec2.lerp(vec2(0, 0), endDirection, endNormal, options.capWeight);\r\n\r\n\t\t\tthis.caps = [\r\n\t\t\t\tnew Ray(path.start, [b[1], -b[0]]),\r\n\t\t\t\tnew Ray(path.start, a),\r\n\r\n\t\t\t\tnew Ray(path.end, [d[1], -d[0]]),\r\n\t\t\t\tnew Ray(path.end, c),\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\tthis.wavefronts = SkeletonEdge\r\n\t\t\t.create(path, this.length === infinity, this.cap)\r\n\t\t\t.map(each => new SkeletonWavefront(this, each, 0).initialise());\r\n\r\n\t\t//this.process();\r\n\t\toptions.DEBUG ? this.debugprocess() : this.process();\r\n\t}\r\n\r\n\tget name() { return \"StraightSkeleton\"; }\r\n\r\n\tprocess() {\r\n\t\twhile(this.wavefronts.length > 0) {\r\n\t\t\tlet wavefront = this.wavefronts[0];\r\n\t\t\tif (!wavefront.process(this.length)) {\r\n\t\t\t\t// if (this.length === infinity) throw \"EventsExhaustedPrematurely\";\r\n\t\t\t\tthis.commitWavefront(wavefront);\r\n\t\t\t\twavefront.remove();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tdebugprocess() {\r\n\t\twhile(this.wavefronts.length > 0) {\r\n\t\t\tlet wavefront = this.wavefronts[0];\r\n\t\t\tif (!wavefront.debugprocess(this.length)) {\r\n\t\t\t\tif (this.length === infinity) throw \"EventsExhaustedPrematurely\";\r\n\t\t\t\tthis.commitWavefront(wavefront);\r\n\t\t\t\twavefront.remove();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\taddWavefront(wavefront) {\r\n\t\tthis.wavefronts.push(wavefront);\r\n\t}\r\n\r\n\tremoveWavefront(wavefront) {\r\n\t\tthis.wavefronts.splice(this.wavefronts.indexOf(wavefront), 1);\r\n\t}\r\n\r\n\tcommitSkeletonSpoke(start, end) {\r\n\t\tthis.spokes.push(new LineSegment(vec3.clone(start), vec3.clone(end)));\r\n\t}\r\n\r\n\tcommitSkeletonVertex(vertex) {\r\n\t\tlet beginning = vec3(vertex.position[0], vertex.position[1], vertex.wavefront.time);\r\n\t\tthis.commitSkeletonSpoke(vertex.beginning, beginning);\r\n\t\tvertex.beginning = beginning;\r\n\t}\r\n\r\n\tcommitWavefront(wavefront) {\r\n\t\tfor (let edge of wavefront.root)\r\n\t\t\tthis.commitSkeletonVertex(edge.start);\r\n\r\n\t\tif (!(\"caps\" in this))\r\n\t\t\treturn this.commitFullWavefront(wavefront);\r\n\r\n\t\t// Find all the caps\r\n\t\tlet caps = [];\r\n\t\tfor (let edge of wavefront.root)\r\n\t\t\tif (edge.isCap) caps.push(edge);\r\n\r\n\t\tif (caps.length === 0)\r\n\t\t\treturn this.commitFullWavefront(wavefront);\r\n\r\n\t\t// iterate forward, then backward, marking edges as 'dead' until one\r\n\t\t// intersects the cut, which gets split at the cutting point, or another\r\n\t\t// cap is reached\r\n\t\tfor (let cap of caps) {\r\n\t\t\tlet cut = cap.side === SkeletonEdge.StartCapEdge ? this.caps[0] : this.caps[2];\r\n\t\t\tlet current = cap;\r\n\t\t\tlet dead = [];\r\n\t\t\twhile(true) {\r\n\t\t\t\tlet intersections = intersect(current.segment, cut);\r\n\t\t\t\tif (intersections.length !== 0) {\r\n\t\t\t\t\tcurrent.cutsegment = new LineSegment(intersections[0].p, (current.cutsegment || current.segment).end);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!current.isCap) current.side = DeadEdge;\r\n\t\t\t\tdead.push(current);\r\n\r\n\t\t\t\tcurrent = current.next;\r\n\t\t\t\tif (current.isCap) break;\r\n\t\t\t}\r\n\r\n\t\t\tcut = cap.side === SkeletonEdge.EndCapEdge ? this.caps[3] : this.caps[1];\r\n\t\t\tcurrent = cap;\r\n\t\t\tdead = [];\r\n\t\t\twhile(true) {\r\n\t\t\t\tlet intersections = intersect(current.segment, cut);\r\n\t\t\t\tif (intersections.length !== 0) {\r\n\t\t\t\t\tif (current.cutsegment) current.cutreverse = true;\r\n\t\t\t\t\tcurrent.cutsegment = new LineSegment((current.cutsegment || current.segment).start, intersections[0].p);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!current.isCap) current.side = DeadEdge;\r\n\t\t\t\tdead.push(current);\r\n\r\n\t\t\t\tcurrent = current.previous;\r\n\t\t\t\tif (current.isCap) break;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let cap of caps)\r\n\t\t\tif (!cap.cutsegment)\r\n\t\t\t\tcap.side = DeadEdge;\r\n\r\n\t\tthis.commitFullWavefront(wavefront);\r\n\t}\r\n\r\n\tcommitFullWavefront(wavefront) {\r\n\t\tlet side = null, pather = null, segment = null;\r\n\t\tvar commit = () => {\r\n\t\t\tif (pather && side !== DeadEdge)\r\n\t\t\t\tthis.waves.push({\"path\": pather.path, \"side\": side});\r\n\t\t};\r\n\r\n\t\tfor (let edge of wavefront.root) {\r\n\t\t\tsegment = edge.cutsegment || edge.segment;\r\n\t\t\tif (side !== edge.side) {\r\n\t\t\t\tcommit();\r\n\t\t\t\tside = edge.side;\r\n\t\t\t\tpather = new Pather();\r\n\r\n\t\t\t\tif (edge.cutreverse) {\r\n\t\t\t\t\tpather.moveTo(vec2.clone(edge.start.position));\r\n\t\t\t\t\tpather.lineTo(vec2.clone(edge.cutsegment.end));\r\n\t\t\t\t\tcommit();\r\n\t\t\t\t\tpather = new Pather();\r\n\t\t\t\t\tpather.moveTo(vec2.clone(edge.cutsegment.start));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpather.moveTo(vec2.clone(segment.start));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (edge.cutreverse) {\r\n\t\t\t\tpather.lineTo(vec2.clone(edge.segment.end));\r\n\t\t\t} else {\r\n\t\t\t\tpather.lineTo(vec2.clone(segment.end));\r\n\t\t\t}\r\n\t\t}\r\n\t\tcommit();\r\n\t}\r\n\r\n\tdraw(context) {\r\n\t\tfor (let wavefront of this.wavefronts)\r\n\t\t\twavefront.draw(context);\r\n\t\tfor (let spoke of this.spokes)\r\n\t\t\tspoke.draw(context);\r\n\t}\r\n}\r\n","import * as THREE from 'three';\r\nimport { ROUGHLY_EPSILON } from '../missing-stuff';\r\nimport vec3 from '../nd-linalg/Vector3';\r\n\r\nimport cdt2d from 'cdt2d';\r\nimport cleanPSLG from 'clean-pslg';\r\n\r\nexport default Shape;\r\n\r\nfunction Shape(contourPath, holes) {\r\n\tthis.contour = contourPath;\r\n\tthis.holes = holes || [];\r\n}\r\n\r\nObject.defineProperties(Shape.prototype, {\r\n\t\"contains\": {value: contains},\r\n\t\"union\": {value: union},\r\n\t\"difference\": {value: difference},\r\n\t\"intersection\": {value: intersection},\r\n\t\"not\": {value: not},\r\n\t\"triangulate\": {value: triangulate},\r\n\t\"area\": {value: area},\r\n\t\"split\": {value: split},\r\n\t\"grow\": {value: grow},\r\n\t\"growWithSkeleton\": {value: growWithSkeleton}\r\n});\r\n\r\nfunction contains(otherShape) {\r\n\tvar intersects = this.contour.intersections(otherShape.contour).length === 0;\r\n\tif (intersects) return false;\r\n\r\n\tfor (var point of otherShape.contour.segments.map(s => s.start)) {\r\n\t\tif (!this.contour.containsPoint(point)) return false;\r\n\t}\r\n\r\n\treturn true;\r\n}\r\n\r\nfunction union(otherShape) {\r\n\r\n}\r\n\r\nfunction difference(otherShape, clipGrowthOffset) {\r\n\tif (otherShape.contains(this)) return [];\r\n\tvar difference = Clipper.difference(this.contour, otherShape.grow(clipGrowthOffset).contour);\r\n\treturn difference.map(contour => new Shape(contour));\r\n}\r\n\r\nfunction intersection(otherShape) {\r\n\r\n}\r\n\r\nfunction not(otherShape) {\r\n\r\n}\r\n\r\nfunction triangulate(minVertexDistance = 0.00001) {\r\n\tconst geometry = new THREE.Geometry();\r\n\r\n\tconst points = [];\r\n\tconst edges = [];\r\n\r\n\tconst vertices = [];\r\n\r\n\tthis.contour.segments.forEach( function( {start, end}, index ){\r\n\t\tvertices.push( start, end );\r\n\t\tpoints.push( [start[0], start[1]], [end[0], end[1]] );\r\n\t\tedges.push( [index * 2, index * 2 + 1] );\r\n\t});\r\n\r\n\t//\tpreserve z-axis data...\r\n\tconst zs = {};\r\n\tvertices.forEach( function( [x,y,z] ){\r\n\t\tzs[ x.toFixed(4)+'_'+y.toFixed(4) ] = z;\r\n\t});\r\n\r\n\t//\tclean up skeleton + contour because it's not a valid edge loop\r\n\tcleanPSLG( points, edges );\r\n\r\n\tconst triangulation = cdt2d( points, edges, {exterior:false} );\r\n\r\n\tconst points3D = points.map( function( [x,y] ){\r\n\t\tconst key = x.toFixed(4)+'_'+y.toFixed(4);\r\n\t\tconst z = zs[key];\r\n\t\tif( z === undefined ){\r\n\t\t\treturn [ x,y,0 ];\r\n\t\t}\r\n\t\treturn [x,y,z];\r\n\t});\r\n\r\n\t// console.log( zs, points3D );\r\n\r\n\tgeometry.vertices = points3D.map( function( [x,y,z] ){\r\n\t\treturn new THREE.Vector3( x,y,z );\r\n\t});\r\n\r\n\tgeometry.faces = triangulation.map( function( [ix, iy, iz] ){\r\n\t\treturn new THREE.Face3( ix, iy, iz );\r\n\t});\r\n\r\n\treturn geometry;\r\n}\r\n\r\n// function triangulate2(minVertexDistance = 0.00001) {\r\n// \tvar geometry = new THREE.Geometry();\r\n\r\n// \tconst vs = this.contour.vertices(0, minVertexDistance);\r\n\r\n// \t//\tTODO / FIXME\r\n// \t//\tthis is pretty awful, find a more elegant solution...\r\n// \tconst unique = [];\r\n// \tfor( let i=0; i<vs.length; i++ ){\r\n// \t\tconst vertex = vs[ i ];\r\n\r\n// \t\tlet found = false;\r\n// \t\tfor( let s=0; s<unique.length; s++ ){\r\n// \t\t\tif( vec3.dist( unique[ s ], vertex ) < minVertexDistance ){\r\n// \t\t\t\tfound = true;\r\n// \t\t\t\tbreak;\r\n// \t\t\t}\r\n// \t\t}\r\n\r\n// \t\tif( !found ){\r\n// \t\t\tunique.push( vertex );\r\n// \t\t}\r\n// \t}\r\n\r\n// \tconsole.log( unique );\r\n\r\n// \tconst vertices = unique.reduce( function( collection, vertex ){\r\n// \t\tconst z = vertex[2] !== undefined ? vertex[2] : 0;\r\n// \t\tcollection.push( vertex[0], vertex[1], z );\r\n// \t\treturn collection;\r\n// \t}, [] );\r\n\r\n// \t// console.log(vertices);\r\n\r\n// \tvar triangulation = earcut( vertices, null, 3 );\r\n// \tconsole.log(triangulation);\r\n\r\n// \tfor (var i = 0; i < triangulation.length; i +=3){\r\n// \t\tconst ia = triangulation[ i ] * 3;\r\n// \t\tconst ib = triangulation[ i + 1 ] * 3;\r\n// \t\tconst ic = triangulation[ i + 2 ] * 3;\r\n\r\n// \t\tconst va = new THREE.Vector3( vertices[ia], vertices[ia+1], vertices[ia+2] );\r\n// \t\tconst vb = new THREE.Vector3( vertices[ib], vertices[ib+1], vertices[ib+2] );\r\n// \t\tconst vc = new THREE.Vector3( vertices[ic], vertices[ic+1], vertices[ic+2] );\r\n\r\n// \t\tgeometry.vertices.push( va, vb, vc );\r\n// \t\tgeometry.faces.push( new THREE.Face3( i, i+1, i+2 ) );\r\n\r\n// \t\t// console.log( i, va, i+1, vb, i+2, vc );\r\n// \t}\r\n\r\n// \t// console.log( geometry.vertices );\r\n\r\n// \treturn geometry;\r\n// }\r\n\r\nfunction area() {\r\n\tvar vertices = earcut([this.contour.vertices(0, 1)]);\r\n\r\n\tvar area = 0;\r\n\tvar side1 = vec2(0, 0);\r\n\tvar side2 = vec2(0, 0);\r\n\r\n\tfor (var t = 0; t < vertices.length; t += 3) {\r\n\t\tvec2.sub(side1, vertices[t + 1], vertices[t]);\r\n\t\tvec2.sub(side2, vertices[t + 2], vertices[t]);\r\n\t\tarea += 0.5 * Math.abs(vec2.crossz(side1, side2));\r\n\t}\r\n\r\n\treturn area;\r\n}\r\n\r\nfunction split(splittingBiRay) {\r\n\t// TODO faking it by intersecting the shape with two really large boxes on either side of the biray\r\n\t// TODO doesn't handle split resulting in more than 2 shapes\r\n\tvar boxSize = 1000;\r\n\tvar perpendicularDirection = vec2.perpendicular(vec2(0, 0), splittingBiRay.direction);\r\n\r\n\tvar box1 = (new Pather())\r\n\t\t.lineTo(splittingBiRay.direction)\r\n\t\t.lineTo(vec2.add(vec2(0, 0), splittingBiRay.direction, perpendicularDirection))\r\n\t\t.lineTo(vec2.sub(vec2(0, 0), perpendicularDirection, splittingBiRay.direction))\r\n\t\t.lineTo(vec2.negate(vec2(0, 0), splittingBiRay.direction))\r\n\t\t.close()\r\n\t\t.scale(boxSize)\r\n\t\t.translate(splittingBiRay.middle);\r\n\r\n\tvar box2 = box1.translate(vec2.scale(vec2(0, 0), perpendicularDirection, -boxSize));\r\n\r\n\tvar results = [\r\n\t\tClipper.intersection(this.contour, box1)[0],\r\n\t\tClipper.intersection(this.contour, box2)[0]\r\n\t].filter(c => c).map(c => new Shape(c));\r\n\r\n\tfor (var shape of results) {\r\n\t\tif (!shape.contour.isClosed) {\r\n\t\t\tDebugPaths.add(box1, 0x00ff00, \"splitfail\", 0, 2);\r\n\t\t\tDebugPaths.add(this.contour, 0x00ffff, \"splitfail\", 0, 4);\r\n\t\t\tDebugPaths.add(shape.contour, 0xff00ff, \"splitfail\", 0, 4);\r\n\t\t\tthrow(\"splitfail\");\r\n\t\t}\r\n\t}\r\n\r\n\treturn results;\r\n}\r\n\r\nfunction grow (amount) {\r\n\r\n\r\n\t//var offsetContour = this.contour.offsetPerpendicular(this.contour.isCounterClockwise ? amount : -amount);\r\n\t//DebugPaths.add(offsetContour, 0xffffff, \"grow\", 0, 1);\r\n\t//offsetContour = offsetContour.makeContiguous(true);\r\n\t//DebugPaths.add(offsetContour, 0x888888, \"grow\", 0, 1.5);\r\n\t//offsetContour = offsetContour.simplifySelfIntersections();\r\n\t//DebugPaths.add(offsetContour, 0x8800ff, \"grow\", 0, 2);\r\n\treturn new Shape(offsetContour);\r\n}\r\n\r\nfunction growWithSkeleton (amount) {\r\n\tvar skeleton = new Skeleton(amount > 0 ? this.contour : this.contour.reverse(), Math.abs(amount));\r\n\treturn new Shape(skeleton.waves[0].path);\r\n}","// require(\"babel-core/register\")({\r\n// \tblacklist: ['regenerator', 'es6.forOf'],\r\n// \toptional: ['es7.classProperties']\r\n// });\r\n\r\n// import Clipper from './es6/clipper/clipper';\r\n// import Intersections from './es6/intersections/Intersections';\r\n// import PathCollisionCollection from './es6/shapes/PathCollisionCollection';\r\n\r\nimport * as BabelPolyfill from 'babel-polyfill';\r\n\r\nimport Skeleton from './skeleton/Skeleton';\r\n// import Circle from './es6/primitives/Circle';\r\n// import Curve from './es6/primitives/Curve';\r\n// import Line from './es6/primitives/Line';\r\n// import LineSegment from './es6/primitives/LineSegment';\r\n// import Ray from './es6/primitives/Ray';\r\n// import Rectangle from './es6/primitives/Rectangle';\r\n// import Triangle from './es6/primitives/Triangle';\r\nimport Path from './shapes/Path';\r\nimport Pather from './helpers/Pather';\r\nimport Shape from './shapes/Shape';\r\n// import Stroke from './es6/shapes/Stroke';\r\n\r\nconst out = {\r\n\tSkeleton,\r\n\tshapes: {\r\n\t\tPath, Pather, Shape\r\n\t}\r\n};\r\n\r\nmodule.exports = out;\r\n\r\n// module.exports = {\r\n// \tClipper: require('./es6/clipper/Clipper'),\r\n// \tIntersections: require('./es6/intersections/Intersections').default,\r\n// \tPathCollisionCollection: require('./es6/shapes/PathCollisionCollection'),\r\n// \tSkeleton: require('./es6/skeleton/Skeleton').default,\r\n// \tprimitives: {\r\n// \t\tCircle: require('./es6/primitives/Circle'),\r\n// \t\tCurve: require('./es6/primitives/Curve'),\r\n// \t\tLine: require('./es6/primitives/Line'),\r\n// \t\tLineSegment: require('./es6/primitives/LineSegment'),\r\n// \t\tRay: require('./es6/primitives/Ray'),\r\n// \t\tRectangle: require('./es6/primitives/Rectangle'),\r\n// \t\tTriangle: require('./es6/primitives/Triangle')\r\n// \t},\r\n// \tshapes: {\r\n// \t\tPath: require('./es6/shapes/Path').default,\r\n// \t\tPather: require('./es6/helpers/Pather').default,\r\n// \t\tShape: require('./es6/shapes/Shape').default,\r\n// \t\tStroke: require('./es6/shapes/Stroke').default\r\n// \t},\r\n// \tDrawing2D: require('./es6/drawing/Drawing2D')\r\n// };"],"names":["Mathmin","Math","min","Mathmax","max","Mathabs","abs","ROUGHLY_EPSILON","clamp","number","between","roughlyEqual","other","epsilon","roughlyEqualVec2","a","b","roughlyBetween","isRoughly","assert","condition","message","VectorFactory","require","SourceWriter","CodeBuilder","aliases","create","dimensions","destination","createArray","Array","i","createSource","join","createFunction","compile","cloneSource","cloneFunction","decomposed","slice","fromSource","fromFunction","averageFunction","out","iterable","set","n","vector","add","scale","properties","value","defineProperties","operations","cb","concat","map","operation","scaleAndAdd","lerp","negate","inverse","normalize","dot","wellFormed","squaredLength","length","squaredDistance","distance","sum","operationName","source","args","temporariesPool","output","name","type","push","scalar","body","apply","assign","tab","write","untab","compiled","string","Object","defineProperty","Vector2","x","y","fromValues","crossz","cross","perpendicular","scalePerpendicularAndAdd","angleBetween","angleBetweenWithDirections","rotate","theta","len","acos","aDirection","simpleAngle","linearDirection","sub","PI","v","angle","c","cos","s","sin","Vector3","z","ax","ay","az","bx","by","bz","atan2","Intersection","u","p","vec2","prototype","get","uIsDegenerate","vIsDegenerate","boundingBox","draw","Rectangle","corner","context","THICKNESS","pointToLineDistance","point","start","direction","perpendicularDirection","rayRayIntersections","det","bToA","dx","dy","lineLineIntersections","middle","lineRayIntersections","swapuv","rayLineIntersections","lineSegmentRayIntersections","line","ray","rayLineSegmentIntersections","potentials","lineLength","intersects","potential","lineSegmentLineSegmentIntersections","da","end","db","na","nb","orientation","sorted","id","position","sort","q","r","getAlphaValueAtPosition","order","position1","position2","u1","v1","u2","v2","determinant","uTolerance","vTolerance","circleLineSegmentIntersections","circle","lineSegmentCircleIntersections","dp","center","cCenter","radius","cInner","cOuter","bb4acCenter","bb4acInner","bb4acOuter","s1Center","sqrt","s2Center","s1Inner","s2Inner","s1Outer","s2Outer","s1","s2","solution1exists","solution2exists","solution1","solution2","AngleTheta","curveLineSegmentIntersections","curve","lineSegmentCurveIntersections","intersections","intersection","wedgeContainsPoint","circleCircleIntersections","c0","c1","r0","r1","d","dist","h","cx","cy","rx","ry","curveCurveIntersections","intersectionTypeLookup","intersectionTypeInstall","f","RAY","LINE","LINE_SEGMENT","CIRCLE","CURVE","intersect","RayTypeFunction","typeName","LineTypeFunction","LineSegmentTypeFunction","CircleTypeFunction","CurveTypeFunction","top","right","bottom","left","newRectangleCorner","origin","enumerable","getWidth","setWidth","getHeight","setHeight","getOrigin","setOrigin","getExtent","setExtent","getCorner","setCorner","containsPoint","translate","expand","width","height","offset","rectangle","stroke","Triangle","colinear","m","LineSegment","createProjection","project","midpoint","endDirection","subdivide","reverse","offsetPerpendicular","offsetPerpendicularLength","mapPerpendicular","roughlyContainsPoint","offsetOf","closestPointTo","positionOf","directionOf","vertices","uvs","clone","RectangleCorner","startToPoint","Intersections","offsetToRight","offsetA","offsetToRightA","offsetToRightB","multiplierAlongPath","startUV","endUV","Ray","Number","infinity","arrow","Line","rayOrMiddle","TIME_EPSILON","Infinity","SkeletonWavefront","processor","root","time","edge","wavefront","computeDirection","next","computeDirectionAndSpeed","computeCollapseEvent","computeSplitEvents","maximum","events","nextEvents","move","event","isValid","remove","process","group","log","depth","groupEnd","description","wavefronts","Drawing2D","colour","visuals","spokes","removeWavefront","maxtime","testEvent","eventTime","old","collapseEvent","vertexEvents","delta","pather","Pather","moveTo","lineTo","path","dimmer","alpha","segment","SkeletonSplitEvent","vertex","projection","projectionToEdgePosition","previousEdge","bisector","lineDirection","edgeToEdgePosition","dir1","dir2","lengthAt","projected","projectBy","distance1","distance2","isAcute","futureEdge","futureVertex","_this","filter","ele","nextEdge","cut","split","style","legend","previous","moved","commitSkeletonVertex","twist1","isDegenerate","twist2","edgeVertex","cutVertex","wavefront0","wavefront1","previous0","previous1","next0","next1","length0","length1","endit","commitSkeletonSpoke","vec3","addWavefront","pair","SkeletonVertex","isFinite","beginning","isParallel","speed","previousLine","nextLine","amount","movementBy","SkeletonCollapseEvent","collapse","lastElementId","Chain","each","Symbol","iterator","current","node","InnerEdge","OuterEdge","StartCapEdge","EndCapEdge","isInfinite","isClosed","createClosedPath","createOpenPath","segments","first","SkeletonEdge","second","edges","connect","side","isCap","startPosition","endPosition","previousDirection","sane","thisshouldnotbehappening","measuring","middle1","middle2","cutreverse","cutsegment","fontsize","textBaseline","textAlign","text","Curve","vChord","sign","chordLength","diff","rayStartToCenter","rayFromStartToCenter","rayHalfChordToCenter","rayFromHalfChordToCenter","angleSpan","createIfValid","e","undefined","vStartToCenter","pHalfChord","vHalfChord","vHalfChordToCenter","head","tail","rotationSign","centerToStart","centerToPoint","vEnd","tolerance","test","endToStart","dir","sign0","sign1","sign2","centerToEnd","directionAtPoint","angleAToPoint","angleBToPoint","DEBUG_CURVE_DISPLAY","Circle","arrowhead","desiredRadius","scaling","subdivisions","ceil","rotationMatrix","mat2","rotation","pointer","It","op","compose","chain","cycler","flattener","mapping","mapper","predicate","filterer","taker","dropper","size","windower","chunker","otherIterable","commoner","zipper","appender","step","initial","reducerer","firster","finder","item","haser","extremer","maxer","miner","aller","anyer","uniquer","emptyer","concatenation","createIteration","composition","cycle","seenValues","flatten","subIterable","take","drop","startIn","windows","window","shift","chunk","otherItems","Set","common","has","zip","done","append","reduce","reducedValue","find","extreme","bestMetric","best","rest","metric","negativeMapping","negativeMin","all","any","unique","empty","Path","isClockwise","aabb","segmentOffsets","j","startOffset","endOffset","firstSegmentToReplace","firstSegmentToReplaceIndex","lastSegmentToReplace","lastSegmentToReplaceIndex","segmentOffset","newSegments","newFirstSegment","unshift","newLastSegment","isLoop","values","segmentA","segmentB","eps","previousIntersectionPosition","foundSelfIntersection","intersectionPosition","nextSegmentIndex","otherSegment","offsetOnOtherSegment","o","intersectionInfos","offsetOfPreviousIntersection","directionOfPreviousIntersection","maxWeldDistance","longEnoughSegments","of","nextSegment","newEnd","isCurve","currentSegment","currentOffsetA","currentOffsetB","segmentLengthA","segmentLengthB","nextOffsetA","nextOffsetB","offsetAOnSegment","offsetBOnSegment","aSegments","bSegments","allIntersections","aSegment","bSegment","relativeIntersections","crossings","degenerate","alongRayLonger","returnInvalid","closestSegmentIndex","closestDistance","POSITIVE_INFINITY","closestOffset","closestInvalidOffset","closestInvalidSegmentIndex","closestPoint","noEndPoints","closestPointAtEndOfSegment","closestDistanceFromEndOfSegment","closestPointOnSegment","segmentWithPoint","segmentWithPointOffset","segmentToUse","last","minPointDistance","lastVertex","segmentVertices","pop","uv","DEBUG_DRAW_JOINTS","BinaryTypes","getByteSize","buffer","maxSize","fSize","writeFloatLE","nSegments","startX","readFloatLE","startY","directionX","directionY","endX","endY","MAX_VALUE","MIN_VALUE","bb","toPath","isCounterClockwise","curveTo","close","NoDirection","updateOrientation","DeadEdge","StraightSkeleton","options","waves","DEBUG_DRAW_INITIAL","DEBUG_DRAW_SKIPPED_EVENTS","DEBUG_DRAW_STEPS","DEBUG_DRAW_MOVE","DEBUG_DRAW_OBTUSE_EVENTS_EACH_STEP","startDirection","startNormal","endNormal","capWeight","caps","cap","initialise","DEBUG","debugprocess","commitWavefront","splice","indexOf","commitFullWavefront","dead","commit","spoke","Shape","contourPath","holes","contour","contains","union","difference","not","triangulate","area","grow","growWithSkeleton","otherShape","clipGrowthOffset","Clipper","minVertexDistance","geometry","THREE","points","forEach","index","zs","toFixed","triangulation","cdt2d","exterior","points3D","key","faces","ix","iy","iz","earcut","side1","side2","t","splittingBiRay","boxSize","box1","box2","results","shape","offsetContour","skeleton","Skeleton","module","exports"],"mappings":"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"}