{"version":3,"file":"compgeo.js","sources":["../es6/missing-stuff/index.js","../es6/nd-linalg/VectorFactory.js","../es6/code-builder/SourceWriter.js","../es6/meta-eval/index.js","../es6/code-builder/CodeBuilder.js","../es6/nd-linalg/Vector.js","../es6/nd-linalg/Vector2.js","../es6/nd-linalg/Vector3.js","../es6/helpers/Angles.js","../es6/intersections/Intersections.js","../es6/primitives/Rectangle.js","../es6/primitives/Triangle.js","../es6/primitives/LineSegment.js","../es6/primitives/Ray.js","../es6/primitives/Line.js","../es6/skeleton/SkeletonWavefront.js","../es6/skeleton/SkeletonSplitEvent.js","../es6/skeleton/SkeletonVertex.js","../es6/skeleton/SkeletonCollapseEvent.js","../es6/datastructures/Chain.js","../es6/skeleton/SkeletonEdge.js","../es6/primitives/Curve.js","../es6/iteratorers/index.js","../es6/shapes/Path.js","../es6/helpers/Pather.js","../es6/skeleton/Skeleton.js","../es6/shapes/Shape.js","../es6/index.js"],"sourcesContent":["import Vector2 from '../nd-linalg/Vector2';\n\nconst Mathmin = Math.min,\n\tMathmax = Math.max,\n\tMathabs = Math.abs;\n\nexport const ROUGHLY_EPSILON = 1e-4;\n\nexport function clamp(min, number, max) {\n\treturn Mathmin(Mathmax(number, min), max);\n}\n\nexport function between(min, number, max) {\n\treturn min <= number && number <= max;\n}\n\nexport function withinRange(target, number, range) {\n\t$Number.between(target - range, number, target + range);\n}\n\nexport function betweenModulo(start, number, end, period) {\n\tvar numberModulo = (number % period + period) % period;\n\tvar startModulo = (start % period + period) % period;\n\tvar endModulo = (end % period + period) % period;\n\tif (start <= end) return numberModulo.between(startModulo, end === period ? period : endModulo);\n\telse return numberModulo > startModulo || numberModulo < endModulo;\n}\n\nexport function roughlyEqual(number, other, epsilon) {\n\treturn Mathabs(number - other) <= (epsilon || ROUGHLY_EPSILON);\n}\n\nexport function roughlyEqualVec2( a, b, epsilon ){\n\treturn ( Math.abs(a[0] - b[0]) <= ( epsilon || ROUGHLY_EPSILON) )\n\t\t&& ( Math.abs(a[1] - b[1]) <= ( epsilon || ROUGHLY_EPSILON) );\n}\n\nexport function assertRoughlyEqual(number, other, epsilon ) {\n\treturn assert( Mathabs(number - other) <= ( epsilon || ROUGHLY_EPSILON) );\n}\n\nexport function assertRoughlyEqualVec2(vec, other, epsilon ) {\n\treturn assert( ( Math.abs(vec[0] - other[0]) <= ( epsilon || ROUGHLY_EPSILON) )\n\t\t&& ( Math.abs(vec[1] - other[1]) <= ( epsilon || ROUGHLY_EPSILON) ) );\n}\n\nexport function roughlyBetween(min, number, max, epsilon) {\n\treturn (min < number || isRoughly( min, number, epsilon))\n\t\t&& (number < max || isRoughly( max, number, epsilon));\n}\n\nexport function assert(condition, message) {\n  if (!condition) {\n      throw message || \"Assertion failed\";\n  }\n}\n\nexport function mapPush( map, key, value ){\n\treturn map.set( key, value );\n}\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw message || \"Assertion failed\";\n  }\n}\n\nfunction isRoughly( a, b, epsilon ){\n\treturn Math.abs( a-b ) <= ( epsilon || ROUGHLY_EPSILON );\n}","let VectorFactory = {};\n\nexport default VectorFactory;\n\nconst ROUGHLY_EPSILON = 1e-4;\nlet isRoughly = function(number, other, epsilon) {\n\treturn Math.abs(this - other) <= (epsilon || ROUGHLY_EPSILON);\n}\n\nlet min =\t\t\t\t(cb, a, b) =>\tcb.map(\"Math.min\", a, b),\n\tmax =\t\t\t\t(cb, a, b) =>\tcb.map(\"Math.max\", a, b),\n\tinverse =\t\t\t(cb, a) =>\t\tcb.map(\"1.0 /\", a),\n\tnegate =\t\t\t(cb, a) =>\t\tcb.map(\"[[negate]]\", a),\n\tsum = \t\t\t\t(cb, a) => \t\tcb.reduce(\"+\", a)[0],\n\taverage =\t\t\t(cb, a) =>\t\tcb.apply(\"/\", sum(cb, a), cb.scalar(a.length)),\n\tdot =\t\t\t\t(cb, a, b) =>\tsum(cb, cb.map(\"*\", a, b)),\n\tsquaredLength =\t\t(cb, a) =>\t\tdot(cb, a, a),\n\tlength =\t\t\t(cb, a)\t=>\t\tcb.apply(\"sqrt\", squaredLength(cb, a)),\n\twellFormed =        (cb, a) =>      cb.reduce(\"&&\", cb.map(\"&&\",\n\t\t\t\t\t\t\t\t\t\t\tcb.map(\"Number.isFinite\", a),\n\t\t\t\t\t\t\t\t\t\t\tcb.map(\"!Number.isNaN\", a)))[0],\n\tsquaredDistance =\t(cb, a, b) =>\tsquaredLength(cb, cb.map(\"-\", b, a)),\n\tdistance =\t\t\t(cb, a, b) =>\tcb.apply(\"sqrt\", squaredDistance(cb, a, b)),\n\tscaleAndAdd =\t\t(cb, a, b, c) => cb.map(\"+\", a, cb.map(\"*\", b, c)),\n\tlerp =\t\t\t\t(cb, a, b, c) => cb.map(\"+\", a, cb.map(\"*\", c, cb.map(\"-\", b, a)));\n\nfunction set(args) {\n\treturn function(cb, out) {\n\t\treturn args.map(each => cb.scalar(each));\n\t}\n}\n\nfunction operation(op) {\n\treturn function operation(cb, a, b) {\n\t\treturn cb.map(op, a, b);\n\t}\n}\n\nfunction normalize(cb, a) {\n\t// (||a||^2) > 0 ? a.(1/||a||) : 0\n\tlet zero = cb.scalar(\"0\"),\n\t\tcondition = [squaredLength(cb, a), \">\", zero],\n\t\tscalingLength = cb.phi(condition, cb.apply(\"1.0 /\", length(cb, a)), zero, \"length\");\n\treturn cb.map(\"*\", a, scalingLength);\n}\n\n\nfunction isRoughlyVec( a, b, epsilon ){\n\treturn ( Math.abs(a[0] - b[0]) <= (epsilon || ROUGHLY_EPSILON) )\n\t\t&& ( Math.abs(a[1] - b[1]) <= (epsilon || ROUGHLY_EPSILON) );\n}\n\nObject.defineProperties(VectorFactory, {\n\t\"set\": \t\t\t\t{value: set},\n\t\"operation\": \t\t{value: operation},\n\t\"min\": \t\t\t\t{value: min},\n\t\"max\": \t\t\t\t{value: max},\n\t\"scaleAndAdd\": \t\t{value: scaleAndAdd},\n\t\"inverse\": \t\t\t{value: inverse},\n\t\"dot\": \t\t\t\t{value: dot},\n\t\"squaredLength\": \t{value: squaredLength},\n\t\"length\": \t\t\t{value: length},\n\t\"wellFormed\":       {value: wellFormed},\n\t\"squaredDistance\": \t{value: squaredDistance},\n\t\"distance\": \t\t{value: distance},\n\t\"negate\": \t\t\t{value: negate},\n\t\"sum\": \t\t\t\t{value: sum},\n\t\"average\": \t\t\t{value: average},\n\t\"normalize\": \t\t{value: normalize},\n\t\"lerp\": \t\t\t{value: lerp},\n\t\"isRoughly\": {value:isRoughlyVec}\n});\n","/* SourceWriter, by Michael Lucas-Smith (c) 2014\n\n Very simple tool for writing out lines of source code\n while keeping track of tabbing depth and auto-tabbing\n based on trailing { and } bracketing.\n\n */\n\nfunction SourceWriter() {\n\tthis.depth = 0;\n\tthis.string = \"\";\n\tthis.last = null;\n\tthis.storemode = \" = \";\n\tthis.newlinemode = \";\";\n}\nSourceWriter.prototype.write = function(line) {\n\tif (!line) {\n\t\tconsole.trace();\n\t\tconsole.error(\"Expected a line\");\n\t}\n\n\tthis.last = line[line.length - 1];\n\tthis.string += line;\n}\nSourceWriter.prototype.writeln = function(line) {\n\tline = line || \"\";\n\tif (line.length > 0) {\n\t\tthis.last = line[line.length - 1];\n\t}\n\tif (this.last == \"{\") {\n\t\tthis.writeTabs();\n\t\tthis.string += line;\n\t\tthis.tab();\n\t} else if (this.last == \"}\") {\n\t\tthis.untab();\n\t\tthis.writeTabs();\n\t\tthis.string += line;\n\t} else if (this.last == \",\" || this.last == \";\") {\n\t\tthis.writeTabs();\n\t\tthis.string += line;\n\t} else {\n\t\tthis.writeTabs();\n\t\tthis.string += line + this.newlinemode;\n\t}\n\tthis.string += \"\\n\";\n\tthis.last = null;\n}\nSourceWriter.prototype.forloop = function(indexVariable, lengthVariable) {\n\tthis.writeln(\n\t\t\"for (var \" + indexVariable + \" = 0; \" +\n\t\tindexVariable + \" < \" + lengthVariable + \"; \" +\n\t\tindexVariable + \"++) {\");\n}\nSourceWriter.prototype.store = function(destination, source) {\n\tthis.writeln(destination + this.storemode + source);\n}\nSourceWriter.prototype.tab = function() {\n\tthis.depth++;\n}\nSourceWriter.prototype.untab = function() {\n\tthis.depth--;\n\tif (this.depth < 0) {\n\t\tconsole.trace();\n\t\tconsole.error(\"Unbalanced tabs in source writer\");\n\t}\n}\nSourceWriter.prototype.writeTabs = function() {\n\tfor (var i = 0; i < this.depth; i++) {\n\t\tthis.string += \"\\t\";\n\t}\n}\nSourceWriter.prototype.assertBalance = function() {\n\tif (this.depth != 0) { console.error(\"Unbalanced tabs\"); }\n}\n\nexport default SourceWriter;","import {transform} from \"babel-core\";\nimport babelParser from \"babel-core/lib/helpers/parse.js\";\n\nexport default function metaEval (source, environment, alias, filename, sourceUrlBase, options) {\n\n\tfilename = filename || alias;\n\toptions = options || {};\n\n\tif (options.transpile) {\n\t\ttry {\n\t\t\tsource = transform(source, {\n\t\t\t\tblacklist: [\"regenerator\", \"es6.tailCall\"],\n\t\t\t\tloose: [\"es6.forOf\"],\n\t\t\t\toptional: [\"es7.classProperties\"],\n\t\t\t\tfilename: filename\n\t\t\t}).code;\n\t\t} catch (e) {\n\t\t\tif (e instanceof SyntaxError) {\n\t\t\t\tlogSyntaxError(source, e);\n\t\t\t\treturn;\n\t\t\t} else throw e;\n\t\t}\n\t}\n\n\talias = alias || \"anonymousMetaProgram\" + createKuid();\n\tsource = source + \"\\n//# sourceURL=\" + sourceUrlBase + filename;\n\n\tlet executable = Object.create(Function.prototype);\n\tlet wrapperSource =\n`   // this function evaluates ${alias}\n\n\t// catch syntax errors early\n\ttry {__parse(source);}\n\tcatch(e) {\n\t\tif (e instanceof SyntaxError) {\n\t\t\t__logSyntaxError(source, e);\n\t\t\treturn;\n\t\t} else throw e;\n\t}\n\n\teval(source);\n\t`;\n\n\tif (options.wrapperFileListed) wrapperSource += `//# sourceURL=${sourceUrlBase + \"metaEval/\" + alias}`;\n\n\tenvironment.__logSyntaxError = logSyntaxError;\n\tenvironment.__parse = babelParser;\n\n\tlet wrapperParameters = [\"source\"].concat(Object.keys(environment)).concat([wrapperSource]);\n\tlet wrapperFunction = Function.prototype.constructor.apply(executable, wrapperParameters);\n\n\tlet environmentValues = Object.keys(environment).map(function (k) {return environment[k];});\n\tlet wrapperArguments = [source].concat(environmentValues);\n\n\twrapperFunction.apply(executable, wrapperArguments);\n\n\treturn environment;\n};\n\nfunction logSyntaxError (source, e) {\n\tif (e.loc) {\n\t\tconsole.error(\n\t\t\tsource.split(/\\n/).slice(0, e.loc.line).map((l, i) => i + \":\\t\" + l).join(\"\\n\") +\n\t\t\t\"\\n\" + (e.loc.line + \"\").replace(/./g, \"!\") + \"!\\t\" + source.split(/\\n/)[e.loc.line - 1].slice(0, e.loc.column)\n\t\t\t\t.replace(/[^\\t]/g, \"-\") + \"^\"\n\t\t);\n\t}\n\tconsole.error(e);\n}\n\n// kinda unique id\nfunction createKuid () {\n\treturn 'xxxxxxxx'.replace(/[xy]/g, function(c) {\n\t\tvar r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n\t\treturn v.toString(16);\n\t});\n}\n","import metaEval from \"../meta-eval\";\n\nvar DEBUG_SHOW_COMPILATION = false;\n\nvar ALLOW_ALIASING_OF_FIELDS = true;\nvar ALLOW_ALIASING_OF_EXPRESSIONS = true;\n\nObject.defineProperties(CodeBuilder, {\n\t\"compile\": {value: compile},\n});\n\nfunction CodeBuilder() {\n\tthis.tempCounter = 0;\n\tthis.phiCounter = 0;\n\tthis.assignments = [];\n\tthis.identities = [];\n\tthis.temporariesPool = [];\n\tthis.taken = [];\n}\n\nexport default CodeBuilder;\n\nObject.defineProperties(CodeBuilder.prototype, {\n\t// variables\n\t\"scalar\": \t\t{value: scalar},\n\t\"vector\": \t\t{value: vector},\n\t\"matrix\": \t\t{value: matrix},\n\n\t// state\n\t\"assign\": \t\t{value: assign},\n\n\t// transformation\n\t\"map\": \t\t\t{value: map},\n\t\"reduce\": \t\t{value: reduce},\n\t\"apply\": \t\t{value: apply},\n\n\t// execution flow\n\t\"phi\": \t\t\t{value: phi},\n\t\"output\": \t\t{value: output},\n\n\t// generating sourceode\n\t\"write\": \t\t{value: write}\n});\n\nfunction compile(name, args, sourceBody, context, environment) {\n\tif (DEBUG_SHOW_COMPILATION) {\n\t\tconsole.group(name);\n\t\tconsole.log(source);\n\t\tconsole.groupEnd(name);\n\t}\n\n\tcontext = context || \"unknown\";\n\tenvironment = environment || {};\n\n\tlet source =\n`\"use strict\";\n// this is auto-generated code\n\tvar sqrt = Math.sqrt;\n\texports[\"${name}\"] = function ${name}(${args.join(\", \")}) {\n\t\t${sourceBody}}`;\n\n\tlet functionExports = {};\n\tenvironment.exports = functionExports;\n\n\tmetaEval(\n\t\tsource,\n\t\tenvironment,\n\t\t\"CodeBuilder:\" + context + \":\" + name,\n\t\t\"codeBuilder/\" + context + \"/\" + name,\n\t\t\"dependencies://code-builder/\"\n\t);\n\n\treturn functionExports[name];\n}\n\nfunction register(builder, variable) {\n\tvariable.id = builder.identities.length;\n\tvariable.references = 0;\n\tbuilder.identities.push(variable);\n\treturn variable;\n}\n\nfunction lookup(builder, type, operation, variables) {\n\tfunction compare(x) {\n\t\tif (type != x.type || operation != x.operation || variables.length != x.variables.length)\n\t\t\treturn false;\n\t\tfor (let i = 0; i < variables.length; i++)\n\t\t\tif (variables[i].id !== x.variables[i].id)\n\t\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\tfor (var i = 0; i < builder.identities.length; i++)\n\t\tif (compare(builder.identities[i]))\n\t\t\treturn builder.identities[i];\n\n\treturn null;\n}\n\nfunction nameit(builder, variable) {\n\tvar istaken = (name) => builder.taken.indexOf(name) != -1;\n\tif (variable.type == \"field\" && variable.parent.type == \"vector\") {\n\t\tif (!variable.parent.isMatrix) {\n\t\t\t// try to name the variables ax, ay, az, etc...\n\t\t\tif (variable.index >= 0 && variable.index <= 4) {\n\t\t\t\tlet name = variable.parent.name + [\"x\", \"y\", \"z\", \"w\"][variable.index];\n\t\t\t\tif (!istaken(name))\n\t\t\t\t\treturn name;\n\t\t\t}\n\t\t\t// try to name the variables a0, a1, a2, etc...\n\t\t\tlet name = variable.parent.name + variable.index;\n\t\t\tif (!istaken(name))\n\t\t\t\treturn name;\n\t\t} else {\n\t\t\t// try to name the variables m{row}{column}, eg m01, m02, m10, etc...\n\t\t\tlet dimensions = Math.sqrt(variable.parent.length),\n\t\t\t\trow = Math.floor(variable.index / dimensions),\n\t\t\t\tcolumn = variable.index - row * dimensions,\n\t\t\t\tname = variable.parent.name + row + column;\n\t\t\tif (!istaken(name))\n\t\t\t\treturn name;\n\t\t}\n\t}\n\tif (builder.temporariesPool.length > 0) {\n\t\tlet name = builder.temporariesPool[0];\n\t\tbuilder.temporariesPool = builder.temporariesPool.slice(1);\n\t\treturn name;\n\t} else {\n\t\treturn \"temp\" + builder.tempCounter++;\n\t}\n}\n\nfunction reference(builder, variables) {\n\tfor (let variable of variables) {\n\t\tif (!variable.canAlias) continue;\n\n\t\tvariable.references++;\n\t\tif (variable.references == 2) {\n\t\t\tlet name = nameit(builder, variable);\n\t\t\tlet position = builder.assignments.length;\n\t\t\tlet expression;\n\t\t\tif (variable.assignment) {\n\t\t\t\tposition = builder.assignments.indexOf(variable.assignment.before);\n\t\t\t\texpression = variable.assignment.expression;\n\t\t\t} else {\n\t\t\t\tif (!ALLOW_ALIASING_OF_EXPRESSIONS)\n\t\t\t\t\tcontinue;\n\n\t\t\t\texpression = variable.toString(false);\n\t\t\t}\n\t\t\tvar assignment = {\n\t\t\t\t\"name\": name,\n\t\t\t\t\"expression\": expression,\n\t\t\t\t\"declare\": true\n\t\t\t};\n\t\t\tbuilder.assignments.splice(position, 0, assignment);\n\n\t\t\tbuilder.taken.push(name);\n\t\t\tvariable.name = name;\n\t\t\tvariable.canAlias = false;\n\t\t}\n\t}\n}\n\nlet MAX_ELEMENTS_SIZE = 16;\nfunction accessors(prototype) {\n\tfunction *foreach() {\n\t\tfor (let i = 0; i < this.length; i++)\n\t\t\tyield this.get(i);\n\t}\n\tfunction toString(bracketsMode) {\n\t\tif (this.name) return this.name;\n\t\tif (this.needsBrackets && bracketsMode !== false)\n\t\t\treturn `(${this.source()})`;\n\t\treturn this.source();\n\t}\n\tObject.defineProperty(prototype, Symbol.iterator, {value: foreach});\n\tObject.defineProperty(prototype, \"map\", {value: Array.prototype.map});\n\tObject.defineProperty(prototype, \"toString\", {value: toString});\n\tfor (let i = 0; i < MAX_ELEMENTS_SIZE; i++)\n\t\tObject.defineProperty(prototype, i, {get: function() {return this.get(i);}});\n}\n\nfunction ScalarVariable(builder, name) {\n\tregister(builder, this);\n\tbuilder.taken.push(name);\n\tthis.name = name;\n}\nObject.defineProperties(ScalarVariable.prototype, {\n\t\"type\": {value: \"scalar\"},\n\t\"canAlias\": {value: false},\n\t\"length\": {value: 1},\n\t\"get\": {value: function() {return this;}},\n\t\"isVector\": {value: false},\n\t\"needsBrackets\": {value: false}\n});\n\nfunction VectorVariable(builder, lengthOrFields, name) {\n\tregister(builder, this);\n\tbuilder.taken.push(name);\n\tthis.name = name;\n\tif (lengthOrFields instanceof Array) {\n\t\tthis.length = lengthOrFields.length;\n\t\tthis.fields = lengthOrFields.slice();\n\t} else {\n\t\tthis.length = lengthOrFields;\n\t\tthis.fields = new Array(this.length);\n\t\tfor (var i = 0; i < this.length; i++)\n\t\t\tthis.fields[i] = new FieldVariable(builder, this, i);\n\t}\n}\nObject.defineProperties(VectorVariable.prototype, {\n\t\"type\": {value: \"vector\"},\n\t\"canAlias\": {value: false},\n\t\"get\": {value: function(i) {return this.fields[i];}},\n\t\"isVector\": {value: true},\n\t\"needsBrackets\": {value: false}\n});\n\nfunction FieldVariable(builder, parent, index) {\n\tregister(builder, this);\n\tthis.parent = parent;\n\tthis.index = index;\n\tthis.canAlias = ALLOW_ALIASING_OF_FIELDS;\n}\nObject.defineProperties(FieldVariable.prototype, {\n\t\"type\": {value: \"field\"},\n\t\"length\": {value: 1},\n\t\"get\": {value: function() {return this;}},\n\t\"source\": {value: function() {return this.parent.toString() + \"[\" + this.index + \"]\";}},\n\t\"isVector\": {value: false},\n\t\"needsBrackets\": {value: false},\n\t\"_name\": {get: function() {return this.toString();}}\n});\n\nfunction Apply(builder, operation, variables) {\n\tregister(builder, this);\n\tthis.operation = operation;\n\tthis.variables = variables;\n\tthis.canAlias = true;\n\tthis.needsBrackets = false;\n\n\treference(builder, variables);\n\n\tlet isNegative = (variable) => variable.toString()[0] == \"-\";\n\n\tif (operation[0] == \".\" && operation[1] == \".\") {\n\t\tif (variables.length > 1) throw \"Use map, not apply\";\n\t\tthis.transform = () => variables[0].toString() + operation.slice(1);\n\t}\n\telse if (operation == \"[[negate]]\") {\n\t\tif (variables.length > 1) throw \"Use map, not apply\";\n\t\tif (isNegative(variables[0]))\n\t\t\tthis.transform = () => variables[0].toString();\n\telse\n\t\tthis.transform = () => \"-\" + variables[0].toString();\n\t}\n\telse if (operation.length > 2 && operation[operation.length - 1] == \"/\") {\n\t\tif (variables.length > 1) throw \"Use map, not apply\";\n\t\tthis.transform = () => operation + \" \" + variables[0].toString();\n\t}\n\telse if (operation[0] == \".\")\n\t\tthis.transform = () => variables[0].toString() + operation + \"(\" + variables.slice(1).map(each => each.toString(false)).join(\", \") + \")\";\nelse if (operation == \"+\" || operation == \"-\") {\n\t\t/* Reorder the variables so that positive operations come first */\n\t\tlet vars = [];\n\t\tfor (let variable of variables) {\n\t\t\tlet negative = isNegative(variable);\n\t\t\tvars.push({\n\t\t\t\t\"isNegative\": ((variable !== variables[0] && operation == \"-\") ? !negative : negative),\n\t\t\t\t\"toString\": function(needsBrackets) {\n\t\t\t\t\tlet string = variable.toString(false);\n\t\t\t\t\tif (negative) string = string.slice(1);\n\t\t\t\t\tif (this.needsBrackets && bracketsMode !== false)\n\t\t\t\t\t\tstring = `(${string})`;\n\t\t\t\t\treturn string;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tfunction positivefirst(a, b) {\n\t\t\treturn a.isNegative\n\t\t\t\t? b.isNegative ? 0 : 1\n\t\t\t\t: b.isNegative ? -1 : 0;\n\t\t}\n\t\tvars.sort(positivefirst);\n\n\t\tlet negateAtEnd = vars.length > 1 && vars[0].isNegative;\n\t\tif (negateAtEnd)\n\t\t\tfor (let each of vars)\n\t\teach.isNegative = !each.isNegative;\n\n\t\t/*console.log(vars);\n\t\t console.log(\"negateAtEnd\", negateAtEnd);\n\t\t console.log(\"variables\", variables.map(e => e.toString(false)).join(\" \" + operation + \" \"));\n\t\t console.log(\"sort vars\", vars.map(e => (e.isNegative ? \"-\" : \"\") + e.toString(false)));*/\n\n\t\tthis.transform = function() {\n\t\t\tlet string = \"\",\n\t\t\t\tfirst = vars[0];\n\t\t\tfor (let variable of vars) {\n\t\t\t\tif (variable !== first) {\n\t\t\t\t\tstring += ` ${variable.isNegative ? \"-\" : \"+\"} `;\n\t\t\t\t}\n\t\t\t\tstring += variable.toString(false);\n\t\t\t}\n\t\t\tif (negateAtEnd)\n\t\t\t\tstring = `-(${string})`;\n\t\t\treturn string;\n\t\t};\n\t\tthis.needsBrackets = !negateAtEnd;\n\t}\n\telse if (operation == \"*\" || operation == \"/\" || operation == \"&&\" || operation == \"||\") {\n\t\tthis.transform = () => variables.map(each => each.toString()).join(` ${operation} `);\n\t\tthis.needsBrackets = true;\n\t}\n\telse if (operation == \"[]\") {\n\t\tthis.transform = () => \"[\" + variables.map(each => each.toString(false)).join(\", \") + \"]\";\n\t}\n\telse\n\t\tthis.transform = () => operation + \"(\" + variables.map(each => each.toString(false)).join(\", \") + \")\";\n}\nObject.defineProperties(Apply.prototype, {\n\t\"type\": {value: \"apply\"},\n\t\"length\": {value: 1},\n\t\"get\": {value: function() {return this;}},\n\t\"source\": {value: function() {return this.transform();}},\n\t\"isVector\": {value: false}\n});\n\nfunction Reduction(builder, operation, variables) {\n\tregister(builder, this);\n\tthis.operation = operation;\n\tthis.variables = variables;\n\tthis.fields = variables.map(each => new Apply(builder, operation, each));\n\tthis.length = variables.length;\n\tthis.canAlias = true;\n}\nObject.defineProperties(Reduction.prototype, {\n\t\"type\": {value: \"reduce\"},\n\t\"get\": {value: function(i) {return this.fields[i];}},\n\t\"source\": {value: function() {return \"[\" + this.fields.map(each => each.toString(false)).join(\", \") + \"]\";}},\n\t\"isVector\": {value: true},\n\t\"needsBrackets\": {value: false}\n});\n\nfunction Mapping(builder, operation, variables) {\n\tregister(builder, this);\n\tthis.operation = operation;\n\tthis.variables = variables;\n\tthis.canAlias = true;\n\tthis.length = 0;\n\tfor (let variable of variables)\n\tthis.length = Math.max(this.length, variable.length);\n\n\tthis.fields = new Array(this.length);\n\tfor (let i = 0; i < this.length; i++) {\n\t\tlet column = new Array(variables.length);\n\t\tfor (let j = 0; j < variables.length; j++)\n\t\t\tcolumn[j] = variables[j].length === 1\n\t\t\t\t? variables[j][0]\n\t\t\t\t: variables[j][i];\n\t\tthis.fields[i] = new Apply(builder, operation, column);\n\t}\n}\nObject.defineProperties(Mapping.prototype, {\n\t\"type\": {value: \"map\"},\n\t\"get\": {value: function(i) {return this.fields[i]}},\n\t\"source\": {value: function() {return \"[\" + this.fields.map(each => each.toString(false)).join(\", \") + \"]\";}},\n\t\"isVector\": {value: true},\n\t\"needsBrackets\": {value: false}\n});\n\nfunction Output(variable) {\n\tthis.toString = () => `return ${variable.toString(false)}`;\n}\nObject.defineProperties(Output.prototype, {\n\t\"type\": {value: \"output\"},\n\t\"canAlias\": {value: false},\n\t\"source\": {value: function() { throw \"Inapplicable\" }}\n});\n\naccessors(ScalarVariable.prototype);\naccessors(VectorVariable.prototype);\naccessors(FieldVariable.prototype);\naccessors(Apply.prototype);\naccessors(Reduction.prototype);\naccessors(Mapping.prototype);\n\nfunction scalar(name) {\n\treturn new ScalarVariable(this, name);\n}\n\nfunction vector(lengthOrFields, name) {\n\treturn new VectorVariable(this, lengthOrFields, name);\n}\n\nfunction matrix(dimensionsOrFields, name) {\n\tvar m = (dimensionsOrFields instanceof Array)\n\t\t? this.vector(dimensionsOrFields, name)\n\t\t: this.vector(dimensionsOrFields * dimensionsOrFields, name);\n\tm.isMatrix = true;\n\treturn m;\n}\n\n// apply: with an operation, apply things and return a same-sized mapping\n// apply(\"+\", a, b)\n// ->\ta + b\nfunction apply(operation) {\n\tvar variables = Array.prototype.slice.call(arguments, 1);\n\tif (!variables.length)\n\t\tthrow \"Nothing to apply\";\n\n\tvar existing = lookup(this, Apply.prototype.type, operation, variables);\n\tif (existing) {\n\t\treference(this, variables);\n\t\treturn existing;\n\t}\n\n\treturn new Apply(this, operation, variables);\n}\n\n// reduce: with an operation, reduce variables of 'n' dimensions down to 1 dimension\n// reduce(\"+\", a, b)\n// ->\t[a[0] + a[1] + a[2] + a[3],\n//\t\t b[0] + b[1] + b[2] + b[3]...]\nfunction reduce(operation) {\n\tvar variables = Array.prototype.slice.call(arguments, 1);\n\tif (!variables.length)\n\t\tthrow \"Nothing to reduce\";\n\n\treturn lookup(this, Reduction.prototype.type, operation, variables)\n\t\t|| new Reduction(this, operation, variables);\n}\n\n// map: with an operation, apply variables of 'n' dimensions and return same-sized mapping\n// map(\"+\", a, b)\n// -> \t[a[0] + b[0],\n//\t\t a[1] + b[1],\n//\t\t a[2] + b[2],\n//\t\t a[3] + b[3]...]\nfunction map(operation) {\n\tvar variables = Array.prototype.slice.call(arguments, 1);\n\tif (!variables.length)\n\t\tthrow \"Nothing to map\";\n\n\treturn lookup(this, Mapping.prototype.type, operation, variables)\n\t\t|| new Mapping(this, operation, variables);\n}\n\nfunction assign(output, input) {\n\tif (output.type != \"vector\")\n\t\tthrow \"Cannot assign to anything but a vector\";\n\n\tfor (let i = 0; i < output.length; i++) {\n\t\tlet out_ = output[i], in_ = input[i];\n\t\tif (out_ !== in_) {\n\t\t\t// whatever it is we're accessing, make sure we note that\n\t\t\treference(this, [in_]);\n\n\t\t\tlet name = out_.toString(),\n\t\t\t\tassignment = {\n\t\t\t\t\t\"name\": name,\n\t\t\t\t\t\"expression\": in_.toString(false),\n\t\t\t\t\t\"declare\": false};\n\n\t\t\t// at least on reference so the next access actualises the assignment\n\t\t\tif (out_.canAlias) {\n\t\t\t\tout_.references = 1;\n\t\t\t\tout_.assignment = {\n\t\t\t\t\t\"before\": assignment,\n\t\t\t\t\t\"expression\": name\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.assignments.push(assignment);\n\t\t}\n\t}\n\treturn output;\n}\n\nfunction output(variable) {\n\treturn new Output(variable);\n}\n\nfunction phi(test, success, failure, name) {\n\tif (!name) name = \"phi\" + (this.phiCounter ? this.phiCounter + 1 : \"\");\n\tif (this.taken.indexOf(name) != -1) {\n\t\tfor (var i = 0; i < 9; i++)\n\t\t\tif (this.taken.indexOf(name) == -1) {\n\t\t\t\tname = name + i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tname = \"phi\" + (this.phiCounter ? this.phiCounter + 1 : \"\");\n\t}\n\n\treference(this, [test[0], test[2]]);\n\tif (success.isVector !== failure.isVector)\n\t\tthrow \"Base types must be the same\";\n\n\tthis.taken.push(name);\n\tthis.phiCounter++;\n\tthis.assignments.push({\n\t\t\"name\": name,\n\t\t\"expression\": `${test[0].toString()} ${test[1]} ${test[2].toString()} ? ${success.toString(false)} : ${failure.toString(false)}`,\n\t\"declare\": true\n});\n\nreturn success.isVector\n\t? this.vector(Math.max(success.length, failure.length), name)\n\t: this.scalar(name);\n}\n\nfunction write(source, statements) {\n\tvar isDeclaring = false,\n\t\tlast = this.assignments[this.assignments.length - 1];\n\n\tfor (var i = 0; i < this.assignments.length; i++) {\n\t\tlet assignment = this.assignments[i],\n\t\t\tdeclare = assignment.declare,\n\t\t\tisLast = assignment === last,\n\t\t\tisDeclarationStart = !isDeclaring && declare,\n\t\t\tisDeclarationStop = declare && (isLast || !this.assignments[i+1].declare),\n\t\t\tprefix = (declare && isDeclarationStart) ? \"let \" : \"\",\n\t\t\tsuffix = (!declare || isDeclarationStop) ? \";\" : \",\";\n\n\t\tsource.writeln(`${prefix}${assignment.name} = ${assignment.expression}${suffix}`);\n\t\tif (isDeclarationStart) {\n\t\t\tisDeclaring = true;\n\t\t\tisDeclarationStop || source.tab();\n\t\t}\n\t\tif (isDeclarationStop) {\n\t\t\tisDeclaring = false;\n\t\t\tisDeclarationStart || source.untab();\n\t\t}\n\t}\n\tisDeclaring && source.untab();\n\n\tfor (let statement of statements)\n\tsource.writeln(statement.toString());\n}\n","import VectorFactory from './VectorFactory';\nimport SourceWriter from '../code-builder/SourceWriter';\nimport CodeBuilder from '../code-builder/CodeBuilder';\n\nvar aliases = [\n\t\t\"x\", \"y\", \"z\", \"w\",\n\t\t\"q\", \"r\", \"s\", \"t\",\n\t\t\"u\", \"v\",\n\t\t\"i\", \"j\", \"k\", \"l\",\n\t\t\"m\", \"n\", \"o\", \"p\"];\n\nexport function create(dimensions, destination) {\n\tvar createArray = new Array(dimensions);\n\tfor (var i = 0; i < dimensions; i++) createArray[i] = 0.0;\n\tvar createSource = `\treturn [${createArray.join(\", \")}];`;\n\tvar createFunction = CodeBuilder.compile(\"create\", [], createSource, \"Vector\" + dimensions);\n\n\tvar cloneSource = `\treturn out.slice();`;\n\tvar cloneFunction = CodeBuilder.compile(\"clone\", [\"out\"], cloneSource, \"Vector\" + dimensions);\n\n\tvar decomposed = aliases.slice(0, dimensions);\n\tvar fromSource = `\treturn [${decomposed.join(\", \")}];`;\n\tvar fromFunction = CodeBuilder.compile(\"fromSource\", decomposed, fromSource, \"Vector\" + dimensions);\n\tvar averageFunction = function (out, iterable) {\n\t\tdestination.set(out, 0, 0);\n\t\tlet n = 0;\n\t\tfor (let vector of iterable) {\n\t\t\tdestination.add(out, out, vector);\n\t\t\tn++;\n\t\t}\n\t\treturn destination.scale(out, out, 1 / n);\n\t};\n\n\tvar properties = {\n\t\t\"create\": \t\t{value: createFunction},\n\t\t\"clone\": \t\t{value: cloneFunction},\n\t\t\"fromValues\": \t{value: fromFunction},\n\t\t\"average\":      {value: averageFunction}\n\t};\n\n\tObject.defineProperties(destination, properties);\n\t//Object.defineProperties(fromFunction, properties);\n\n\tvar operations = {\n\t\t\"copy\":\n\t\t\t{\"function\": (cb, a) => a,\n\t\t\t \"arguments\": [\"out\", \"a\"],\n\t\t\t \"types\": [\"vector\", \"vector\"]},\n\t\t\"set\":\n\t\t\t{\"function\": VectorFactory.set(aliases.slice(0, dimensions)),\n\t\t\t \"arguments\": [\"out\"].concat(aliases.slice(0, dimensions)),\n\t\t\t \"types\": aliases.slice(0, dimensions + 1).map(each => \"vector\")},\n\n\t\t\"add\":\n\t\t\t{\"function\": VectorFactory.operation(\"+\"),\n\t\t\t \"arguments\": [\"out\", \"a\", \"b\"],\n\t\t\t \"types\": [\"vector\", \"vector\", \"vector\"]},\n\t\t\"sub\":\n\t\t \t{\"function\": VectorFactory.operation(\"-\"),\n\t\t \t \"arguments\": [\"out\", \"a\", \"b\"],\n\t\t \t \"types\": [\"vector\", \"vector\", \"vector\"]},\n\t\t\"mul\":\n\t\t \t{\"function\": VectorFactory.operation(\"*\"),\n\t\t \t \"arguments\": [\"out\", \"a\", \"b\"],\n\t\t \t \"types\": [\"vector\", \"vector\", \"vector\"]},\n\t\t\"div\":\n\t\t \t{\"function\": VectorFactory.operation(\"/\"),\n\t\t \t \"arguments\": [\"out\", \"a\", \"b\"],\n\t\t \t \"types\": [\"vector\", \"vector\", \"vector\"]},\n\t\t\"min\":\n\t\t \t{\"function\": VectorFactory.min,\n\t\t \t \"arguments\": [\"out\", \"a\", \"b\"],\n\t\t \t \"types\": [\"vector\", \"vector\", \"vector\"]},\n\t\t\"max\":\n\t\t \t{\"function\": VectorFactory.max,\n\t\t \t \"arguments\": [\"out\", \"a\", \"b\"],\n\t\t \t \"types\": [\"vector\", \"vector\", \"vector\"]},\n\n\t\t\"scale\":\n\t\t \t{\"function\": VectorFactory.operation(\"*\"),\n\t\t \t \"arguments\": [\"out\", \"a\", \"b\"],\n\t\t \t \"types\": [\"vector\", \"vector\", \"scalar\"]},\n\t\t\"scaleAndAdd\":\n\t\t \t{\"function\": VectorFactory.scaleAndAdd,\n\t\t \t \"arguments\": [\"out\", \"a\", \"b\", \"c\"],\n\t\t \t \"types\": [\"vector\", \"vector\", \"vector\", \"scalar\"]},\n\t\t\"lerp\":\n\t\t \t{\"function\": VectorFactory.lerp,\n\t\t \t \"arguments\": [\"out\", \"a\", \"b\", \"t\"],\n\t\t \t \"types\": [\"vector\", \"vector\", \"vector\", \"scalar\"]},\n\n\t\t\"negate\":\n\t\t \t{\"function\": VectorFactory.negate,\n\t\t \t \"arguments\": [\"out\", \"a\"],\n\t\t \t \"types\": [\"vector\", \"vector\"]},\n\t\t\"inverse\":\n\t\t \t{\"function\": VectorFactory.inverse,\n\t\t \t \"arguments\": [\"out\", \"a\"],\n\t\t \t \"types\": [\"vector\", \"vector\"]},\n\t\t\"normalize\":\n\t\t \t{\"function\": VectorFactory.normalize,\n\t\t \t \"arguments\": [\"out\", \"a\"],\n\t\t \t \"types\": [\"vector\", \"vector\"]},\n\n\t\t\"dot\":\n\t\t \t{\"function\": VectorFactory.dot,\n\t\t \t \"arguments\": [\"a\", \"b\"],\n\t\t \t \"types\": [\"vector\", \"vector\"]},\n\t\t\"wellFormed\":\n\t\t\t{\"function\": VectorFactory.wellFormed,\n\t\t\t\"arguments\": [\"a\"],\n\t\t\t\"types\": [\"vector\"]},\n\t\t\"squaredLength\":\n\t\t \t{\"function\": VectorFactory.squaredLength,\n\t\t \t \"arguments\": [\"a\"],\n\t\t \t \"types\": [\"vector\"]},\n\t\t\"len\":\n\t\t \t{\"function\": VectorFactory.length,\n\t\t \t \"arguments\": [\"a\"],\n\t\t \t \"types\": [\"vector\"]},\n\t\t\"squaredDistance\":\n\t\t \t{\"function\": VectorFactory.squaredDistance,\n\t\t \t \"arguments\": [\"a\", \"b\"],\n\t\t \t \"types\": [\"vector\", \"vector\"]},\n\t\t\"dist\":\n\t\t \t{\"function\": VectorFactory.distance,\n\t\t \t \"arguments\": [\"a\", \"b\"],\n\t\t \t \"types\": [\"vector\", \"vector\"]},\n\t\t\"sum\":\n\t\t\t{\"function\": VectorFactory.sum,\n\t\t\t \"arguments\": [\"a\"],\n\t\t\t \"types\": [\"vector\"]}\n\t};\n\n\tfor (let operationName in operations) {\n\t\tlet cb = new CodeBuilder(),\n\t\t\tsource = new SourceWriter(),\n\t\t\toperation = operations[operationName],\n\t\t\targs = [];\n\n\t\tcb.temporariesPool = aliases.slice();\n\n\t\tlet output = operation[\"arguments\"][0] == \"out\";\n\t\tfor (let i = (output ? 1 : 0); i < operation[\"arguments\"].length; i++) {\n\t\t\tlet name = operation[\"arguments\"][i],\n\t\t\t\ttype = operation[\"types\"][i];\n\t\t\tswitch(type) {\n\t\t\t\tcase \"scalar\":\n\t\t\t\t\targs.push(cb.scalar(name));\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"vector\":\n\t\t\t\t\targs.push(cb.vector(dimensions, name));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow \"Unknown type for function argument\";\n\t\t\t}\n\t\t}\n\n\t\tlet body = operation[\"function\"].apply(null, [cb].concat(args));\n\t\tif (output) body = cb.assign(cb.vector(dimensions, \"out\"), body);\n\t\tbody = cb.output(body);\n\n\t\tsource.tab();\n\t\t\tcb.write(source, [body]);\n\t\tsource.untab();\n\n\t\tlet compiled = CodeBuilder.compile(operationName, operation[\"arguments\"], source.string, \"Vector\" + dimensions);\n\t\t//fromFunction[operationName] || Object.defineProperty(fromFunction, operationName, {value: compiled});\n\t\tdestination[operationName] || Object.defineProperty(destination, operationName, {value: compiled});\n\t}\n}\n","import { clamp } from '../missing-stuff';\nimport { create } from './Vector';\n\nvar Vector2 = function (x, y) {\n\treturn Vector2.fromValues(x, y);\n};\ncreate(2, Vector2);\n\nlet properties = {\n\t\"crossz\": \t                    {value: crossz},\n\t\"cross\": \t                    {value: cross},\n\t\"perpendicular\":                {value: perpendicular},\n\t\"scalePerpendicularAndAdd\":     {value: scalePerpendicularAndAdd},\n\t\"angleBetween\": \t\t\t\t{value: angleBetween},\n\t\"angleBetweenWithDirections\": \t{value: angleBetweenWithDirections},\n\t\"rotate\":                \t\t{value: rotate}\n}\n\nObject.defineProperties(Vector2, properties);\n// module.exports = Vector2;\nexport default Vector2\n\nfunction crossz(a, b) {\n\treturn a[0] * b[1] - b[0] * a[1];\n}\n\nfunction cross(output, a, b) {\n\toutput[0] = 0;\n\toutput[1] = 1;\n\toutput[2] = crossz(a, b);\n\treturn output;\n}\n\nfunction perpendicular(output, a) {\n\toutput[0] = a[1];\n\toutput[1] = -a[0];\n\treturn output;\n}\n\nfunction scalePerpendicularAndAdd(output, a, b, scale) {\n\toutput[0] = a[0] + b[1] * scale;\n\toutput[1] = a[1] - b[0] * scale;\n\treturn output;\n}\n\nfunction angleBetween(a, b) {\n\tvar theta = Vector2.dot(a, b) / (Vector2.len(a) * Vector2.len(b));\n\treturn Math.acos(clamp( theta,-1, 1) );\n}\n\nfunction angleBetweenWithDirections(a, aDirection, b) {\n\tvar simpleAngle = angleBetween(a, b);\n\tvar linearDirection = Vector2.sub(Vector2.fromValues(0, 0), b, a);\n\n\tif (Vector2.dot(aDirection, linearDirection) >= 0) {\n\t\treturn simpleAngle;\n\t} else {\n\t\treturn 2 * Math.PI - simpleAngle;\n\t}\n}\n\nfunction rotate(out, v, angle) {\n//\tslow version:\n//\treturn Matrix2x2.map(out, Matrix2x2.rotation(angle), v);\n\n\tvar x = v[0], y = v[1],\n\t\tc = Math.cos(angle),\n\t\ts = Math.sin(angle);\n\n\tout[0] = c * x - s * y;\n\tout[1] = s * x + c * y;\n\treturn out;\n}","import { create } from './Vector';\nvar Vector3 = function (x, y, z) {\n\treturn Vector3.fromValues(x, y, z);\n};\n\ncreate(3, Vector3);\nObject.defineProperties(Vector3, {\n\t\"cross\": \t{value: cross}\n});\nexport default Vector3\n\nfunction cross(output, a, b) {\n\tvar ax = a[0], ay = a[1], az = a[2],\n\t\tbx = b[0], by = b[1], bz = a[2];\n\n\toutput[0] = ay * bz - az * by;\n\toutput[1] = az * bx - ax * bz;\n\toutput[2] = ax * by - ay * bx;\n\treturn output;\n}\n","import vec2 from '../nd-linalg/Vector2';\r\n\r\nexport {theta, angleFrom};\r\n\r\nfunction theta(v) {\r\n\tvar angle = Math.atan2(v[1], v[0]);\r\n\treturn (angle < 0 ? angle + (2 * Math.PI) : angle) / (2 * Math.PI);\r\n}\r\n\r\nfunction angleFrom(p, center) {\r\n\treturn theta(vec2.sub(vec2(0, 0), p, center));\r\n}","import { assert } from '../missing-stuff';\r\nimport {theta as AngleTheta} from '../helpers/Angles';\r\nimport vec2 from '../nd-linalg/Vector2';\r\nimport {clamp, between, roughlyEqual, roughlyEqualVec2, ROUGHLY_EPSILON} from '../missing-stuff';\r\n\r\nexport default intersect;\r\n\r\nfunction Intersection(x, y, u, v) {\r\n\tthis.p = vec2.fromValues(x, y);\r\n\tthis.u = u;\r\n\tthis.v = v;\r\n}\r\n\r\nObject.defineProperties(Intersection.prototype,\t{\r\n\t\"isDegenerate\": \t{get: function() { return this.uIsDegenerate || this.vIsDegenerate; }},\r\n\t\"uIsDegenerate\": \t{get: function() { return roughlyEqual(this.u, 0) || roughlyEqual(this.u, 1); }},\r\n\t\"vIsDegenerate\": \t{get: function() { return roughlyEqual(this.v, 0) || roughlyEqual(this.v, 1); }},\r\n\r\n\t\"boundingBox\": \t\t{get: boundingBox},\r\n\t\"draw\": \t\t\t{value: draw}\r\n});\r\n\r\nfunction boundingBox() {\r\n\treturn Rectangle.corner(this.p, this.p);\r\n}\r\n\r\nfunction draw(context) {\r\n\tcontext.dot(this.p);\r\n}\r\n\r\nfunction tidydown(number) {\r\n\t// if the number is < 0 but > -EPSILON then make it 0\r\n\tif (number < 0 && number > -ROUGHLY_EPSILON)\r\n\t\treturn 0;\r\n\treturn number;\r\n}\r\n\r\nfunction tidyup(number) {\r\n\t// if the number is > 1 but < 1 + EPSILON then make it 1\r\n\tif (number > 1 && number < (1 + ROUGHLY_EPSILON))\r\n\t\treturn 1;\r\n\treturn number;\r\n}\r\n\r\nconst THICKNESS = 0.03;\r\nexport {THICKNESS};\r\n\r\nfunction pointToLineDistance(point, start, direction) {\r\n\tlet perpendicularDirection = vec2.perpendicular(vec2(0, 0), direction);\r\n\treturn Math.abs(vec2.dot(vec2.sub(vec2(0, 0), point, start), perpendicularDirection));\r\n}\r\n\r\n// http://stackoverflow.com/questions/2931573/determining-if-two-rays-intersect\r\nfunction rayRayIntersections(a, b) {\r\n\tvar det = b.direction[0] * a.direction[1] - b.direction[1] * a.direction[0];\r\n\r\n\t// Parallel, overlap or no intersection\r\n\tif (roughlyEqual(det, 0)) {\r\n\t\t// edge case: same start position\r\n\t\tif (roughlyEqualVec2(a.start, b.start, THICKNESS))\r\n\t\t\treturn [new Intersection(a.start[0], a.start[1], 0, 0)];\r\n\r\n\t\t// not facing the same direction\r\n\t\tif (!roughlyEqualVec2(a.direction, b.direction)) return [];\r\n\r\n\t\t// too far apart\r\n\t\tif (pointToLineDistance(a.start, b.start, b.direction) > THICKNESS) return [];\r\n\r\n\t\t// a contains b or b contains a depending on the\r\n\t\t// direction from a.start to b.start\r\n\t\tvar bToA = vec2(0, 0);\r\n\t\tvec2.sub(bToA, b.start, a.start);\r\n\t\tvec2.normalize(bToA, bToA);\r\n\t\tif (roughlyEqualVec2(a.direction, bToA))\r\n\t\t\treturn [new Intersection(b.start[0], b.start[1], 0, 0)];\r\n\t\telse\r\n\t\t\treturn [new Intersection(a.start[0], a.start[1], 0, 0)];\r\n\t}\r\n\r\n\tvar dx = b.start[0] - a.start[0];\r\n\tvar dy = b.start[1] - a.start[1];\r\n\tvar u = (dy * b.direction[0] - dx * b.direction[1]) / det;\r\n\tvar v = (dy * a.direction[0] - dx * a.direction[1]) / det;\r\n\r\n\t// No intersection\r\n\tif (u < -THICKNESS || v < -THICKNESS)\r\n\t\treturn [];\r\n\r\n\tif (u < 0 && u > -THICKNESS) u = 0;\r\n\tif (v < 0 && v > -THICKNESS) v = 0;\r\n\r\n\treturn [new Intersection(a.start[0] + u * a.direction[0], a.start[1] + u * a.direction[1], u, v)];\r\n}\r\n\r\nfunction lineLineIntersections(a, b) {\r\n\tvar det = b.direction[0] * a.direction[1] - b.direction[1] * a.direction[0];\r\n\r\n\t// Parallel, overlap or no intersection\r\n\tif (roughlyEqual(det, 0)) {\r\n\t\t// edge case: same start position\r\n\t\tif (roughlyEqualVec2(a.middle, b.middle, THICKNESS))\r\n\t\t\treturn [new Intersection(a.middle[0], a.middle[1], 0, 0)];\r\n\r\n\t\t// too far apart\r\n\t\tif (pointToLineDistance(a.middle, b.middle, b.direction) > THICKNESS) return [];\r\n\r\n\t\t// a contains b or b contains a depending on the\r\n\t\t// direction from a.middle to b.middle\r\n\t\tvar c = vec2(0, 0);\r\n\t\tvec2.sub(c, b.middle, a.middle);\r\n\t\tvec2.normalize(c, c);\r\n\t\tif (roughlyEqualVec2(a.direction, c))\r\n\t\t\treturn [new Intersection(b.middle[0], b.middle[1], 0, 0)];\r\n\t\telse\r\n\t\t\treturn [new Intersection(a.middle[0], a.middle[1], 0, 0)];\r\n\t}\r\n\r\n\tvar dx = b.middle[0] - a.middle[0];\r\n\tvar dy = b.middle[1] - a.middle[1];\r\n\tvar u = (dy * b.direction[0] - dx * b.direction[1]) / det;\r\n\tvar v = (dy * a.direction[0] - dx * a.direction[1]) / det;\r\n\r\n\treturn [new Intersection(a.middle[0] + u * a.direction[0], a.middle[1] + u * a.direction[1], u, v)];\r\n}\r\n\r\nfunction lineRayIntersections(a, b) { return swapuv(rayLineIntersections(b, a)); }\r\nfunction rayLineIntersections(a, b) {\r\n\tvar det = b.direction[0] * a.direction[1] - b.direction[1] * a.direction[0];\r\n\r\n\t// Parallel, overlap or no intersection\r\n\tif (roughlyEqual(det, 0)) {\r\n\t\t// edge case: same start position\r\n\t\tif (roughlyEqualVec2(a.start, b.middle, THICKNESS))\r\n\t\t\treturn [new Intersection(a.start[0], a.start[1], 0, 0)];\r\n\r\n\t\t// too far apart\r\n\t\tif (pointToLineDistance(a.start, b.middle, b.direction) > THICKNESS) return [];\r\n\r\n\t\t// a contains b or b contains a depending on the\r\n\t\t// direction from a.start to b.middle\r\n\t\tvar c = vec2(0, 0);\r\n\t\tvec2.sub(c, b.middle, a.start);\r\n\t\tvec2.normalize(c, c);\r\n\t\tif (roughlyEqualVec2(a.direction, c))\r\n\t\t\treturn [new Intersection(b.middle[0], b.middle[1], 0, 0)];\r\n\t\telse\r\n\t\t\treturn [new Intersection(a.start[0], a.start[1], 0, 0)];\r\n\t}\r\n\r\n\tvar dx = b.middle[0] - a.start[0];\r\n\tvar dy = b.middle[1] - a.start[1];\r\n\tvar u = (dy * b.direction[0] - dx * b.direction[1]) / det;\r\n\tvar v = (dy * a.direction[0] - dx * a.direction[1]) / det;\r\n\r\n\t// No intersection\r\n\tif (u < -THICKNESS)\r\n\t\treturn [];\r\n\r\n\tif (u < 0 && u > -THICKNESS) u = 0;\r\n\r\n\treturn [new Intersection(a.start[0] + u * a.direction[0], a.start[1] + u * a.direction[1], u, v)];\r\n}\r\n\r\nfunction lineSegmentRayIntersections(line, ray) { return swapuv(rayLineSegmentIntersections(ray, line)); }\r\nfunction rayLineSegmentIntersections(ray, line) {\r\n\tvar potentials = rayRayIntersections(ray, line),\r\n\t\tlineLength = line.length,\r\n\t\tintersects = [];\r\n\tfor (let potential of potentials) {\r\n\t\tif (potential.v <= lineLength + THICKNESS) {\r\n\t\t\tpotential.v /= lineLength;\r\n\t\t\tpotential.v = Math.min(potential.v, 1);\r\n\t\t\tintersects.push(potential);\r\n\t\t}\r\n\t}\r\n\treturn intersects;\r\n}\r\n\r\nfunction lineSegmentLineSegmentIntersections(a, b) {\r\n\tvar da = vec2.sub(vec2(0, 0), a.end, a.start);\r\n\tvar db = vec2.sub(vec2(0, 0), b.end, b.start);\r\n\tvar na = vec2.normalize(vec2(0, 0), da);\r\n\tvar nb = vec2.normalize(vec2(0, 0), db);\r\n\tvar orientation = vec2.crossz(na, nb);\r\n\r\n\t// Parallel - overlapping or no intersection\r\n\tif (roughlyEqual(orientation, 0)) {\r\n\t\t// too far apart\r\n\t\tif (pointToLineDistance(a.start, b.start, b.direction) > THICKNESS) return [];\r\n\r\n\t\t// edge case: both lines have zero length\r\n\t\tif (roughlyEqual(a.length, 0) && roughlyEqual(b.length, 0))\r\n\t\t\treturn [];\r\n\r\n\t\t// sort the positions by either the x-coordinate, or y-coordinate if they\r\n\t\t// share the same x-coordinate. If they share the same x and y coordinates\r\n\t\t// then the shared point test later will pick it up.\r\n\t\t// this will leave the sorted array as:\r\n\t\t//     [outside, inside, inside, outside]\r\n\t\t//     [n/a, shared, shared, n/a]\r\n\t\t//     [n/a, shared, inside, outside]\r\n\t\t//     [outside, inside, shared, n/a]\r\n\t\t// or for the case where there is no intersection\r\n\t\t//     [outside, outside, outside, outside]\r\n\t\tvar sorted = [\r\n\t\t\t{id: 0, position: a.start},\r\n\t\t\t{id: 1, position: a.end},\r\n\t\t\t{id: 2, position: b.start},\r\n\t\t\t{id: 3, position: b.end}\r\n\t\t];\r\n\t\tif (roughlyEqual(a.start[0], a.end[0], THICKNESS) && roughlyEqual(b.start[0], b.end[0], THICKNESS)) {\r\n\t\t\tsorted.sort(function(q, r) { return q.position[1] > r.position[1]; });\r\n\t\t} else {\r\n\t\t\tsorted.sort(function(q, r) { return q.position[0] > r.position[0]; });\r\n\t\t}\r\n\r\n\t\t// Shared point in the center\r\n\t\tif (roughlyEqualVec2(sorted[1].position, sorted[2].position, THICKNESS)) {\r\n\t\t\tvar position = sorted[1].position;\r\n\t\t\treturn [new Intersection(\r\n\t\t\t\tposition[0],\r\n\t\t\t\tposition[1],\r\n\t\t\t\ta.getAlphaValueAtPosition(position),\r\n\t\t\t\tb.getAlphaValueAtPosition(position))];\r\n\t\t}\r\n\r\n\t\t// Check if the first two points in the sorted set are (a.start, a.end), or (b.start, b.end)\r\n\t\t// indicating that the two lines do not overlap\r\n\t\tvar order = sorted[0].id + sorted[1].id;\r\n\t\tif (order == 1 || order == 5)\r\n\t\t\treturn [];\r\n\r\n\t\tvar position1 = sorted[1].position,\r\n\t\t\tposition2 = sorted[2].position,\r\n\t\t\tu1 = a.getAlphaValueAtPosition(position1),\r\n\t\t\tv1 = b.getAlphaValueAtPosition(position1),\r\n\t\t\tu2 = a.getAlphaValueAtPosition(position2),\r\n\t\t\tv2 = b.getAlphaValueAtPosition(position2);\r\n\r\n\t\treturn [\r\n\t\t\tnew Intersection(position1[0], position1[1], u1, v1),\r\n\t\t\tnew Intersection(position2[0], position2[1], u2, v2)\r\n\t\t];\r\n\t}\r\n\r\n\tvar determinant = vec2.crossz(db, da);\r\n\tvar u = ((db[0] * (b.start[1] - a.start[1])) - (db[1] * (b.start[0] - a.start[0]))) / determinant;\r\n\tvar v = ((da[0] * (b.start[1] - a.start[1])) - (da[1] * (b.start[0] - a.start[0]))) / determinant;\r\n\t//u = tidydown(tidyup(u));\r\n\t//v = tidydown(tidyup(v));\r\n\r\n\t// No intersection\r\n\t// TODO: for flat angles this approximation is stupid\r\n\t// u might be much further away from 0 than -Thickness,\r\n\t// even when lines are just thickness apart\r\n\tconst uTolerance = THICKNESS / vec2.len(da);\r\n\tconst vTolerance = THICKNESS / vec2.len(db);\r\n\tif (!between(-uTolerance, u, 1 + uTolerance)) return [];\r\n\tif (!between(-vTolerance, v, 1 + vTolerance)) return [];\r\n\r\n\tu = clamp(0, u, 1);\r\n\tv = clamp(0, v, 1);\r\n\r\n\tvar p = vec2(0, 0);\r\n\tvec2.lerp(p, a.start, a.end, u);\r\n\treturn [new Intersection(p[0], p[1], u, v)];\r\n}\r\n\r\nfunction circleLineSegmentIntersections(circle, line) { return swapuv(lineSegmentCircleIntersections(line, circle)) }\r\nfunction lineSegmentCircleIntersections(line, circle) {\r\n\tvar dp = vec2(0, 0);\r\n\tvec2.sub(dp, line.end, line.start);\r\n\tvar a = vec2.squaredLength(dp);\r\n\tvar b = 2 * (dp[0] * (line.start[0] - circle.center[0]) + dp[1] * (line.start[1] - circle.center[1]));\r\n\tvar c = vec2.squaredLength(circle.center);\r\n\tc += vec2.squaredLength(line.start);\r\n\tc -= 2 * (circle.center[0] * line.start[0] + circle.center[1] * line.start[1]);\r\n\tvar cCenter = c - circle.radius * circle.radius;\r\n\tvar cInner = c - (circle.radius * circle.radius - THICKNESS * THICKNESS);\r\n\tvar cOuter = c - (circle.radius * circle.radius + THICKNESS * THICKNESS);\r\n\tvar bb4acCenter = b * b - 4 * a * cCenter;\r\n\tvar bb4acInner = b * b - 4 * a * cInner;\r\n\tvar bb4acOuter = b * b - 4 * a * cOuter;\r\n\r\n\t// No intersection\r\n\tif (Math.abs(a) <= ROUGHLY_EPSILON || (bb4acCenter < 0 && bb4acInner < 0 && bb4acOuter < 0))\r\n\t\treturn [];\r\n\r\n\tvar s1Center = (-b + Math.sqrt(bb4acCenter)) / (2 * a);\r\n\tvar s2Center = (-b - Math.sqrt(bb4acCenter)) / (2 * a);\r\n\tvar s1Inner = (-b + Math.sqrt(bb4acInner)) / (2 * a);\r\n\tvar s2Inner = (-b - Math.sqrt(bb4acInner)) / (2 * a);\r\n\tvar s1Outer = (-b + Math.sqrt(bb4acOuter)) / (2 * a);\r\n\tvar s2Outer = (-b - Math.sqrt(bb4acOuter)) / (2 * a);\r\n\r\n\tvar s1 = between(0, s1Center, 1) ? s1Center : between(0, s1Outer, 1) ? s1Outer : s1Inner;\r\n\tvar s2 = between(0, s2Center, 1) ? s2Center : between(0, s2Outer, 1) ? s2Outer : s2Inner;\r\n\r\n\tvar solution1exists = between(0, s1, 1);\r\n\tvar solution2exists = !roughlyEqual(s1, s2) && between(0, s2, 1);\r\n\tvar solution1, solution2;\r\n\tvar p = vec2(0, 0);\r\n\r\n\t// Solution 1\r\n\tif (solution1exists) {\r\n\t\tsolution1 = new Intersection(line.start[0] + s1 * dp[0], line.start[1] + s1 * dp[1], s1, null);\r\n\t\tvec2.sub(p, solution1.p, circle.center);\r\n\t\tsolution1.v = AngleTheta(p);\r\n\t\tif (!solution2exists)\r\n\t\t\treturn [solution1];\r\n\t} else {\r\n\t\tif (!solution2exists)\r\n\t\t\treturn [];\r\n\t}\r\n\r\n\t// Solution 2\r\n\tif (solution2exists) {\r\n\t\tsolution2 = new Intersection(line.start[0] + s2 * dp[0], line.start[1] + s2 * dp[1], s2, null);\r\n\t\tvec2.sub(p, solution2.p, circle.center);\r\n\t\tsolution2.v = AngleTheta(p);\r\n\t\tif (!solution1exists)\r\n\t\t\treturn [solution2];\r\n\t}\r\n\r\n\treturn [solution1, solution2];\r\n}\r\n\r\nfunction curveLineSegmentIntersections(curve, line) { return swapuv(lineSegmentCurveIntersections(line, curve)) }\r\nfunction lineSegmentCurveIntersections(line, curve) {\r\n\t//throw \"No!!\"\r\n\tvar potentials = lineSegmentCircleIntersections(line, curve);\r\n\tvar intersections = [];\r\n\tfor (var i = 0; i < potentials.length; i++) {\r\n\t\tvar intersection = potentials[i];\r\n\t\tif (curve.wedgeContainsPoint(intersection.p, THICKNESS)) {\r\n\t\t\tintersection.v = curve.getAlphaValueAtPosition(intersection.p);\r\n\t\t\tintersection.u = clamp(0, intersection.u, 1);\r\n\t\t\tintersection.v = clamp(0, intersection.v, 1);\r\n\t\t\tintersections.push(intersection);\r\n\t\t}\r\n\t}\r\n\treturn intersections;\r\n}\r\n\r\nfunction circleCircleIntersections(a, b) {\r\n\tvar c0 = a.center;\r\n\tvar c1 = b.center;\r\n\tvar r0 = a.radius;\r\n\tvar r1 = b.radius;\r\n\tvar d = vec2.dist(c0, c1);\r\n\r\n\t// No solution, circles are the same\r\n\tif (d == 0 && r0 == r1)\r\n\t\treturn [];\r\n\r\n\t// No solution, circles do not intersect\r\n\tif (d > (r0 + r1))\r\n\t\treturn [];\r\n\r\n\t// No solution, one circle inside the other\r\n\tif (d < Math.abs(r0 - r1))\r\n\t\treturn [];\r\n\r\n\t// Determine the distance from center c0 to centroid\r\n\tvar c = (r0 * r0 - r1 * r1 + d * d) / (2 * d);\r\n\r\n\t// Determine the distance from centroid to either intersection point\r\n\tvar h = Math.sqrt(r0 * r0 - c * c);\r\n\r\n\t// Determine position of centroid\r\n\tvar dx = c1[0] - c0[0];\r\n\tvar dy = c1[1] - c0[1];\r\n\tvar cx = c0[0] + (dx * c / d);\r\n\tvar cy = c0[1] + (dy * c / d);\r\n\r\n\t// Determine the offset vector from the centroid to the intersection points\r\n\tvar rx = -dy * h / d;\r\n\tvar ry = dx * h / d;\r\n\r\n\t\"Solution 1\"\r\n\tvar p = vec2(0, 0);\r\n\tvar solution1 = new Intersection(cx + rx, cy + ry, 0, 0);\r\n\tvec2.sub(p, solution1.p, c0);\r\n\tsolution1.u = AngleTheta(p);\r\n\tvec2.sub(p, solution1.p, c1);\r\n\tsolution1.v = AngleTheta(p);\r\n\r\n\tif (roughlyEqual(h, 0))\r\n\t\treturn [solution1];\r\n\r\n\t\"Solution 2\"\r\n\tvar solution2 = new Intersection(cx - rx, cy - ry, 0, 0);\r\n\tvec2.sub(p, solution2.p, c0);\r\n\tsolution2.u = AngleTheta(p);\r\n\tvec2.sub(p, solution2.p, c1);\r\n\tsolution2.v = AngleTheta(p);\r\n\treturn [solution1, solution2];\r\n}\r\n\r\nfunction curveCurveIntersections(a, b) {\r\n\tvar intersections = [];\r\n\r\n\tif (roughlyEqualVec2(a.center, b.center, THICKNESS)\r\n\t\t&& roughlyEqual(a.radius, b.radius, THICKNESS)) {\r\n\t\tif (a.wedgeContainsPoint(b.start, THICKNESS))\r\n\t\t\tintersections.push(\r\n\t\t\t\tnew Intersection(b.start[0], b.start[1], a.getAlphaValueAtPosition(b.start), 0));\r\n\r\n\t\tif (a.wedgeContainsPoint(b.end, THICKNESS))\r\n\t\t\tintersections.push(\r\n\t\t\t\tnew Intersection(b.end[0], b.end[1], a.getAlphaValueAtPosition(b.end), 1));\r\n\r\n\t\tif (intersections.length == 2)\r\n\t\t\treturn intersections;\r\n\r\n\t\tif (b.wedgeContainsPoint(a.start, THICKNESS))\r\n\t\t\tintersections.push(\r\n\t\t\t\tnew Intersection(a.start[0], a.start[1], 0, b.getAlphaValueAtPosition(a.start)));\r\n\r\n\t\tif (intersections.length == 2)\r\n\t\t\treturn intersections;\r\n\r\n\t\tif (b.wedgeContainsPoint(a.end, THICKNESS))\r\n\t\t\tintersections.push(\r\n\t\t\t\tnew Intersection(a.end[0], a.end[1], 1, b.getAlphaValueAtPosition(a.end)));\r\n\r\n\t\treturn intersections;\r\n\t}\r\n\r\n\tvar potentials = circleCircleIntersections(a, b);\r\n\tfor (var i = 0; i < potentials.length; i++) {\r\n\t\tvar intersection = potentials[i];\r\n\t\t//console.log(\"curve-curve potential\", intersection);\r\n\t\tif (a.wedgeContainsPoint(intersection.p, THICKNESS) &&\r\n\t\t\tb.wedgeContainsPoint(intersection.p, THICKNESS)) {\r\n\t\t\tintersection.u = a.getAlphaValueAtPosition(intersection.p);\r\n\t\t\tintersection.v = b.getAlphaValueAtPosition(intersection.p);\r\n\t\t\tintersections.push(intersection);\r\n\t\t}\r\n\t}\r\n\treturn intersections;\r\n}\r\n\r\nfunction swapuv(intersections) {\r\n\tfor (var i = 0; i < intersections.length; i++) {\r\n\t\tvar intersection = intersections[i],\r\n\t\t\tu = intersection.u,\r\n\t\t\tv = intersection.v;\r\n\t\tintersection.u = v;\r\n\t\tintersection.v = u;\r\n\t}\r\n\treturn intersections;\r\n}\r\n\r\nfunction notYetImplemented(a, b) {\r\n\tthrow \"Intersection combination not yet implemented\";\r\n}\r\n\r\n// RAY = 1 and 2\r\n// LINE_SEGMENT = 4 and 8\r\n// CIRCLE = 16 and 32\r\n// CURVE = 64 and 128\r\n//\r\n// RAY(1) + RAY(2) = 3\r\n// RAY(1) + LINE_SEGMENT(4) = 5\r\n// LINE_SEGMENT(4) + RAY(2) = 6\r\n// LINE_SEGMENT(4) + LINE_SEGMENT(8) = 12\r\n// LINE_SEGMENT(4) + CIRCLE(16) = 20\r\n// CIRCLE(16) + LINE_SEGMENT(8) = 24\r\n// CIRCLE(16) + CIRCLE(32) = 48\r\n// etc\r\nvar intersections = [];\r\nfunction intersectionTypeLookup(a, b) { return a + 2 * b }\r\nfunction intersectionTypeInstall(a, b, f) {\r\n\tvar type = intersectionTypeLookup(a, b);\r\n\tassert(intersections[type] == null);\r\n\tintersections[type] = f;\r\n}\r\n\r\nvar RAY = 1;\r\nvar LINE = 4;\r\nvar LINE_SEGMENT = 16;\r\nvar CIRCLE = 64;\r\nvar CURVE = 256;\r\nintersectionTypeInstall(RAY         , RAY         , rayRayIntersections);\r\nintersectionTypeInstall(RAY         , LINE        , rayLineIntersections);\r\nintersectionTypeInstall(RAY         , LINE_SEGMENT, rayLineSegmentIntersections);\r\nintersectionTypeInstall(LINE        , LINE        , lineLineIntersections);\r\nintersectionTypeInstall(LINE        , RAY         , lineRayIntersections);\r\nintersectionTypeInstall(LINE_SEGMENT, RAY         , lineSegmentRayIntersections);\r\nintersectionTypeInstall(LINE_SEGMENT, LINE_SEGMENT, lineSegmentLineSegmentIntersections);\r\nintersectionTypeInstall(LINE_SEGMENT, CIRCLE      , lineSegmentCircleIntersections);\r\nintersectionTypeInstall(LINE_SEGMENT, CURVE       , lineSegmentCurveIntersections);\r\nintersectionTypeInstall(CIRCLE      , LINE_SEGMENT, circleLineSegmentIntersections);\r\nintersectionTypeInstall(CIRCLE      , CIRCLE      , circleCircleIntersections);\r\nintersectionTypeInstall(CURVE       , LINE_SEGMENT, curveLineSegmentIntersections);\r\nintersectionTypeInstall(CURVE       , CURVE       , curveCurveIntersections);\r\n\r\nfunction intersect(a, b) {\r\n\t// I know what you're thinking. I've thought the same thing\r\n\t// quite a few times myself. You're here because of an exception\r\n\t// or perhaps you're just reading the code. If you're just\r\n\t// reading the code then you're thinking this is an odd kind of\r\n\t// comment to stumble upon. If you're here because of an\r\n\t// exception you're thinking gee I wish there was a catch here\r\n\t// to make sure 'a' and 'b' are actually geometric objects that\r\n\t// we can measure the intersection between. You must resist the\r\n\t// temptation to add such a test because intersect() is called\r\n\t// all over the place, constantly and in many tight loops. Your\r\n\t// real issue is somewhere else up in the stack. Go look there,\r\n\t// not here. Here you will find no answers, only pain and\r\n\t// suffering and darkness and all that other stuff the Jedi\r\n\t// want you to believe about the dark side that clearly isn't\r\n\t// true. The dark side just wants us to be ourselves, to feel\r\n\t// our emotions and learn to be responsible with it. It's that\r\n\t// Lucas fellow and his strange 'light side' and 'dark side'\r\n\t// biases that have fooled so much of the world in to believing\r\n\t// that the dark side only leads to gibbering power hungry\r\n\t// idiots with no self control and that somehow living a life\r\n\t// without love, with attachments, is the ultimate way to be\r\n\t// in touch with the force. I've digressed. The point is, you\r\n\t// don't want to look here, your issue is elsewhere.\r\n\tvar type = intersectionTypeLookup(a.type(), b.type());\r\n\treturn intersections[type](a, b);\r\n};\r\n\r\nintersect.RayTypeFunction = function() { return RAY; }\r\nintersect.RayTypeFunction.typeName = \"ray\";\r\nintersect.LineTypeFunction = function() { return LINE; }\r\nintersect.RayTypeFunction.typeName = \"line\";\r\nintersect.LineSegmentTypeFunction = function() { return LINE_SEGMENT; }\r\nintersect.LineSegmentTypeFunction.typeName = \"lineSegment\";\r\nintersect.CircleTypeFunction = function() { return CIRCLE; }\r\nintersect.CircleTypeFunction.typeName = \"circle\";\r\nintersect.CurveTypeFunction = function() { return CURVE; }\r\nintersect.CurveTypeFunction.typeName = \"curve\";\r\n","import vec2 from '../nd-linalg/Vector2';\r\n\r\nexport default Rectangle;\r\n\r\nexport {\r\n\tnewRectangleCorner as corner,\r\n\tnewRectangleExtent as extent,\r\n\tnewRectanglePoint as point,\r\n\tnewRectangleMinMax as minmax,\r\n\tnewRectangleZero as zero\r\n};\r\n\r\nfunction Rectangle(top, right, bottom, left) {\r\n\tthis.top = top;\r\n\tthis.bottom = bottom;\r\n\tthis.left = left;\r\n\tthis.right = right;\r\n}\r\n\r\nfunction newRectangleCorner(origin, corner) {\r\n\treturn new Rectangle(origin[1], corner[0], corner[1], origin[0]);\r\n}\r\n\r\nfunction newRectangleExtent(origin, extent) {\r\n\treturn new Rectangle(\r\n\t\torigin[1],\r\n\t\torigin[0] + extent[0],\r\n\t\torigin[1] + extent[1],\r\n\t\torigin[0]);\r\n}\r\n\r\nfunction newRectanglePoint(position) {\r\n\treturn newRectangleCorner(position, position);\r\n}\r\n\r\nfunction newRectangleMinMax() {\r\n\treturn new Rectangle(Infinity, -Infinity, -Infinity, Infinity);\r\n}\r\n\r\nfunction newRectangleZero() {\r\n\treturn new Rectangle(0, 0, 0, 0);\r\n}\r\n\r\nObject.defineProperties(Rectangle.prototype, {\r\n\t\"name\": \t\t\t{value: \"Rectangle\"},\r\n\t\"width\": \t\t\t{enumerable: true, get: getWidth, set: setWidth},\r\n\t\"height\": \t\t\t{enumerable: true, get: getHeight, set: setHeight},\r\n\t\"center\": \t\t\t{get: center},\r\n\t\"origin\": \t\t\t{get: getOrigin, set: setOrigin},\r\n\t\"extent\": \t\t\t{get: getExtent, set: setExtent},\r\n\t\"corner\": \t\t\t{get: getCorner, set: setCorner},\r\n\t\"boundingBox\": \t\t{get: boundingBox},\r\n\r\n\t\"containsPoint\": \t{value: containsPoint},\r\n\t\"scale\": \t\t\t{value: scale},\r\n\t\"translate\": \t\t{value: translate},\r\n\t\"expand\": \t\t\t{value: expand},\r\n\r\n\t\"draw\": \t\t\t{value: draw}\r\n});\r\n\r\nfunction getWidth() {\r\n\treturn this.right - this.left;\r\n}\r\n\r\nfunction setWidth(value) {\r\n\tthis.right = this.left + value;\r\n}\r\n\r\nfunction getHeight() {\r\n\treturn this.bottom - this.top;\r\n}\r\n\r\nfunction setHeight(value) {\r\n\tthis.bottom = this.top + value;\r\n}\r\n\r\nfunction center() {\r\n\tvar center = vec2(0, 0);\r\n\tvec2.lerp(center, this.origin, this.corner, 0.5);\r\n\treturn center;\r\n}\r\n\r\nfunction getOrigin() {\r\n\treturn vec2.fromValues(this.left, this.top);\r\n}\r\n\r\nfunction setOrigin(v) {\r\n\tthis.left = v[0];\r\n\tthis.top = v[1];\r\n}\r\n\r\nfunction getExtent() {\r\n\treturn vec2.fromValues(this.width, this.height);\r\n}\r\n\r\nfunction setExtent(v) {\r\n\tthis.width = v[0];\r\n\tthis.height = v[1];\r\n}\r\n\r\nfunction getCorner() {\r\n\treturn vec2.fromValues(this.right, this.bottom);\r\n}\r\n\r\nfunction setCorner(v) {\r\n\tthis.right = v[0];\r\n\tthis.bottom = v[1];\r\n}\r\n\r\nfunction boundingBox() {\r\n\treturn this;\r\n}\r\n\r\nfunction containsPoint(p) {\r\n\treturn this.left <= p[0] && p[0] < this.right && this.top <= p[1] && p[1] < this.bottom;\r\n}\r\n\r\nfunction scale(scalar) {\r\n\treturn new Rectangle(\r\n\t\tthis.top * scalar,\r\n\t\tthis.right * scalar,\r\n\t\tthis.bottom * scalar,\r\n\t\tthis.left * scalar);\r\n}\r\n\r\nfunction translate(offset) {\r\n\treturn new Rectangle(\r\n\t\tthis.top + offset[1],\r\n\t\tthis.right + offset[0],\r\n\t\tthis.bottom + offset[1],\r\n\t\tthis.left + offset[0]);\r\n}\r\n\r\nfunction expand(rectangle) {\r\n\treturn new Rectangle(\r\n\t\tMath.min(this.top, rectangle.top),\r\n\t\tMath.max(this.right, rectangle.right),\r\n\t\tMath.max(this.bottom, rectangle.bottom),\r\n\t\tMath.min(this.left, rectangle.left));\r\n}\r\n\r\nfunction draw(context) {\r\n\tcontext.stroke(this);\r\n}\r\n","import { roughlyEqual } from '../missing-stuff';\r\n\r\nexport default class Triangle {\r\n\tconstructor(a, b, c) {\r\n\t\tthis.a = a;\r\n\t\tthis.b = b;\r\n\t\tthis.c = c;\r\n\t}\r\n\r\n\tget isColinear() { return colinear(this.a, this.b, this.c); }\r\n\tget center() { return center(this.a, this.b, this.c); }\r\n}\r\n\r\nexport function colinear(a, b, c) {\r\n\tconst m = (c[0] - a[0]) * (b[1] - a[1]);\r\n\tconst n = ((b[0] - a[0]) * (c[1] - a[1]));\r\n\treturn roughlyEqual( n, m );\r\n}\r\n\r\nexport function center(a, b, c) {\r\n\treturn [(a[0] + b[0] + c[0]) / 3,\r\n\t\t\t(a[1] + b[1] + c[1]) / 3];\r\n}\r\n","import intersect from '../intersections/Intersections';\r\nimport vec2 from '../nd-linalg/Vector2';\r\nimport {corner as RectangleCorner} from './Rectangle';\r\nimport * as Triangle from './Triangle';\r\nimport { roughlyEqual, roughlyBetween } from '../missing-stuff';\r\n// import { colinear } from triangle;\r\n\r\nexport default LineSegment;\r\n\r\nfunction LineSegment(start, end) {\r\n\tthis.start = start;\r\n\tthis.end = end;\r\n\tthis.direction = vec2.sub(vec2(0, 0), this.end, this.start);\r\n\tthis.length = vec2.len(this.direction);\r\n\tvec2.normalize(this.direction, this.direction);\r\n}\r\n\r\nfunction createProjection(start, direction, length) {\r\n\tvar end = vec2.scale(vec2(0, 0), direction, length || 1);\r\n\tvec2.add(end, start, end);\r\n\treturn new LineSegment(start, end);\r\n}\r\n\r\nLineSegment.project = createProjection;\r\n\r\nObject.defineProperties(LineSegment.prototype, {\r\n\t\"name\": \t\t\t\t\t\t{value: \"LineSegment\"},\r\n\t\"type\": \t\t\t\t\t\t{value: intersect.LineSegmentTypeFunction},\r\n\t\"isRay\": \t\t\t\t\t\t{value: false},\r\n\t\"isLineSegment\": \t\t\t\t{value: true},\r\n\t\"isCurve\": \t\t\t\t\t\t{value: false},\r\n\t\"isCircle\": \t\t\t\t\t{value: false},\r\n\r\n\t\"midpoint\": \t\t\t\t\t{get: midpoint},\r\n\t\"boundingBox\": \t\t\t\t\t{get: boundingBox},\r\n\t\"endDirection\": \t\t\t\t{get: endDirection},\r\n\r\n\t\"subdivide\": \t\t\t\t\t{value: subdivide},\r\n\t\"reverse\": \t\t\t\t\t\t{value: reverse},\r\n\t\"scale\": \t\t\t\t\t\t{value: scale},\r\n\t\"translate\": \t\t\t\t\t{value: translate},\r\n\t\"offsetPerpendicular\": \t\t\t{value: offsetPerpendicular},\r\n\r\n\t\"offsetPerpendicularLength\":\t{value: offsetPerpendicularLength},\r\n\t\"mapPerpendicular\": \t\t\t{value: mapPerpendicular},\r\n\r\n\t\"containsPoint\": \t\t\t\t{value: containsPoint},\r\n\t\"roughlyContainsPoint\": \t\t{value: roughlyContainsPoint},\r\n\t\"getAlphaValueAtPosition\":\t\t{value: getAlphaValueAtPosition},\r\n\t\"offsetOf\": \t\t\t\t\t{value: offsetOf},\r\n\t\"closestPointTo\": \t\t\t\t{value: closestPointTo},\r\n\t\"positionOf\": \t\t\t\t\t{value: positionOf},\r\n\t\"directionOf\": \t\t\t\t\t{value: directionOf},\r\n\r\n\t\"vertices\": \t\t\t\t\t{value: vertices},\r\n\t\"uvs\": \t\t\t\t\t\t\t{value: uvs},\r\n\t\"draw\": \t\t\t\t\t\t{value: draw}\r\n});\r\n\r\nfunction midpoint() {\r\n\tvar midpoint = vec2(0, 0);\r\n\tvec2.lerp(midpoint, this.start, this.end, 0.5);\r\n\treturn midpoint;\r\n}\r\n\r\nvar min = Math.min,\r\n\tmax = Math.max;\r\nfunction boundingBox() {\r\n\tvar origin = vec2.clone(this.start);\r\n\tvar corner = vec2.clone(this.start);\r\n\torigin[0] = min(origin[0], this.end[0]);\r\n\torigin[1] = min(origin[1], this.end[1]);\r\n\tcorner[0] = max(corner[0], this.end[0]);\r\n\tcorner[1] = max(corner[1], this.end[1]);\r\n\treturn RectangleCorner(origin, corner);\r\n}\r\n\r\nfunction endDirection() {\r\n\treturn this.direction;\r\n}\r\n\r\nfunction subdivide(p) {\r\n\treturn [new LineSegment(this.start, p), new LineSegment(p, this.end)];\r\n}\r\n\r\nfunction reverse() {\r\n\treturn new LineSegment(this.end, this.start);\r\n}\r\n\r\nfunction scale(scalar) {\r\n\tvar start = vec2.clone(this.start),\r\n\t\tend = vec2.clone(this.end);\r\n\tvec2.scale(start, start, scalar);\r\n\tvec2.scale(end, end, scalar);\r\n\treturn new LineSegment(start, end);\r\n}\r\n\r\nfunction translate(offset) {\r\n\tvar start = vec2.clone(this.start),\r\n\t\tend = vec2.clone(this.end);\r\n\tvec2.add(start, start, offset);\r\n\tvec2.add(end, end, offset);\r\n\treturn new LineSegment(start, end);\r\n}\r\n\r\nfunction containsPoint(point) {\r\n\tlet perpendicularDirection = vec2.perpendicular(vec2(0, 0), direction);\r\n\tlet startToPoint = vec2.sub(vec2(0, 0), start, p);\r\n\tlet distance = Math.abs(vec2.dot(startToPoint, perpendicularDirection));\r\n\tlet u = vec2.dot(startToPoint, this.direction);\r\n\treturn distance < Intersections.THICKNESS && u > -THICKNESS && u < this.length + THICKNESS;\r\n\r\n}\r\n\r\nfunction roughlyContainsPoint(p) {\r\n\t// http://stackoverflow.com/questions/328107/how-can-you-determine-a-point-is-between-two-other-points-on-a-line-segment\r\n\tlet start = this.start, end = this.end;\r\n\treturn Triangle.colinear(start, p, end)\r\n\t\t&& ((roughlyEqual(start[0], p[0]) || roughlyEqual(end[0], p[0]))\r\n\t\t\t? roughlyBetween( start[1], p[1], end[1]) || roughlyBetween( end[1], p[1], start[1])\r\n\t\t\t: roughlyBetween( start[0], p[0], end[0]) || roughlyBetween( end[0], p[0], start[0]));\r\n}\r\n\r\n\r\nfunction getAlphaValueAtPosition(p) {\r\n\treturn vec2.dist(this.start, p) / this.length;\r\n}\r\n\r\nfunction directionOf(p) {\r\n\treturn this.direction;\r\n}\r\n\r\nfunction offsetOf(p) {\r\n\treturn vec2.dot(this.direction, vec2.sub(vec2(0, 0), p, this.start));\r\n}\r\n\r\nfunction closestPointTo(p) {\r\n\tvar offset = this.offsetOf(p);\r\n\r\n\tif (offset < 0)\r\n\t\treturn this.start;\r\n\tif (offset > this.length)\r\n\t\treturn this.end;\r\n\r\n\treturn vec2.scaleAndAdd(vec2(0, 0), this.start, this.direction, offset);\r\n}\r\n\r\nfunction positionOf(offset) {\r\n\treturn vec2.scaleAndAdd(vec2(0, 0), this.start, this.direction, offset);\r\n}\r\n\r\nfunction offsetPerpendicular(offsetToRight) {\r\n\treturn new LineSegment(\r\n\t\tvec2.scalePerpendicularAndAdd(vec2(0, 0), this.start, this.direction, offsetToRight),\r\n\t\tvec2.scalePerpendicularAndAdd(vec2(0, 0), this.end, this.direction, offsetToRight)\r\n\t);\r\n}\r\n\r\nfunction offsetPerpendicularLength(offsetToRight) {\r\n\treturn this.length;\r\n}\r\n\r\nfunction mapPerpendicular(offsetA, offsetToRightA, offsetToRightB) {\r\n\treturn offsetA;\r\n}\r\n\r\nfunction vertices(offsetToRight) {\r\n\toffsetToRight = offsetToRight || 0;\r\n\tvar start = offsetToRight\r\n\t\t? vec2.scalePerpendicularAndAdd(vec2(0, 0), this.start, this.direction, offsetToRight)\r\n\t\t: this.start;\r\n\tvar end = offsetToRight\r\n\t\t? vec2.scalePerpendicularAndAdd(vec2(0, 0), this.end, this.direction, offsetToRight)\r\n\t\t: this.end;\r\n\treturn [start, end];\r\n}\r\n\r\nfunction uvs(offsetToRight, multiplierAlongPath) {\r\n\tvar startUV = vec2.fromValues(0, offsetToRight);\r\n\tvar endUV = vec2.fromValues(this.length * multiplierAlongPath, offsetToRight);\r\n\treturn [startUV, endUV];\r\n}\r\n\r\nfunction draw(context) {\r\n\tcontext.stroke(this);\r\n}\r\n","import Intersections from '../intersections/Intersections';\r\nimport vec2 from '../nd-linalg/Vector2';\r\n\r\nexport default Ray;\r\n\r\nfunction Ray(start, direction) {\r\n\tthis.start = start;\r\n\tthis.direction = direction;\r\n}\r\n\r\nObject.defineProperties(Ray.prototype, {\r\n\t\"name\": \t\t{value: \"Ray\"},\r\n\t\"type\": \t\t{value: Intersections.RayTypeFunction},\r\n\t\"isRay\": \t\t{value: true},\r\n\t\"isLineSegment\": \t\t{value: false},\r\n\t\"isCurve\": \t\t{value: false},\r\n\t\"isCircle\": \t{value: false},\r\n\r\n\t\"length\": \t\t{value: Number.infinity},\r\n\t\"end\": \t\t\t{value: vec2.fromValues(Number.infinity, Number.infinity)},\r\n\t\"midpoint\": \t{value: Number.infinity},\r\n\r\n\t\"subdivide\": \t{value: subdivide},\r\n\t\"reverse\": \t\t{value: reverse},\r\n\t\"scale\": \t\t{value: scale},\r\n\t\"translate\": \t{value: translate},\r\n\r\n\t\"draw\": \t\t{value: draw},\r\n\t\"boundingBox\": \t{get: boundingBox}\r\n});\r\n\r\nfunction subdivide(p) {\r\n\treturn [new LineSegment(this.start, p), new Ray(p, this.direction)];\r\n}\r\n\r\nfunction reverse() {\r\n\treturn new Ray(this.start, vec2.negate(vec2(0, 0), this.direction));\r\n}\r\n\r\nfunction scale(scalar) {\r\n\tvar start = vec2.clone(this.start);\r\n\tvec2.scale(start, start, scalar);\r\n\treturn new Ray(start, this.direction);\r\n}\r\n\r\nfunction translate(offset) {\r\n\tvar start = vec2.clone(this.start);\r\n\tvec2.add(start, start, offset);\r\n\treturn new Ray(start, this.direction);\r\n}\r\n\r\nfunction boundingBox() {\r\n\treturn Rectangle.point(this.start);\r\n}\r\n\r\nfunction draw(context) {\r\n\tcontext.arrow(this.start, this.direction);\r\n}\r\n","import Intersections from '../intersections/Intersections';\r\nimport vec2 from '../nd-linalg/Vector2';\r\n\r\nexport default Line;\r\n\r\nfunction Line(rayOrMiddle, direction) {\r\n\tif (rayOrMiddle.type === Intersections.RayTypeFunction) {\r\n\t\tthis.middle = rayOrMiddle.start;\r\n\t\tthis.direction = rayOrMiddle.direction;\r\n\t\treturn this;\r\n\t}\r\n\tthis.middle = rayOrMiddle; // LOL!\r\n\tthis.direction = direction;\r\n}\r\n\r\nObject.defineProperties(Line.prototype, {\r\n\t\"name\": \t\t{value: \"Line\"},\r\n\t\"type\": \t\t{value: Intersections.LineTypeFunction},\r\n\t\"isRay\": \t\t{value: true},\r\n\t\"isLineSegment\":{value: false},\r\n\t\"isCurve\": \t\t{value: false},\r\n\t\"isCircle\": \t{value: false},\r\n\r\n\t\"length\": \t\t{value: Number.infinity},\r\n\t\"start\": \t\t{value: vec2.fromValues(Number.infinity, Number.infinity)},\r\n\t\"end\": \t\t\t{value: vec2.fromValues(Number.infinity, Number.infinity)},\r\n\t\"midpoint\": \t{value: midpoint}, // ALSO LOL!\r\n\t\"boundingBox\": \t{get: boundingBox}, // TROLLOLOLOL\r\n\r\n\t\"subdivide\": \t{value: subdivide},\r\n\t\"reverse\": \t\t{value: reverse},\r\n\t\"scale\": \t\t{value: scale},\r\n\t\"translate\": \t{value: translate},\r\n\r\n\t\"draw\": \t\t{value: draw}\r\n});\r\n\r\nfunction midpoint() {\r\n\treturn this.middle;\r\n}\r\n\r\nfunction subdivide(p) {\r\n\tthrow \"Cannot subdivide a bidirection ray\";\r\n}\r\n\r\nfunction reverse() {\r\n\treturn this;\r\n}\r\n\r\nfunction scale(scalar) {\r\n\tthrow \"Cannot scale a bidirectional ray\";\r\n}\r\n\r\nfunction translate(offset) {\r\n\tvar middle = vec2.clone(this.middle);\r\n\tvec2.add(middle, middle, offset);\r\n\treturn new Line(middle, this.direction);\r\n}\r\n\r\nfunction boundingBox() {\r\n\treturn Rectangle.point(this.middle);\r\n}\r\n\r\nfunction draw(context) {\r\n\tcontext.arrow(this.middle, this.direction, 0.5);\r\n\tcontext.arrow(this.middle, vec2.scale(vec2(0, 0), this.direction, -1), 0.5);\r\n}\r\n","import { roughlyEqual } from '../missing-stuff';\r\n\r\nconst TIME_EPSILON = 1e-8;\r\nvar max = Math.max;\r\nvar infinity = Infinity;\r\nvar weakmap = WeakMap;\r\n\r\nvar id = 0;\r\nexport default class SkeletonWavefront {\r\n\tconstructor(processor, root, time) {\r\n\t\tthis.id = id++;\r\n\t\tthis.processor = processor;\r\n\t\tthis.root = root;\r\n\t\tthis.time = time;\r\n\r\n\t\t// take ownership of edges and compute length\r\n\t\tvar length = 0;\r\n\t\tfor (let edge of root) {\r\n\t\t\tlength++;\r\n\t\t\tedge.wavefront = this;\r\n\t\t}\r\n\t\tthis.length = length;\r\n\t}\r\n\r\n\tinitialise() {\r\n\t\t// compute initial edge direction\r\n\t\tlet edge = this.root;\r\n\t\twhile(true) {\r\n\t\t\tedge.computeDirection();\r\n\t\t\tedge = edge.next;\r\n\t\t\tif (edge === this.root) break;\r\n\t\t}\r\n\r\n\t\t// compute initial vertex direction and speed\r\n\t\twhile(true) {\r\n\t\t\tedge.start.computeDirectionAndSpeed();\r\n\t\t\tedge = edge.next;\r\n\t\t\tif (edge === this.root) break;\r\n\t\t}\r\n\r\n\t\t// compute initial collapse events\r\n\t\twhile(true) {\r\n\t\t\tedge.computeCollapseEvent();\r\n\t\t\tedge = edge.next;\r\n\t\t\tif (edge === this.root) break;\r\n\t\t}\r\n\r\n\t\t// compute initial cut/split events\r\n\t\twhile(true) {\r\n\t\t\tedge.computeSplitEvents();\r\n\t\t\tedge = edge.next;\r\n\t\t\tif (edge === this.root) break;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tprocess(maximum) {\r\n\t\tlet events = [];\r\n\t\twhile(true) {\r\n\t\t\t// compute events\r\n\t\t\tvar nextEvents = this.nextEvents();\r\n\r\n\t\t\t// shortcut if we're done processing\r\n\t\t\tif (nextEvents.events.length === 0 || nextEvents.time > maximum) {\r\n\t\t\t\tthis.move(maximum);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// filter events\r\n\t\t\tfor (let i = 0; i < nextEvents.events.length; i++) {\r\n\t\t\t\tlet event = nextEvents.events[i];\r\n\t\t\t\tif (!event.isValid())\r\n\t\t\t\t\tevent.remove();\r\n\t\t\t\telse\r\n\t\t\t\t\tevents.push(event);\r\n\t\t\t}\r\n\t\t\tif (events.length > 0)\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tevents = [];\r\n\t\t}\r\n\r\n\t\t// process events\r\n\t\tthis.move(nextEvents.time);\r\n\t\tfor (let i = 0; i < nextEvents.events.length; i++) {\r\n\t\t\tlet event = nextEvents.events[i];\r\n\t\t\tevent.isValid() && event.process();\r\n\t\t\tevent.remove();\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tdebugprocess(maximum) {\r\n\t\tconsole.group(\"step\");\r\n\t\tDrawing2D.log(\"before\", this);\r\n\r\n\t\tlet events;\r\n\t\tlet depth = 0;\r\n\t\twhile(true) {\r\n\t\t\tdepth++;\r\n\t\t\tif (depth == 100) debugger;\r\n\r\n\t\t\t// compute events\r\n\t\t\tvar nextEvents = this.nextEvents();\r\n\r\n\t\t\t// shortcut if we're done processing\r\n\t\t\tif (nextEvents.events.length === 0 || nextEvents.time > maximum) {\r\n\t\t\t\tthis.move(maximum);\r\n\t\t\t\tDrawing2D.log(\"after move\", this);\r\n\t\t\t\tconsole.groupEnd(\"step\");\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// filter events\r\n\t\t\tevents = [];\r\n\t\t\tfor (let i = 0; i < nextEvents.events.length; i++) {\r\n\t\t\t\tlet event = nextEvents.events[i];\r\n\t\t\t\tif (!event.isValid()) {\r\n\t\t\t\t\tconsole.log(\"removing\", event.description());\r\n\t\t\t\t\tevent.remove();\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\tevents.push(event);\r\n\t\t\t}\r\n\t\t\tif (events.length > 0)\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\t// process events\r\n\t\tthis.move(nextEvents.time);\r\n\t\tDrawing2D.log(\"after move\", this);\r\n\t\tfor (let event of events) {\r\n\t\t\tif (event.isValid()) {\r\n\t\t\t\tconsole.log(event.description());\r\n\t\t\t\tevent.process();\r\n\t\t\t\tthis.processor.wavefronts.length > 0 && Drawing2D.log(\"after event\", this.processor.wavefronts.concat([{colour: \"#F0F\", visuals: this.processor.spokes}]));\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"late removal of\", event.description());\r\n\t\t\t}\r\n\t\t\tevent.remove();\r\n\t\t}\r\n\r\n\t\tconsole.groupEnd(\"step\");\r\n\t\treturn true;\r\n\t}\r\n\r\n\tremove() {\r\n\t\tthis.length = 0;\r\n\t\tfor (let edge of this.root)\r\n\t\t\tedge.wavefront = null;\r\n\t\tthis.root = null;\r\n\t\tthis.processor.removeWavefront(this);\r\n\t}\r\n\r\n\tnextEvents() {\r\n\t\tvar events = [],\r\n\t\t\ttime = infinity,\r\n\t\t\tmaxtime = -infinity;\r\n\r\n\t\tvar wavefront = this;\r\n\t\tfunction testEvent(event) {\r\n\t\t\tlet eventTime = event.time;\r\n\t\t\tif (eventTime < wavefront.time)\r\n\t\t\t\tthrow \"Time machine?\";\r\n\t\t\tif (eventTime < time) {\r\n\t\t\t\t//console.log(\"testing\", event.description(), \"<\", time);\r\n\t\t\t\tlet old = events;\r\n\t\t\t\tevents = [event];\r\n\t\t\t\tmaxtime = time = eventTime;\r\n\t\t\t\tfor (let i = 0; i < old.length; i++)\r\n\t\t\t\t\ttestEvent(old[i]);\r\n\t\t\t} else if (eventTime < infinity && roughlyEqual(eventTime, time, TIME_EPSILON)) {\r\n\t\t\t\t//console.log(\"testing\", event.description(), \"<\", \"~\" + time);\r\n\t\t\t\tevents.push(event);\r\n\t\t\t\tmaxtime = max(maxtime, eventTime);\r\n\t\t\t} else {\r\n\t\t\t\t//console.log(\"testing\", event.description(), \"skipped\");\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tlet edge = this.root;\r\n\t\twhile(true) {\r\n\t\t\ttestEvent(edge.collapseEvent);\r\n\t\t\tlet vertexEvents = edge.start.events;\r\n\t\t\tfor (let i = 0; i < vertexEvents.length; i++)\r\n\t\t\t\ttestEvent(vertexEvents[i]);\r\n\r\n\t\t\tedge = edge.next;\r\n\t\t\tif (edge === this.root) break;\r\n\t\t}\r\n\r\n\t\tif (time === infinity)\r\n\t\t\tmaxtime = infinity;\r\n\r\n\t\tevents.sort((a, b) => b - a);\r\n\t\treturn {\"time\": maxtime, \"events\": events};\r\n\t}\r\n\r\n\tmove(time) {\r\n\t\tlet delta = time - this.time;\r\n\t\tlet edge = this.root;\r\n\t\twhile(true) {\r\n\t\t\tedge.start.move(delta);\r\n\t\t\tedge = edge.next;\r\n\t\t\tif (edge === this.root) break;\r\n\t\t}\r\n\t\tthis.time = time;\r\n\t}\r\n\r\n\ttoPath() {\r\n\t\tvar pather = new Pather();\r\n\t\tpather.moveTo(vec2.clone(this.root.start.position));\r\n\t\tfor (let edge of this.root)\r\n\t\t\tpather.lineTo(vec2.clone(edge.end.position));\r\n\t\treturn pather.path;\r\n\t}\r\n\r\n\tdraw(context) {\r\n\t\tif (!this.root) return;\r\n\t\tvar dimmer = context.clone();\r\n\t\tdimmer.alpha = 0.2;\r\n\t\tfor (let edge of this.root) {\r\n\t\t\tedge.draw(context);\r\n\t\t\t//LineSegment.project(edge.start.position, edge.start.direction, edge.start.speed / 10).draw(dimmer);\r\n\t\t\tnew Ray(edge.segment.midpoint, edge.direction).draw(dimmer);\r\n\t\t}\r\n\t}\r\n}\r\n","import Ray from '../primitives/Ray';\r\nimport Line from '../primitives/Line';\r\nimport intersect from '../intersections/Intersections';\r\nimport vec2 from '../nd-linalg/Vector2';\r\nimport vec3 from '../nd-linalg/Vector3';\r\nimport { roughlyEqual } from '../missing-stuff';\r\nimport * as SkeletonEdge from './SkeletonEdge';\r\nimport SkeletonWavefront from './SkeletonWavefront';\r\n\r\nvar id = 0;\r\nvar infinity = Infinity;\r\nvar ROUGHLY_EPSILON = Number.ROUGHLY_EPSILON;\r\nexport default class SkeletonSplitEvent {\r\n\tconstructor(edge, vertex) {\r\n\t\tthis.id = id++;\r\n\t\tthis.edge = edge;\r\n\t\tthis.vertex = vertex;\r\n\r\n//\t\tif (this.edge.isSelfIntersectionCap)\r\n//\t\t\treturn this.time = infinity;\r\n\r\n\t\tlet intersections = intersect(vertex.projection, edge.line);\r\n\t\tif (intersections.length == 0)\r\n\t\t\treturn this.time = infinity;\r\n\r\n\t\t// Find the bisector(s)\r\n\t\tlet projectionToEdgePosition = intersections[0].p;\r\n\t\tintersections = intersect(edge.line, vertex.previousEdge.line);\r\n\t\tif (intersections.length == 0) {\r\n\t\t\t// the two edges are parallel to each other, find the midpoint between them for the bisector\r\n\t\t\tlet midpoint = vec2.lerp(vec2(0, 0), edge.start.position, vertex.previousEdge.start.position, 0.5);\r\n\t\t\tvar bisector = new Line(midpoint, vertex.previousEdge.lineDirection);\r\n\t\t} else {\r\n\t\t\tlet edgeToEdgePosition = intersections[0].p,\r\n\t\t\t\tdir1 = vec2.sub(vec2(0, 0), vertex.position, edgeToEdgePosition),\r\n\t\t\t\tdir2 = vec2.sub(vec2(0, 0), projectionToEdgePosition, edgeToEdgePosition);\r\n\r\n\t\t\tvec2.normalize(dir1, dir1);\r\n\t\t\tvec2.normalize(dir2, dir2);\r\n\t\t\tlet direction = vec2.add(vec2(0, 0), dir1, dir2);\r\n\t\t\tvec2.normalize(direction, direction);\r\n\t\t\tvar bisector = new Ray(edgeToEdgePosition, direction);\r\n\t\t}\r\n\r\n\t\t// Find the point of split\r\n\t\tintersections = intersect(vertex.projection, bisector);\r\n\t\tif (intersections.length === 0)\r\n\t\t\treturn this.time = infinity;\r\n\r\n\t\t// How far from the vertex to the bisector\r\n\t\tlet length = edge.lengthAt(intersections[0].p);\r\n\t\tif (length < 0 || length === infinity)\r\n\t\t\treturn this.time = infinity;\r\n\r\n\t\tthis.time = length + this.edge.wavefront.time;\r\n\t\t//Drawing2D.log(\"created \" + this.description(), [this.edge.wavefront, this, {colour: \"pink\", legend: \"bisector\", visuals: [bisector]}]);\r\n\t}\r\n\r\n\tname() {\r\n\t\tif (!this.edge.wavefront || this.edge.wavefront != this.vertex.wavefront)\r\n\t\t\treturn \"Split(dead)\";\r\n\t\tlet projected = this.edge.projectBy(this.time - this.edge.wavefront.time),\r\n\t\t\tposition = this.vertex.projectBy(this.time - this.edge.wavefront.time);\r\n\t\tlet distance1 = vec2.dist(this.edge.start.position, this.vertex.position),\r\n\t\t\tdistance2 = vec2.dist(this.edge.end.position, this.vertex.position);\r\n\t\tif (roughlyEqual(distance1, 0))\r\n\t\t\treturn \"Cut.start\";\r\n\t\tif (roughlyEqual(distance2, 0))\r\n\t\t\treturn \"Cut.end\";\r\n\t\telse\r\n\t\t\treturn \"Split\";\r\n\t}\r\n\r\n\tisValid() {\r\n\t\t// The event must be on an existing wavefront and both the edge and vertex must also be on the same wavefront\r\n\t\tif (!this.edge.wavefront || this.edge.wavefront != this.vertex.wavefront)\r\n\t\t\treturn false;\r\n\r\n\t\t// No events are allowed to happen immediately, that would require a self-intersecting source shape and that is not allowed for this algorithm. The only other way this can happen is with an open-path and no events should happen at instance-zero then either\r\n\t\tif (this.time === 0)\r\n\t\t\treturn false;\r\n\r\n\t\t// No split or cut can happen with < 4 edges\r\n\t\tif (this.edge.wavefront.length < 4)\r\n\t\t\treturn false;\r\n\r\n\t\t// Is the vertex still acute?\r\n\t\tif (this.vertex.isAcute)\r\n\t\t\treturn false;\r\n\r\n\t\t// Is the event time infinite?\r\n\t\tif (this.time === infinity)\r\n\t\t\treturn false;\r\n\r\n\t\t// Is the event actually happening?\r\n\t\tlet futureEdge = this.edge.projectBy(this.time - this.edge.wavefront.time),\r\n\t\t\tfutureVertex = this.vertex.projectBy(this.time - this.edge.wavefront.time);\r\n\t\treturn futureEdge.roughlyContainsPoint(futureVertex);\r\n\t}\r\n\r\n\tremove() {\r\n\t\tconst _this = this;\r\n\t\tthis.vertex.events = this.vertex.events.filter( function( ele ){\r\n\t\t\treturn ele !== _this;\r\n\t\t});\r\n\t\t// this.vertex.events = this.vertex.events.without(this);\r\n\t}\r\n\r\n\tdescription() {\r\n\t\treturn `${this.name()}:${this.id} edge ${this.edge.id} from between ${this.vertex.previousEdge.id} and ${this.vertex.nextEdge.id} at ${this.time}`;\r\n\t}\r\n\r\n\tprocess() {\r\n\t\tlet distance1 = vec2.dist(this.edge.start.position, this.vertex.position);\r\n\t\tif (roughlyEqual(distance1, 0))\r\n\t\t\treturn cut(this.edge.start, this.vertex);\r\n\r\n\t\tlet distance2 = vec2.dist(this.edge.end.position, this.vertex.position);\r\n\t\tif (roughlyEqual(distance2, 0))\r\n\t\t\treturn cut(this.edge.end, this.vertex);\r\n\r\n\t\t// The vertex.position was roughly contained within the edge, but not close\r\n\t\t// enough to have a roughly close distance to either end and when we test\r\n\t\t// if it's really contained and it is not, then it must still be treated as\r\n\t\t// a cut\r\n\t\tif (!this.edge.segment.boundingBox.containsPoint(this.vertex.position))\r\n\t\t\treturn distance1 < distance2\r\n\t\t\t\t ? cut(this.edge.start, this.vertex)\r\n\t\t\t\t : cut(this.edge.end, this.vertex);\r\n\r\n\t\treturn split(this.edge, this.vertex);\r\n\t}\r\n\r\n\tdraw(context) {\r\n\t\tcontext.style = \"#F00\";\r\n\t\tcontext.legend(\"this.edge\");\r\n\t\tthis.edge.draw(context);\r\n\r\n\t\tcontext.style = \"#F66\";\r\n\t\tcontext.legend(\"this.edge - future\");\r\n\t\tthis.edge.projectBy(this.time - this.edge.wavefront.time).draw(context);\r\n\r\n\t\tcontext.style = \"#00F\";\r\n\t\tcontext.legend(\"this.vertex\");\r\n\t\tthis.vertex.previousEdge.draw(context);\r\n\t\tthis.vertex.nextEdge.draw(context);\r\n\r\n\t\tcontext.style = \"#66F\";\r\n\t\tcontext.legend(\"this.vertex - future\");\r\n\t\tthis.vertex.previousEdge.projectBy(this.time - this.edge.wavefront.time).draw(context);\r\n\t\tthis.vertex.nextEdge.projectBy(this.time - this.edge.wavefront.time).draw(context);\r\n\r\n\t\tcontext.style = \"rgba(0, 0, 255, 0.25)\";\r\n\t\tcontext.legend(\"this.vertex - projection\");\r\n\t\tthis.vertex.projection.draw(context);\r\n\r\n\t\tcontext.style = \"#300\";\r\n\t\tcontext.legend(\"intersection\");\r\n\t\tcontext.dot(this.vertex.projectBy(this.time - this.edge.wavefront.time));\r\n\t}\r\n}\r\n\r\nfunction join(previous, next, length) {\r\n\t// find the point at which these two edges connect and 'extend' or 'contract' the edges until they meet to preserve the direction of both edges\r\n\tlet intersections = intersect(previous.line, next.line),\r\n\t\tmoved = intersections.length > 0;\r\n\tif (moved) {\r\n\t\tnext.start.position = intersections[0].p;\r\n\t\tnext.wavefront.processor.commitSkeletonVertex(next.start);\r\n\t}\r\n\r\n\t// connect the edges\r\n\tSkeletonEdge.connect([previous, next]);\r\n\r\n\t// did we twist an edge trying to do this, if so, try again skipping the twisted edge\r\n\tif (moved) {\r\n\t\tlet twist1 = intersect(previous.previous.segment, next.segment);\r\n\t\tif (twist1.length > 0 && !twist1[0].isDegenerate)\r\n\t\t\treturn join(previous.previous, next, length + 1);\r\n\t\tlet twist2 = intersect(previous.segment, next.next.segment);\r\n\t\tif (twist2.length > 0 && !twist2[0].isDegenerate)\r\n\t\t\treturn join(previous, next.next, length + 1);\r\n\t}\r\n\r\n\t// compute direction and speed\r\n\tnext.start.computeDirectionAndSpeed();\r\n\r\n\t// compute collapse events\r\n\tprevious.computeCollapseEvent();\r\n\tnext.computeCollapseEvent();\r\n\r\n\t// compute split events\r\n\tnext.start.computeSplitEvents();\r\n\r\n\treturn [previous, next, length];\r\n}\r\n\r\nfunction cut(edgeVertex, cutVertex) {\r\n\tif (edgeVertex === cutVertex)\r\n\t\treturn false;\r\n\r\n\tedgeVertex.wavefront.processor.commitSkeletonVertex(edgeVertex);\r\n\tcutVertex.wavefront.processor.commitSkeletonVertex(cutVertex);\r\n\r\n\tlet wavefront0 = edgeVertex.wavefront,\r\n\t\twavefront1 = null,\r\n\t\tprevious0 = edgeVertex.previousEdge,\r\n\t\tprevious1 = cutVertex.previousEdge,\r\n\t\tnext0 = cutVertex.nextEdge,\r\n\t\tnext1 = edgeVertex.nextEdge,\r\n\t\tlength0 = 0,\r\n\t\tlength1 = 0;\r\n\r\n\t[previous0, next0, length0] = join(previous0, next0, length0);\r\n\t[previous1, next1, length1] = join(previous1, next1, length1);\r\n\r\n\t// create the new wavefront\r\n\twavefront0.root = previous0;\r\n\twavefront1 = new SkeletonWavefront(\r\n\t\twavefront0.processor,\r\n\t\tprevious1,\r\n\t\twavefront0.time);\r\n\twavefront0.length -= wavefront1.length + length0 + length1;\r\n\r\n\t//SkeletonEdge.isBroken(previous0);\r\n\t//SkeletonEdge.isBroken(previous1);\r\n\r\n\t// it's possible at this point that one of the two wavefronts\r\n\t// has < 3 vertices. If that's the case, we might as well\r\n\t// delete it now and add its spokes, otherwise make sure the\r\n\t// two wavefronts exist in the processor\r\n\tfunction endit(wavefront) {\r\n\t\twavefront.processor.commitSkeletonVertex(wavefront.root.start);\r\n\t\twavefront.processor.commitSkeletonVertex(wavefront.root.end);\r\n\t\twavefront.processor.commitSkeletonSpoke(\r\n\t\t\tvec3(wavefront.root.start.position[0], wavefront.root.start.position[1], wavefront.time),\r\n\t\t\tvec3(wavefront.root.end.position[0], wavefront.root.end.position[1], wavefront.time));\r\n\t}\r\n\tif (wavefront0.length < 3) {\r\n\t\tendit(wavefront0);\r\n\t\twavefront0.remove();\r\n\t} else {\r\n\t\t// wavefront[0] already exists in the processor\r\n\t}\r\n\tif (wavefront1.length < 3) {\r\n\t\tendit(wavefront1)\r\n\t\twavefront1.root.next.wavefront = null;\r\n\t\twavefront1.root.wavefront = null;\r\n\t} else {\r\n\t\twavefront1.processor.addWavefront(wavefront1);\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction split(edge, vertex) {\r\n\tlet pair = edge.split(vertex.position);\r\n\r\n\t// compute direction and speed\r\n\tpair[1].start.computeDirectionAndSpeed();\r\n\r\n\t// compute collapse events\r\n\t// SKIPPED: cut will do it\r\n\r\n\t// compute split events for the two halves\r\n\t// pair[1].start is not acute and we do not have to compute its split events\r\n\tpair[0].computeSplitEvents();\r\n\tpair[1].computeSplitEvents();\r\n\r\n\treturn cut(pair[1].start, vertex);\r\n}\r\n","import vec2 from '../nd-linalg/Vector2';\r\nimport vec3 from '../nd-linalg/Vector3';\r\nimport { roughlyEqual } from '../missing-stuff';\r\nimport Ray from '../primitives/Ray';\r\nimport Line from '../primitives/Line';\r\nimport intersect from '../intersections/Intersections';\r\nimport SkeletonSplitEvent from './SkeletonSplitEvent';\r\n\r\nvar id = 0;\r\nexport default class SkeletonVertex {\r\n\tconstructor(position, nextEdge) {\r\n\t\tif (!isFinite(position[0]) || !isFinite(position[1]))\r\n\t\t\tthrow \"Bad vertex\";\r\n\r\n\t\tthis.id = id++;\r\n\t\tthis.position = vec2.clone(position);\r\n\t\tthis.beginning = vec3(position[0], position[1], 0);\r\n\t\tthis.nextEdge = nextEdge;\r\n\r\n\t\tthis.events = [];\r\n\t\tthis.isParallel = null;\r\n\t\tthis.isAcute = null;\r\n\t\tthis.direction = null;\r\n\t\tthis.projection = null;\r\n\t\tthis.speed = null;\r\n\t}\r\n\r\n\tget name() { return \"SkeletonVertex\"; }\r\n\tget wavefront() { return this.nextEdge.wavefront; }\r\n\tget previousEdge() { return this.nextEdge.previous; }\r\n\tget next() { return this.nextEdge.end; }\r\n\tget previous() { return this.previousEdge.start; }\r\n\r\n\tcomputeDirectionAndSpeed() {\r\n\t\t// if direction and speed change, any split/cut events for this vertex\r\n\t\t// are now invalid\r\n\t\tthis.events = [];\r\n\r\n\t\tlet position = this.position;\r\n\t\tlet nextEdge = this.nextEdge;\r\n\t\tlet previousEdge = this.previousEdge;\r\n\t\tlet orientation = vec2.crossz(previousEdge.direction, nextEdge.direction);\r\n\t\tlet isParallel = this.isParallel = roughlyEqual( vec2.crossz(previousEdge.direction, nextEdge.direction), 0 );\r\n\t\tthis.isAcute = isParallel || orientation > 0;\r\n\r\n\t\t// direction & projection\r\n\t\tlet direction = this.direction = vec2.add(vec2(0, 0), previousEdge.direction, nextEdge.direction);\r\n\t\tvec2.normalize(direction, direction);\r\n\t\tthis.projection = new Ray(position, direction);\r\n\r\n\t\t// speed\r\n\t\tif (isParallel) return this.speed = 1;\r\n\t\tlet previousLine = new Line(\r\n\t\t\t\tvec2.add(vec2(0, 0), position, previousEdge.lineDirection),\r\n\t\t\t\tpreviousEdge.direction),\r\n\t\t\tnextLine = new Line(\r\n\t\t\t\tvec2.add(vec2(0, 0), position, nextEdge.lineDirection),\r\n\t\t\t\tnextEdge.direction),\r\n\t\t\tintersections = intersect(previousLine, nextLine);\r\n\r\n\t\tif (intersections.length === 0)\r\n\t\t\treturn this.speed = 0;\r\n\r\n\t\tthis.speed = vec2.dist(position, intersections[0].p);\r\n\t}\r\n\r\n\tcomputeSplitEvents() {\r\n\t\tthis.events = [];\r\n\t\tif (this.isAcute) return;\r\n\r\n\t\tlet start = this.nextEdge.next.next,\r\n\t\t\tend = this.previousEdge;\r\n\t\twhile(true) {\r\n\t\t\tif (start === end) break;\r\n\t\t\tthis.events.push(new SkeletonSplitEvent(start, this));\r\n\t\t\tstart = start.next;\r\n\t\t}\r\n\t}\r\n\r\n\tmovementBy(amount) {\r\n\t\treturn vec2.scale(vec2(0, 0), this.direction, this.speed * amount);\r\n\t}\r\n\r\n\tprojectBy(amount) {\r\n\t\treturn vec2.add(vec2(0, 0), this.position, this.movementBy(amount));\r\n\t}\r\n\r\n\tmove(amount) {\r\n\t\tvec2.add(this.position, this.position, this.movementBy(amount));\r\n\t}\r\n\r\n\tdraw(context) {\r\n\t\tcontext.dot(this.position);\r\n\r\n\t\tcontext.style = \"#AAF\";\r\n\t\tthis.projection && this.projection.draw(context);\r\n\t}\r\n}\r\n","import Ray from '../primitives/Ray';\r\nimport Line from '../primitives/Line';\r\nimport * as Triangle from '../primitives/Triangle';\r\nimport { roughlyEqual, roughlyEqualVec2 } from '../missing-stuff';\r\nimport intersect from '../intersections/Intersections';\r\nimport vec2 from '../nd-linalg/Vector2';\r\nimport vec3 from '../nd-linalg/Vector3';\r\n\r\nvar id = 0;\r\nvar infinity = Infinity;\r\nexport default class SkeletonCollapseEvent {\r\n\tconstructor(edge) {\r\n\t\tthis.id = id++;\r\n\t\tthis.edge = edge;\r\n\r\n\t\tlet wavefront = edge.wavefront,\r\n\t\t\tintersections = intersect(edge.start.projection, edge.end.projection);\r\n\r\n\t\tif (intersections.length === 0)\r\n\t\t\treturn this.time = infinity;\r\n\r\n\t\tthis.position = intersections[0].p;\r\n\t\tthis.time = edge.lengthAt(this.position) + wavefront.time;\r\n\r\n\t\t//if (this.time === 0)\r\n\t\t//\treturn this.time = infinity;\r\n\t}\r\n\r\n\tname() {\r\n\t\tif (!this.edge.wavefront || this.edge.wavefront.length < 3) return \"SkeletonCollapseEvent(dead)\";\r\n\t\treturn this.edge.wavefront.length === 3\r\n\t\t\t? \"Triangle\"\r\n\t\t\t: \"Collapse\";\r\n\t}\r\n\r\n\tisValid() {\r\n\t\tif (!this.edge.wavefront)\r\n\t\t\treturn false;\r\n\r\n\t\t// No events are allowed to happen immediately, that would require a self-intersecting source shape and that is not allowed for this algorithm. The only other way this can happen is with an open-path and no events should happen at instance-zero then either\r\n\t\tif (this.time === 0)\r\n\t\t\treturn false;\r\n\r\n\t\tswitch(this.edge.wavefront.length) {\r\n\t\t\tcase 0:\r\n\t\t\tcase 1:\r\n\t\t\tcase 2:\r\n\t\t\t\treturn false;\r\n\t\t\tcase 3:\r\n\t\t\t\treturn true;\r\n\t\t\tdefault: {\r\n\t\t\t\t// an edge cannot collapse if either of its projections are parallel to the edge\r\n\t\t\t\tconst az = vec2.crossz(this.edge.lineDirection, this.edge.start.direction);\r\n\t\t\t\tconst bz = vec2.crossz(this.edge.lineDirection, this.edge.end.direction);\r\n\t\t\t\treturn !roughlyEqual(az,0)\r\n\t\t\t\t\t&& !roughlyEqual(bz,0);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tremove() {\r\n\t\tthis.time = infinity;\r\n\t}\r\n\r\n\tdescription() {\r\n\t\treturn `${this.name()}:${this.id} edge ${this.edge.id} at ${this.time}`;\r\n\t}\r\n\r\n\tprocess() {\r\n\t\tlet wavefront = this.edge.wavefront;\r\n\t\twavefront.processor.commitSkeletonVertex(this.edge.start);\r\n\t\twavefront.processor.commitSkeletonVertex(this.edge.end);\r\n\r\n\t\tif (wavefront.length === 3) {\r\n\t\t\tlet position = this.time === infinity ? this.edge.start.position : this.position;\r\n\r\n\t\t\t// commit the third vertex of the triangle\r\n\t\t\twavefront.processor.commitSkeletonVertex(this.edge.next.end);\r\n\r\n\t\t\t// we know that -one- of the sides of the triangle has collapsed, but it's possible\r\n\t\t\t// the other two have not, they might now be parallel lines that overlap.\r\n\t\t\t// If that is the case, find one of the uncollapsed sides and connect it to the\r\n\t\t\t// triangle center\r\n\t\t\tlet a = this.edge.start.position,\r\n\t\t\t\tb = this.edge.end.position,\r\n\t\t\t\tc = this.edge.next.end.position,\r\n\t\t\t\tcenter = Triangle.center(a, b, c);\r\n\r\n\t\t\tlet start = a, end = b;\r\n\t\t\tif (roughlyEqualVec2(a, b)) {\r\n\t\t\t\tif (roughlyEqualVec2(b, c)) {\r\n\t\t\t\t\tstart = c;\r\n\t\t\t\t\tend = a;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstart = b;\r\n\t\t\t\t\tend = c;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcenter = vec3(center[0], center[1], wavefront.time);\r\n\t\t\tstart = vec3(start[0], start[1], wavefront.time);\r\n\t\t\tend = vec3(end[0], end[1], wavefront.time);\r\n\t\t\twavefront.processor.commitSkeletonSpoke(start, center);\r\n\t\t\twavefront.processor.commitSkeletonSpoke(center, end);\r\n\r\n\t\t\twavefront.remove();\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tlet previous = this.edge.previous,\r\n\t\t\tnext = this.edge.next;\r\n\r\n\t\t// collapse this.edge\r\n\t\tthis.edge.collapse();\r\n\r\n\t\t// compute the direction and speed for the newly connected vertex\r\n\t\tnext.start.computeDirectionAndSpeed();\r\n\r\n\t\t// compute the collapse events for the neighbours\r\n\t\tprevious.computeCollapseEvent();\r\n\t\tnext.computeCollapseEvent();\r\n\r\n\t\t// compute the split events for the connected vertex which may now be obtuse\r\n\t\tnext.start.computeSplitEvents();\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tdraw(context) {\r\n\t\tif (this.wavefront.length === 3) {\r\n\t\t\tcontext.dot(this.position);\r\n\t\t\treturn this.wavefront.draw(context);\r\n\t\t}\r\n\r\n\t\tthis.edge.draw(context);\r\n\t\tcontext.dot(this.position);\r\n\r\n\t\tcontext.alpha = 0.25;\r\n\r\n\t\tthis.edge.start.projection.draw(context);\r\n\t\tthis.edge.end.projection.draw(context);\r\n\t}\r\n}\r\n","let lastElementId = 0;\r\n\r\nexport default class Chain {\r\n\tconstructor () {\r\n\t\tthis.previous = this;\r\n\t\tthis.next = this;\r\n\t\tthis.id = lastElementId;\r\n\t\tlastElementId++;\r\n\t}\r\n\r\n\tstatic connect (previous, next) {\r\n\t\tprevious.next = next;\r\n\t\tnext.previous = previous;\r\n\t}\r\n\r\n\tstatic disconnect (node) {\r\n\t\tthis.previous = this;\r\n\t\tthis.next = this;\r\n\t}\r\n\r\n\tlength () {\r\n\t\tlet length = 0;\r\n\t\tfor (let each of this) length++;\r\n\t\treturn length;\r\n\t}\r\n\r\n\tisSingleElement () {\r\n\t\treturn this.next === this && this.previous === this;\r\n\t}\r\n\r\n\t* [Symbol.iterator] () {\r\n\t\tlet current = this;\r\n\t\tdo {\r\n\t\t\tyield current;\r\n\t\t\tcurrent = current.next;\r\n\t\t} while (current !== this);\r\n\t}\r\n}","var infinity = Infinity;\r\nimport SkeletonVertex from './SkeletonVertex';\r\nimport SkeletonCollapseEvent from './SkeletonCollapseEvent';\r\nimport SkeletonSplitEvent from './SkeletonSplitEvent';\r\nimport vec2 from '../nd-linalg/Vector2';\r\nimport Chain from '../datastructures/Chain';\r\nimport Ray from '../primitives/Ray';\r\nimport Line from '../primitives/Line';\r\nimport intersect from '../intersections/Intersections';\r\nimport LineSegment from '../primitives/LineSegment';\r\n\r\nexport var InnerEdge = Symbol(\"InnerEdge\"),\r\n\tOuterEdge = Symbol(\"OuterEdge\"),\r\n\tStartCapEdge = Symbol(\"StartCapEdge\"),\r\n\tEndCapEdge = Symbol(\"EndCapEdge\");\r\n\r\nexport function create(path, isInfinite) {\r\n\t// console.log('isclosed', path.isClosed);\r\n\treturn path.isClosed\r\n\t\t ? createClosedPath(path, isInfinite)\r\n\t\t : createOpenPath(path, isInfinite);\r\n}\r\n\r\nfunction createClosedPath(path, isInfinite) {\r\n\tlet segments = path.segments,\r\n\t\tfirst = new SkeletonEdge(segments[0].start, InnerEdge),\r\n\t\tprevious = first;\r\n\tfor (let i = 1; i < segments.length; i++) {\r\n\t\tlet next = new SkeletonEdge(segments[i].start, InnerEdge);\r\n\t\tconnect([previous, next]);\r\n\t\tprevious = next;\r\n\t}\r\n\tconnect([previous, first]);\r\n\t//Chain.isBroken(first);\r\n\r\n\tif (isInfinite) return [first];\r\n\r\n\tlet second = new SkeletonEdge(segments[segments.length-1].end, OuterEdge);\r\n\tprevious = second;\r\n\tfor (let i = segments.length - 2; i >= 0; i--) {\r\n\t\tlet next = new SkeletonEdge(segments[i].end, OuterEdge);\r\n\t\tconnect([previous, next]);\r\n\t\tprevious = next;\r\n\t}\r\n\tconnect([previous, second]);\r\n\t//Chain.isBroken(second);\r\n\r\n\treturn [first, second];\r\n}\r\n\r\nfunction createOpenPath(path, isInfinite) {\r\n\tif (isInfinite)\r\n\t\tthrow \"Cannot propagate an open path wavefront infinitely\";\r\n\r\n\tlet segments = path.segments,\r\n\t\tedges = new Array(segments.length * 2 + 2),\r\n\t\ti = 0;\r\n\r\n\tfor (let segment of segments.slice().reverse())\r\n\t\tedges[i++] = new SkeletonEdge(segment.end, OuterEdge);\r\n\tedges[i++] = new SkeletonEdge(segments[0].start, StartCapEdge);\r\n\r\n\tfor (let segment of segments)\r\n\t\tedges[i++] = new SkeletonEdge(segment.start, InnerEdge);\r\n\tedges[i] = new SkeletonEdge(segments[segments.length-1].end, EndCapEdge);\r\n\r\n\tconnect(edges);\r\n\tconnect([edges[edges.length-1], edges[0]]);\r\n\t//Chain.isBroken(edges[0]);\r\n\r\n\treturn [edges[0]];\r\n}\r\n\r\nexport function connect(edges) {\r\n\tif (edges.length < 2)\r\n\t\tthrow \"Need at least two edges to connect\";\r\n\r\n\t// connect the list of edges\r\n\tlet previous = edges[0];\r\n\tfor (var i = 1; i < edges.length; i++) {\r\n\t\tlet next = edges[i];\r\n\t\tChain.connect(previous, next);\r\n\t\tprevious = next;\r\n\t}\r\n}\r\n\r\nexport function isBroken(root) {\r\n\tlet length = 0;\r\n\tChain.isBroken(root);\r\n\tfor (let edge of root) {\r\n\t\tlength++;\r\n\t\tif (edge.start.nextEdge !== edge)\r\n\t\t\tthrow \"Edge vertex inconsistent\";\r\n\t\tif (edge.segment.start !== edge.start.position)\r\n\t\t\tthrow \"Edge segment.start inconsistent\";\r\n\t\tif (edge.segment.end !== edge.end.position)\r\n\t\t\tthrow \"Edge segment.end inconsistent\";\r\n\t}\r\n\tif (root.wavefront.length != length)\r\n\t\tthrow \"What?\";\r\n}\r\n\r\nvar id = 0;\r\nclass SkeletonEdge {\r\n\tconstructor(start, side) {\r\n\t\tthis.id = id++;\r\n\t\tthis.side = side;\r\n\t\tthis.start = new SkeletonVertex(start, this);\r\n\t\tthis.wavefront = null;\r\n\t\tthis.next = this;\r\n\t\tthis.previous = this;\r\n\t\tthis.isCap = this.side === StartCapEdge || this.side === EndCapEdge;\r\n\r\n\t\tthis.direction = null;\r\n\t\tthis.lineDirection = null;\r\n\t\tthis.collapseEvent = null;\r\n\t}\r\n\r\n\tget name() { return \"SkeletonEdge\"; }\r\n\tget end() { return this.next.start; }\r\n\tget segment() { return new LineSegment(this.start.position, this.end.position); }\r\n\tget line() { return new Line(this.start.position, this.lineDirection); }\r\n\r\n\tcomputeDirection() {\r\n\t\tlet startPosition = this.start.position,\r\n\t\t\tendPosition = this.end.position;\r\n\r\n\t\tif (this.isCap &&\r\n\t\t\tstartPosition[0] == endPosition[0] &&\r\n\t\t\tstartPosition[1] == endPosition[1]) {\r\n\t\t\tlet previousDirection = this.previous.direction;\r\n\t\t\tthis.direction = vec2(previousDirection[1], -previousDirection[0]);\r\n\t\t\tthis.lineDirection = vec2.clone(previousDirection);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.lineDirection = vec2.sub(vec2(0, 0), endPosition, startPosition);\r\n\t\tvec2.normalize(this.lineDirection, this.lineDirection);\r\n\t\tthis.direction = vec2(-this.lineDirection[1], this.lineDirection[0]);\r\n\t}\r\n\r\n\tcheckSanity() {\r\n\t\tlet sane = false;\r\n\t\tlet ray = new Ray(this.segment.midpoint, this.direction);\r\n\t\tfor (let edge of this.next) {\r\n\t\t\tif (edge !== this) {\r\n\t\t\t\tif (intersect(edge.segment, ray).length > 0) {\r\n\t\t\t\t\tsane = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!sane) throw \"Hangon...\";\r\n\t}\r\n\r\n\tcheckOverlap() {\r\n\t\tif (roughlyEqual(this.segment.length, 0)) return;\r\n\t\tintersect(this.previous.segment, this.next.segment).length > 0 && thisshouldnotbehappening();\r\n\t}\r\n\r\n\tcomputeCollapseEvent() {\r\n\t\tthis.collapseEvent = new SkeletonCollapseEvent(this);\r\n\t}\r\n\r\n\tcomputeSplitEvents() {\r\n\t\tlet edge = this.next.next.next,\r\n\t\t\tend = this.previous;\r\n\r\n\t\twhile(true) {\r\n\t\t\tif (edge === end) break;\r\n\t\t\tlet vertex = edge.start;\r\n\t\t\tvertex.isAcute || vertex.events.push(new SkeletonSplitEvent(this, vertex));\r\n\t\t\tedge = edge.next;\r\n\t\t}\r\n\t}\r\n\r\n\t* [Symbol.iterator]() {\r\n\t\tvar current = this;\r\n\t\twhile(true) {\r\n\t\t\tyield current;\r\n\t\t\tcurrent = current.next;\r\n\t\t\tif (current === this) break;\r\n\t\t}\r\n\t}\r\n\r\n\t// At a position p, assuming p is between start.projection and end.projection\r\n\t// return how long it will be before the edge reaches p\r\n\tlengthAt(p) {\r\n\t\tvar measuring = vec2(-this.direction[0], -this.direction[1]);\r\n\t\tvar intersections = intersect(new Ray(p, measuring), this.line);\r\n\r\n\t\t// If the point is behind the moving wavefront, return an infinite length\r\n\t\treturn intersections.length === 0 ? infinity : intersections[0].u;\r\n\t}\r\n\r\n\tprojectBy(amount) {\r\n\t\treturn new LineSegment(this.start.projectBy(amount), this.end.projectBy(amount));\r\n\t}\r\n\r\n\tcollapse() {\r\n\t\t// if we're the root edge, cycle to another edge\r\n\t\tif (this.wavefront.root === this)\r\n\t\t\tthis.wavefront.root = this.next;\r\n\r\n\t\tlet previous = this.previous,\r\n\t\t\tnext = this.next;\r\n\r\n\t\tconnect([previous, next]);\r\n\t\tthis.wavefront.length--;\r\n\t\t//isBroken(previous);\r\n\r\n\t\t// delete the edge and therefore any split/cut events for this edge\r\n\t\tthis.wavefront = null;\r\n\t}\r\n\r\n\tsplit(position) {\r\n\t\t// if we're the root edge, cycle to another edge\r\n\t\tif (this.wavefront.root === this)\r\n\t\t\tthis.wavefront.root = this.next;\r\n\r\n\t\tvar previous = this.previous,\r\n\t\t\tmiddle1 = new SkeletonEdge(this.start.position, previous.side),\r\n\t\t\tmiddle2 = new SkeletonEdge(position, previous.side),\r\n\t\t\tnext = this.next;\r\n\r\n\t\t// keep the current start\r\n\t\tmiddle1.start = this.start;\r\n\t\tmiddle1.start.nextEdge = middle1;\r\n\r\n\t\t// Copy the properties\r\n\t\tmiddle1.wavefront = this.wavefront;\r\n\t\tmiddle2.wavefront = this.wavefront;\r\n\t\tmiddle1.direction = vec2.clone(this.direction);\r\n\t\tmiddle2.direction = vec2.clone(this.direction);\r\n\t\tmiddle1.lineDirection = vec2.clone(this.lineDirection);\r\n\t\tmiddle2.lineDirection = vec2.clone(this.lineDirection);\r\n\r\n\t\t// Quick set the new vertex\r\n\t\tmiddle2.start.isAcute = false;\r\n\t\tmiddle2.start.isParallel = true;\r\n\t\tmiddle2.start.speed = 1;\r\n\t\tmiddle2.start.direction = vec2.clone(this.direction);\r\n\t\tmiddle2.start.projection = new Ray(middle2.start.position, middle2.start.direction);\r\n\r\n\t\tconnect([previous, middle1, middle2, next]);\r\n\t\tthis.wavefront.length++;\r\n\t\t//isBroken(previous);\r\n\r\n\t\t// delete the edge and therefore any split/cut events for this edge\r\n\t\tthis.wavefront = null;\r\n\r\n\t\treturn [middle1, middle2];\r\n\t}\r\n\r\n\tdraw(context) {\r\n\t\tif (!this.wavefront) return;\r\n\t\tif (this.cutreverse) {\r\n\t\t\tcontext.stroke(new LineSegment(this.segment.start, this.cutsegment.end));\r\n\t\t\tcontext.stroke(new LineSegment(this.cutsegment.start, this.segment.end));\r\n\t\t} else {\r\n\t\t\tcontext.stroke(this.cutsegment || this.segment);\r\n\t\t\t//context.arrowhead(this.segment.end, this.lineDirection);\r\n\t\t}\r\n\t\tcontext.dot(this.start.position);\r\n\t\tcontext.fontsize = 13;\r\n\t\tcontext.textBaseline = \"center\";\r\n\t\tcontext.textAlign = \"center\";\r\n\t\tcontext.text(this.id, this.segment.midpoint);\r\n\t}\r\n}\r\n","import intersect from '../intersections/Intersections';\r\nimport vec2 from '../nd-linalg/Vector2';\r\nimport LineSegment from './LineSegment';\r\nimport Ray from './Ray';\r\nimport Rectangle from './Rectangle';\r\nimport {roughlyEqual, roughlyBetween, roughlyEqualVec2} from '../missing-stuff';\r\n\r\nexport default function Curve(start, direction, end) {\r\n\tthis.start = start;\r\n\tthis.end = end;\r\n\tthis.direction = vec2.clone(direction);\r\n\tvec2.normalize(this.direction, this.direction);\r\n\r\n\t// using the chord vector start-end, find the orientation against direction\r\n\t// -1 is counter-clockwise, 1 is clockwise, 0 is either a line or\r\n\t// an invalid curve\r\n\tvar vChord = vec2(0, 0);\r\n\tvec2.sub(vChord, this.start, this.end);\r\n\tthis.orientation = sign(vec2.crossz(this.direction, vChord));\r\n\r\n\t// an estimate of the curve length, used for computing u,v intersection values\r\n\t// and for path finding estimates\r\n\tvar chordLength = vec2.len(vChord);\r\n\r\n\t// Check if this is a line\r\n\tif (this.orientation === 0) {\r\n\t\t// Determine if the direction faces the same way as the chord,\r\n\t\t// if it doesn't then this is an infinite circle, not a line\r\n\t\tvec2.normalize(vChord, vChord);\r\n\t\tvar diff = vec2.add(vec2(0, 0), vChord, this.direction);\r\n\t\tif (!roughlyEqualVec2(diff, [0, 0]))\r\n\t\t\tthrow \"Not a valid curve, infinite circle found\";\r\n\r\n\t\t//this.length = chordLength;\r\n\t\t//this.__proto__ = LineSegment.constructor.prototype;\r\n\t\t//return;\r\n\t\treturn new LineSegment(start, end);\r\n\t}\r\n\r\n\tthis.chordLength = chordLength;\r\n\r\n\t// compute the rays for intersection\r\n\tvar rayStartToCenter = this.rayFromStartToCenter(),\r\n\t\trayHalfChordToCenter = this.rayFromHalfChordToCenter();\r\n\r\n\t// the center of the circle is at the intersection of the two rays\r\n\t// but if none exist, then it's not a real circle\r\n\tvar i = intersect(rayStartToCenter, rayHalfChordToCenter);\r\n\r\n\t// check the opposite direction in case we're >180º\r\n\tif (i.length !== 1) {\r\n\t\ti = intersect(rayStartToCenter, rayHalfChordToCenter.reverse());\r\n\t}\r\n\r\n\tif (i.length !== 1)\r\n\t\tthrow \"Not a valid curve, no circle found\";\r\n\r\n\tthis.center = i[0].p;\r\n\tthis.radius = vec2.dist(this.center, this.start);\r\n\r\n\tvar angleSpan = 2 * vec2.angleBetween(rayStartToCenter.direction, rayHalfChordToCenter.direction);\r\n\tthis.length = this.radius * angleSpan;\r\n}\r\n\r\nCurve.createIfValid = createIfValid;\r\n\r\nfunction createIfValid(start, direction, end) {\r\n\ttry {\r\n\t\treturn new Curve(start, direction, end);\r\n\t} catch (e) {\r\n\t\treturn undefined;\r\n\t}\r\n};\r\n\r\nObject.defineProperties(Curve.prototype, {\r\n\t\"name\": \t\t\t\t\t\t{value: \"Curve\"},\r\n\t\"type\": \t\t\t\t\t\t{value: intersect.CurveTypeFunction},\r\n\t\"isRay\": \t\t\t\t\t\t{value: false},\r\n\t\"isLineSegment\": \t\t\t\t\t\t{value: false},\r\n\t\"isCurve\": \t\t\t\t\t\t{value: true},\r\n\t\"isCircle\": \t\t\t\t\t{value: false},\r\n\r\n\t\"midpoint\": \t\t\t\t\t{get: midpoint},\r\n\t\"boundingBox\": \t\t\t\t\t{get: boundingBox},\r\n\t\"endDirection\": \t\t\t\t{get: endDirection},\r\n\r\n\t\"rayFromStartToCenter\": \t\t{value: rayFromStartToCenter},\r\n\t\"rayFromHalfChordToCenter\": \t{value: rayFromHalfChordToCenter},\r\n\r\n\t\"subdivide\": \t\t\t\t\t{value: subdivide},\r\n\t\"reverse\": \t\t\t\t\t\t{value: reverse},\r\n\t\"translate\": \t\t\t\t\t{value: translate},\r\n\t\"scale\": \t\t\t\t\t\t{value: scale},\r\n\t\"offsetPerpendicular\":\t\t\t{value: offsetPerpendicular},\r\n\r\n\t\"offsetPerpendicularLength\":\t{value: offsetPerpendicularLength},\r\n\t\"mapPerpendicular\": \t\t\t{value: mapPerpendicular},\r\n\r\n\t\"positionOf\": \t\t\t\t\t{value: positionOf},\r\n\t\"closestPointTo\": \t\t\t\t{value: closestPointTo},\r\n\t\"offsetOf\": \t\t\t\t\t{value: offsetOf},\r\n\t\"directionOf\": \t\t\t\t\t{value: directionOf},\r\n\t\"containsPoint\": \t\t\t\t{value: containsPoint},\r\n\t\"wedgeContainsPoint\": \t\t\t{value: wedgeContainsPoint},\r\n\t\"getAlphaValueAtPosition\":\t\t{value: getAlphaValueAtPosition},\r\n\r\n\t\"vertices\": \t\t\t\t\t{value: vertices},\r\n\t\"uvs\": \t\t\t\t\t\t\t{value: uvs},\r\n\t\"draw\": \t\t\t\t\t\t{value: draw}\r\n});\r\n\r\nfunction midpoint() {\r\n\tvar direction = this.rayFromHalfChordToCenter().direction;\r\n\tvec2.normalize(direction, direction);\r\n\tvec2.scale(direction, direction, -this.radius);\r\n\tvec2.add(direction, this.center, direction);\r\n\treturn direction;\r\n}\r\n\r\nfunction boundingBox() {\r\n\tvar origin = vec2.clone(this.start),\r\n\t\tcorner = vec2.clone(this.end),\r\n\t\tmidpoint = this.midpoint,\r\n\t\tleft = Math.min(this.start[0], this.end[0]),\r\n\t\tleft = Math.min(left, midpoint[0]),\r\n\t\tright = Math.max(this.start[0], this.end[0]),\r\n\t\tright = Math.max(right, midpoint[0]),\r\n\t\ttop = Math.min(this.start[1], this.end[1]),\r\n\t\ttop = Math.min(top, midpoint[1]),\r\n\t\tbottom = Math.max(this.start[1], this.end[1]),\r\n\t\tbottom = Math.max(bottom, midpoint[1]);\r\n\r\n\treturn new Rectangle(top, right, bottom, left);\r\n}\r\n\r\nfunction rayFromStartToCenter() {\r\n\tvar vStartToCenter = vec2.fromValues(this.direction[1], -this.direction[0]);\r\n\tthis.orientation === -1 && vec2.negate(vStartToCenter, vStartToCenter);\r\n\treturn new Ray(this.start, vStartToCenter);\r\n}\r\n\r\nfunction rayFromHalfChordToCenter() {\r\n\tvar pHalfChord = vec2(0, 0),\r\n\t\tvHalfChord = vec2(0, 0);\r\n\tvec2.lerp(pHalfChord, this.start, this.end, 0.5);\r\n\tvec2.sub(vHalfChord, pHalfChord, this.start);\r\n\r\n\tvar vHalfChordToCenter = vec2.fromValues(vHalfChord[1], -vHalfChord[0]);\r\n\tvec2.normalize(vHalfChordToCenter, vHalfChordToCenter);\r\n\tthis.orientation === -1 && vec2.negate(vHalfChordToCenter, vHalfChordToCenter);\r\n\treturn new Ray(pHalfChord, vHalfChordToCenter);\r\n}\r\n\r\nfunction subdivide(p) {\r\n\tvar head = new Curve(this.start, this.direction, p);\r\n\tvar tail = new Curve(p, this.directionOf(this.offsetOf(p)), this.end);\r\n\treturn [head, tail];\r\n}\r\n\r\nfunction reverse() {\r\n\treturn new Curve(this.end, vec2.negate(vec2(0, 0), this.endDirection), this.start);\r\n}\r\n\r\nfunction scale(scalar) {\r\n\tvar start = vec2.clone(this.start),\r\n\t\tend = vec2.clone(this.end);\r\n\tvec2.scale(start, start, scalar);\r\n\tvec2.scale(end, end, scalar);\r\n\treturn new Curve(start, this.direction, end);\r\n}\r\n\r\nfunction translate(offset) {\r\n\tvar start = vec2.clone(this.start),\r\n\t\tend = vec2.clone(this.end);\r\n\tvec2.add(start, start, offset);\r\n\tvec2.add(end, end, offset);\r\n\treturn new Curve(start, this.direction, end);\r\n}\r\n\r\nfunction directionOf(offset) {\r\n\tvar rotationSign = -this.orientation;\r\n\tvar centerToStart = vec2.sub(vec2(0, 0), this.start, this.center);\r\n\tvar centerToPoint = vec2.rotate(vec2(0, 0), centerToStart, rotationSign * offset / this.radius);\r\n\r\n\tvar direction = this.orientation > 0\r\n\t\t? vec2.fromValues(centerToPoint[1], -centerToPoint[0])\r\n\t\t: vec2.fromValues(-centerToPoint[1], centerToPoint[0]);\r\n\r\n\tvec2.normalize(direction, direction);\r\n\r\n\treturn direction;\r\n}\r\n\r\nfunction endDirection() {\r\n\tvar vEnd = vec2(0, 0);\r\n\tvec2.sub(vEnd, this.center, this.end);\r\n\tvar direction = this.orientation > 0\r\n\t\t? vec2.fromValues(-vEnd[1], vEnd[0])\r\n\t\t: vec2.fromValues(vEnd[1], -vEnd[0]);\r\n\treturn vec2.normalize(direction, direction);\r\n}\r\n\r\nfunction containsPoint(p) {\r\n\tvar distance = vec2.squaredDistance(this.center, p);\r\n\treturn (distance <= this.radius * this.radius + Intersections.THICKNESS * Intersections.THICKNESS)\r\n\t\t&& this.wedgeContainsPoint(p, Intersections.THICKNESS);\r\n}\r\n\r\nfunction wedgeContainsPoint(p, tolerance) {\r\n\t// The point (p) must lye between start and end vectors\r\n\t// let start = 0, 0\r\n\t// let end = this.end - this.start\r\n\t// let test = p - this.start\r\n\t// let dir = this.direction\r\n\t// sign0 = sign(dir x end)\r\n\t//   sign0 == 0 error: all points are either inside or outside and it's impossile to tell\r\n\t// sign1 = sign(dir x test) <\r\n\t// sign2 = sign(test x end)\r\n\t// contained if:\r\n\t//    sign1 == 0 || sign2 == 0\r\n\t//    sign0 == sign1 && sign0 == sign2\r\n\r\n\tvar test = vec2(0, 0),\r\n\t\tendToStart = vec2(0, 0),\r\n\t\tdir = tolerance ? this.directionOf(-tolerance) : this.direction;\r\n\r\n\tlet start = tolerance ? this.positionOf(-tolerance) : this.start;\r\n\tlet end = tolerance ? this.positionOf(this.length + tolerance) : this.end;\r\n\r\n\tvec2.sub(test, p, start);\r\n\tvec2.sub(endToStart, end, start);\r\n\r\n\tvar sign0 = sign(vec2.crossz(dir, endToStart));\r\n\tvar sign1 = sign(vec2.crossz(dir, test));\r\n\tvar sign2 = sign(vec2.crossz(test, endToStart));\r\n\t//console.log(\"dir\", dir, \"end\", end, \"test\", test, \"sign0\", sign0, \"sign1\", sign1, \"sign2\", sign2);\r\n\r\n\t// All or no solutions because there is no arc, this should not be possible, it should\r\n\t// have been caught on curve creation\r\n\tif (sign0 === 0)\r\n\t\tthrow \"This curve has no wedge\";\r\n\r\n\t// Solution because the test is on an edge of the wedge\r\n\tif (sign1 === 0 || sign2 === 0)\r\n\t\treturn true;\r\n\r\n\treturn sign0 === sign1 && sign0 === sign2;\r\n}\r\n\r\nfunction getAlphaValueAtPosition(p) {\r\n\treturn this.offsetOf(p) / this.length;\r\n}\r\n\r\nfunction sign(value) {\r\n\treturn roughlyEqual(value, 0)\r\n\t\t? 0\r\n\t\t: value > 0\r\n\t\t\t? 1\r\n\t\t\t: -1;\r\n}\r\n\r\nfunction offsetOf(point) {\r\n\tvar tolerance = 1e-3;\r\n\tvar centerToStart = vec2.sub(vec2(0, 0), this.start, this.center);\r\n\tvar centerToPoint = vec2.sub(vec2(0, 0), point, this.center);\r\n\tvar centerToEnd = vec2.sub(vec2(0, 0), this.end, this.center);\r\n\r\n\tvar angleSpan = this.length / this.radius;\r\n\r\n\tvar directionAtPoint = this.orientation > 0\r\n\t\t? vec2.fromValues(centerToPoint[1], -centerToPoint[0])\r\n\t\t: vec2.fromValues(-centerToPoint[1], centerToPoint[0]);\r\n\tvar angleAToPoint = vec2.angleBetweenWithDirections(\r\n\t\tcenterToStart, this.direction, centerToPoint);\r\n\tvar angleBToPoint = vec2.angleBetweenWithDirections(\r\n\t\tcenterToPoint, directionAtPoint, centerToEnd);\r\n\r\n\treturn angleAToPoint <= angleSpan + tolerance && angleBToPoint <= angleSpan + tolerance\r\n\t\t? angleAToPoint * this.radius\r\n\t\t: vec2.dist(this.start, point) < vec2.dist(this.end, point)\r\n\t\t\t? -vec2.angleBetween(centerToStart, centerToPoint) * this.radius\r\n\t\t\t: this.length + vec2.angleBetween(centerToEnd, centerToPoint) * this.radius;\r\n}\r\n\r\nfunction closestPointTo(point) {\r\n\tvar offset = this.offsetOf(point);\r\n\tif (roughlyBetween(0, offset, this.length)) {\r\n\t\tvar centerToPoint = vec2.sub(vec2(0, 0), point, this.center);\r\n\t\treturn vec2.add(centerToPoint, centerToPoint, this.center, vec2.scale(\r\n\t\t\tcenterToPoint, centerToPoint,\r\n\t\t\tthis.radius / vec2.len(centerToPoint)\r\n\t\t));\r\n\t}\r\n\r\n\tif (vec2.dist(this.start, point) < vec2.dist(this.end, point)) {\r\n\t\treturn this.start;\r\n\t} else {\r\n\t\treturn this.end;\r\n\t}\r\n}\r\n\r\nfunction positionOf(offset) {\r\n\tvar rotationSign = -this.orientation;\r\n\tvar centerToStart = vec2.sub(vec2(0, 0), this.start, this.center);\r\n\tvar centerToPoint = vec2.rotate(vec2(0, 0), centerToStart, rotationSign * offset / this.radius);\r\n\treturn vec2.add(centerToPoint, centerToPoint, this.center);\r\n}\r\n\r\nfunction offsetPerpendicular(offsetToRight) {\r\n\treturn Curve.createIfValid(\r\n\t\tvec2.scalePerpendicularAndAdd(vec2(0, 0), this.start, this.direction, offsetToRight),\r\n\t\tthis.direction,\r\n\t\tvec2.scalePerpendicularAndAdd(vec2(0, 0), this.end, this.endDirection, offsetToRight)\r\n\t);\r\n}\r\n\r\nfunction offsetPerpendicularLength(offsetToRight) {\r\n\tif (offsetToRight === 0) return this.length;\r\n\tvar angleSpan = this.length / this.radius;\r\n\treturn this.length + (this.orientation < 0 ? 1 : -1) * angleSpan * offsetToRight;\r\n}\r\n\r\nfunction mapPerpendicular(offsetA, offsetToRightA, offsetToRightB) {\r\n\t// TODO: maybe simplify?\r\n\treturn offsetA * (\r\n\t\tthis.offsetPerpendicularLength(offsetToRightB) /\r\n\t\tthis.offsetPerpendicularLength(offsetToRightA));\r\n}\r\n\r\nvar DEBUG_CURVE_DISPLAY = false;\r\nfunction draw(context) {\r\n\tif (this.radius === 0) return;\r\n\r\n\t// Draw the full circle\r\n\tDEBUG_CURVE_DISPLAY && context.stroke(new Circle(this.center, this.radius));\r\n\r\n\t// Draw the arrow head at the end of the arc\r\n\tcontext.arrowhead(this.end, this.endDirection);\r\n\tcontext.stroke(this);\r\n}\r\n\r\nfunction vertices(offsetToRight) {\r\n\tvar centerToStart = vec2.sub(vec2(0, 0), this.start, this.center);\r\n\r\n\tif (offsetToRight) {\r\n\t\tvar desiredRadius = this.orientation > 0\r\n\t\t\t? this.radius - offsetToRight\r\n\t\t\t: this.radius + offsetToRight;\r\n\t\tvar scaling = desiredRadius / this.radius;\r\n\t\tvec2.scale(centerToStart, centerToStart, scaling);\r\n\t}\r\n\r\n\tvar angleSpan = this.length / this.radius;\r\n\t// TODO: make less magic\r\n\tvar subdivisions = Math.ceil(Math.abs(angleSpan) * 4 * (Math.abs(this.radius)/100 + 1)) + 1;\r\n\tvar vertices = new Array(subdivisions);\r\n\tvar rotationSign = -this.orientation;\r\n\tvar rotationMatrix = mat2.rotation(rotationSign * angleSpan * (1 / (subdivisions - 1)));\r\n\tvar pointer = vec2.clone(centerToStart);\r\n\r\n\tfor (var i = 0; i < subdivisions; i++) {\r\n\t\tvertices[i] = vec2.add(vec2(0, 0), pointer, this.center);\r\n\t\tmat2.map(pointer, rotationMatrix, pointer);\r\n\t}\r\n\r\n\treturn vertices;\r\n}\r\n\r\nfunction uvs(offsetToRight, multiplierAlongPath) {\r\n\tvar angleSpan = this.length / this.radius;\r\n\t// TODO: make less magic\r\n\tvar subdivisions = Math.ceil(Math.abs(angleSpan) * 4 * (Math.abs(this.radius)/100 + 1)) + 1;\r\n\r\n\tvar uvs = new Array(subdivisions);\r\n\r\n\tfor (var i = 0; i < subdivisions; i++) {\r\n\t\tuvs[i] = vec2.fromValues(multiplierAlongPath * this.length * (i / (subdivisions - 1)), offsetToRight);\r\n\t}\r\n\r\n\treturn uvs;\r\n}\r\n","class It {\n\tconstructor () {\n\t\tthis.op = id;\n\t}\n\n\tof (iterable) {\n\t\t// might return normal or iterator function\n\t\treturn this.op(iterable);\n\t}\n\n\tchain (second) {\n\t\tthis.op = compose(this.op, second);\n\t\treturn this;\n\t}\n\n\tstatic concat (first, second) {\n\t\t// this only returns an iterating function,\n\t\t// it doesn't run it yet!\n\t\treturn function * concatenation () {\n\t\t\tyield* first; yield* second;\n\t\t};\n\t}\n\n\t// Iterators\n\tcycle () {return this.chain(cycler());}\n\tflatten () {return this.chain(flattener());}\n\tmap (mapping) {return this.chain(mapper(mapping));}\n\tfilter (predicate) {return this.chain(filterer(predicate));}\n\ttake (n) {return this.chain(taker(n));}\n\tdrop (n) {return this.chain(dropper(n));}\n\twindows (size) {return this.chain(windower(size));}\n\tchunks (size) {return this.chain(chunker(size));}\n\tslice (start, end) {return this.chain(compose(dropper(start - 1), taker(start - end)));}\n\tcommon (otherIterable) {return this.chain(commoner(otherIterable));}\n\tzip (otherIterable) {return this.chain(zipper(otherIterable));}\n\tappend (otherIterable) {return this.chain(appender(otherIterable));}\n\n\t// Reducers\n\treduce (step, initial) {return this.chain(reducerer(step, initial));}\n\tfirst () {return this.chain(firster());}\n\tfind (predicate) {return this.chain(finder(predicate));}\n\thas (item) {return this.chain(haser(item));}\n\textreme (mapping) {return this.chain(extremer(mapping));}\n\tmax (mapping) {return this.chain(maxer(mapping));}\n\tmin (mapping) {return this.chain(miner(mapping));}\n\tall (predicate) {return this.chain(aller(predicate));}\n\tany (predicate) {return this.chain(anyer(predicate));}\n\tunique () {return this.chain(uniquer());}\n\tempty () {return this.chain(emptyer());}\n}\n\nfunction createIteration() {return new It();}\ncreateIteration.concat = It.concat;\nexport default createIteration;\n\nfunction id (iterable) {return iterable;}\n\nfunction compose (first, second) {\n\treturn function composition (iterable) {\n\t\treturn second(first(iterable));\n\t};\n}\n\n// Iterator-ers\n\nfunction cycler () {\n\treturn function * cycle (iterable) {\n\t\tlet seenValues = [];\n\n\t\tfor (let value of iterable) {\n\t\t\tseenValues.push(value);\n\t\t\tyield value;\n\t\t}\n\n\t\twhile (true) yield* seenValues;\n\t};\n}\n\nfunction flattener () {\n\treturn function * flatten (iterable) {\n\t\t// for some reason yield* doesn't compile in here\n\t\tfor (let subIterable of iterable) yield* subIterable;\n\t};\n}\n\nfunction mapper (mapping) {\n\treturn function * map (iterable) {for (let value of iterable) yield mapping(value);};\n}\n\nfunction filterer (predicate) {\n\treturn function * filter (iterable) {\n\t\tfor (let value of iterable) if (predicate(value)) yield value;\n\t};\n}\n\nfunction taker (n) {\n\treturn function * take (iterable) {\n\t\tlet left = n;\n\t\tfor (let value of iterable) {\n\t\t\tif (left === 0) return;\n\t\t\tleft--; yield value;\n\t\t}\n\t};\n}\n\nfunction dropper (n) {\n\treturn function * drop (iterable) {\n\t\tlet startIn = n;\n\t\tfor (let value of iterable) {\n\t\t\tif (startIn === 0) yield value;\n\t\t\telse startIn--;\n\t\t}\n\t};\n}\n\nfunction windower (size) {\n\treturn function * windows (iterable) {\n\t\tlet window = [];\n\n\t\tfor (let value of iterable) {\n\t\t\twindow.push(value);\n\t\t\tif (window.length === size) {\n\t\t\t\tyield window.slice();\n\t\t\t\twindow.shift();\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction chunker (size) {\n\treturn function * chunk (iterable) {\n\t\tlet group = [];\n\n\t\tfor (let value of iterable) {\n\t\t\tgroup.push(value);\n\t\t\tif (group.length === size) {\n\t\t\t\tyield group;\n\t\t\t\tgroup = [];\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction commoner (otherIterable) {\n\tlet otherItems = new Set(otherIterable);\n\treturn function * common (iterable) {\n\t\tfor (let value of (new Set(iterable))) if (otherItems.has(value)) yield value;\n\t};\n}\n\nfunction zipper (otherIterable) {\n\totherIterable = otherIterable[Symbol.iterator]();\n\treturn function * zip (iterable) {\n\t\tfor (let value of iterable) {\n\t\t\tlet other = otherIterable.next();\n\t\t\tif (other.done) break;\n\t\t\tyield [value, other.value];\n\t\t}\n\t};\n}\n\nfunction appender (otherIterable) {\n\treturn function * append (iterable) {\n\t\tyield* iterable;\n\t\tyield* otherIterable;\n\t};\n}\n\n// Reducer-ers\n\nfunction reducerer (step, initial) {\n\treturn function reduce (iterable) {\n\t\tlet reducedValue = initial;\n\t\tfor (let value of iterable) reducedValue = step(reducedValue, value);\n\t\treturn reducedValue;\n\t};\n}\n\nfunction firster () {\n\treturn function first (iterable) {\n\t\treturn iterable.next().value;\n\t};\n}\n\nfunction finder (predicate) {\n\treturn function find (iterable) {\n\t\tfor (let value of iterable) if (predicate(value)) return value;\n\t};\n}\n\nfunction haser (item) {\n\treturn function has (iterable) {\n\t\tfor (let value of iterable) if (value === item) return true;\n\t};\n}\n\nfunction extremer (mapping) {\n\treturn function extreme (iterable) {\n\t\tlet bestMetric;\n\t\tlet best;\n\t\tlet rest = [];\n\n\t\tfor (let value of iterable) {\n\t\t\tlet metric = mapping(value);\n\t\t\tif (best === undefined || metric > bestMetric) {\n\t\t\t\tif (best !== undefined) rest.push(best);\n\t\t\t\tbest = value;\n\t\t\t\tbestMetric = metric;\n\t\t\t} else rest.push(value);\n\t\t}\n\n\t\treturn {best, bestMetric, rest};\n\t};\n}\n\nfunction maxer (mapping) {\n\treturn function max (iterable) {\n\t\tlet {best, bestMetric: maximum, rest} = extremer(mapping)(iterable);\n\t\treturn {best, max: maximum, rest};\n\t};\n}\n\nfunction miner (mapping) {\n\tlet negativeMapping = (i) => - mapping(i);\n\treturn function min (iterable) {\n\t\tlet {best, bestMetric: negativeMin, rest} = extremer(negativeMapping)(iterable);\n\t\treturn {best, min: -negativeMin, rest};\n\t};\n}\n\nfunction aller (predicate) {\n\treturn function all (iterable) {\n\t\tfor (let value of iterable) if (!predicate(value)) return false;\n\t\treturn true;\n\t};\n}\n\nfunction anyer (predicate) {\n\treturn function  any (iterable) {\n\t\tfor (let value of iterable) if (predicate(value)) return true;\n\t\treturn false;\n\t};\n}\n\nfunction uniquer () {\n\treturn function unique (iterable) {\n\n\t\t//return new Set(iterable);\n\t\tlet s = new Set();\n\t\tfor (let value of iterable) s.add(value);\n\t\treturn s;\n\t};\n}\n\nfunction emptyer () {\n\treturn function empty (iterable) {\n\t\treturn iterable.next().done;\n\t};\n}","import intersect from '../intersections/Intersections';\r\nimport vec2 from '../nd-linalg/Vector2';\r\nimport LineSegment from '../primitives/LineSegment';\r\nimport Curve from '../primitives/Curve';\r\nimport {corner as RectangleCorner} from '../primitives/Rectangle';\r\nimport It from '../iteratorers';\r\nimport { roughlyEqualVec2 } from '../missing-stuff';\r\n\r\nexport default class Path {\r\n\tconstructor (segments, isClockwise, boundingBox) {\r\n\t\tthis.segments = segments === undefined ? [] : segments.slice(0);\r\n\t\tthis.isClockwise = isClockwise === undefined ? orientation(this.segments) : isClockwise;\r\n\t\tthis.boundingBox = boundingBox === undefined ? aabb(this.segments) : boundingBox;\r\n\r\n\t\tthis.segmentOffsets = new Array(this.segments.length);\r\n\t\tvar offset = 0;\r\n\t\tfor (var i = 0; i < this.segments.length; i++) {\r\n\t\t\tthis.segmentOffsets[i] = offset;\r\n\t\t\toffset += this.segments[i].length;\r\n\t\t}\r\n\t\tthis.length = offset;\r\n\t}\r\n\r\n\t//static name = \"Path\";\r\n\r\n\t// Return true if the path is closed and can be considered a shape\r\n\tget isClosed () {\r\n\t\t// console.log('is closed check', this.segments[0].start, this.segments[this.segments.length - 1].end)\r\n\t\treturn\tthis.segments.length > 1\r\n\t\t\t&&\troughlyEqualVec2(this.segments[0].start, this.segments[this.segments.length - 1].end);\r\n\t}\r\n\r\n\tget isCounterClockwise () {return !this.isClockwise}\r\n\tget isContiguous () {\r\n\t\tif (this.segments.length < 2)\r\n\t\t\treturn true;\r\n\r\n\t\tfor (var i = 0; i < this.segments.length - 1; i++) {\r\n\t\t\tvar a = this.segments[i];\r\n\t\t\tvar b = this.segments[i + 1];\r\n\t\t\tif (!roughlyEqualVec2(a.end, b.start))\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tget start () {return this.segments[0].start};\r\n\tget end () {return this.segments[ this.segments.length-1].end};\r\n\r\n\tconcat (path) {return new Path(this.segments.concat(path.segments));}\r\n\r\n\treverse () {\r\n\t\tvar segments = new Array(this.segments.length);\r\n\t\tfor (var i = 0, j = this.segments.length - 1; i < this.segments.length; i++, j--) {\r\n\t\t\tsegments[j] = this.segments[i].reverse();\r\n\t\t}\r\n\t\treturn new Path(segments, !this.isClockwise);\r\n\t}\r\n\r\n\tcut (startOffset, endOffset) {\r\n\t\t//startOffset = startOffset || 0;\r\n\t\t//endOffset = endOffset || this.length;\r\n\t\tvar tolerance = 1e-2;\r\n\r\n\t\tvar firstSegmentToReplace// = this.segments[0];\r\n\t\tvar firstSegmentToReplaceIndex// = 0;\r\n\t\tvar lastSegmentToReplace// = this.segments[ this.segments.length-1];\r\n\t\tvar lastSegmentToReplaceIndex// = this.segments.length - 1;\r\n\r\n\t\tfor (var s = 0; s < this.segments.length; s++) {\r\n\t\t\tvar segmentOffset = this.segmentOffsets[s];\r\n\t\t\tif (segmentOffset < startOffset + tolerance){\r\n\t\t\t\tfirstSegmentToReplaceIndex = s;\r\n\t\t\t\tfirstSegmentToReplace = this.segments[s];\r\n\t\t\t}\r\n\t\t\tif (segmentOffset < endOffset + tolerance) {\r\n\t\t\t\tlastSegmentToReplaceIndex = s;\r\n\t\t\t\tlastSegmentToReplace = this.segments[s];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (firstSegmentToReplace === lastSegmentToReplace) {\r\n\t\t\treturn new Path([new Curve(\r\n\t\t\t\tthis.positionOf(startOffset/*Math.max(0, startOffset)*/),\r\n\t\t\t\tthis.directionOf(startOffset/*Math.max(0, startOffset)*/),\r\n\t\t\t\tthis.positionOf(endOffset/*Math.min(endOffset, this.length)*/)\r\n\t\t\t)]);\r\n\t\t} else {\r\n\t\t\tvar newSegments = this.segments.slice(firstSegmentToReplaceIndex + 1, lastSegmentToReplaceIndex);\r\n\r\n\t\t\tvar newFirstSegment = new Curve(\r\n\t\t\t\tthis.positionOf(startOffset/*Math.max(0, startOffset)*/),\r\n\t\t\t\tthis.directionOf(startOffset/*Math.max(0, startOffset)*/),\r\n\t\t\t\tfirstSegmentToReplace.end\r\n\t\t\t);\r\n\r\n\t\t\tnewSegments.unshift(newFirstSegment);\r\n\r\n\t\t\tvar newLastSegment = new Curve(\r\n\t\t\t\tlastSegmentToReplace.start,\r\n\t\t\t\tlastSegmentToReplace.direction,\r\n\t\t\t\tthis.positionOf(endOffset/*Math.min(endOffset, this.length)*/)\r\n\t\t\t);\r\n\r\n\t\t\tnewSegments.push(newLastSegment);\r\n\r\n\t\t\treturn new Path(newSegments);\r\n\t\t}\r\n\t}\r\n\r\n\tmakeContigous (isLoop) {\r\n\t\tvar newSegments = [];\r\n\r\n\t\tfor (let [segmentA, segmentB] of this.segments.values().windows(2)) {\r\n\t\t\tnewSegments.push(segmentA);\r\n\t\t\tif (!roughlyEqualVec2(segmentA.end, segmentB.start)) {\r\n\t\t\t\tnewSegments.push(new LineSegment(segmentA.end, /*segmentA.endDirection,*/ segmentB.start));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tnewSegments.push(this.segments[ this.segments.length-1]);\r\n\r\n\t\tif (isLoop && !roughlyEqualVec2(this.segments[ this.segments.length-1].end, this.segments[0].start)) {\r\n\t\t\tnewSegments.push(new LineSegment(\r\n\t\t\t\tthis.segments[ this.segments.length-1].end, /*this.segments[ this.segments.length-1].end.endDirection,*/ this.segments[0].start));\r\n\t\t}\r\n\r\n\t\treturn new Path(newSegments);\r\n\t}\r\n\r\n\tsimplifySelfIntersections () {\r\n\t\tvar newSegments = [];\r\n\t\tvar eps = 1/10;\r\n\r\n\t\tvar previousIntersectionPosition;\r\n\r\n\t\tfor (var s = 0; s < this.segments.length; s++) {\r\n\t\t\tvar segment = this.segments[s];\r\n\t\t\tvar foundSelfIntersection = false;\r\n\t\t\tvar intersectionPosition;\r\n\t\t\tvar nextSegmentIndex;\r\n\t\t\tvar otherSegment;\r\n\t\t\tvar offsetOnOtherSegment;\r\n\r\n\t\t\tfor (var o = s + 1; o < this.segments.length + 1; o++) {\r\n\t\t\t\totherSegment = this.segments[o % this.segments.length];\r\n\r\n\t\t\t\tvar intersectionInfos = intersect(segment, otherSegment);\r\n\r\n\t\t\t\tif (intersectionInfos.length > 0) {\r\n\t\t\t\t\tintersectionPosition = intersectionInfos[0].p;\r\n\t\t\t\t\toffsetOnOtherSegment = otherSegment.offsetOf(intersectionPosition);\r\n\r\n\t\t\t\t\tif (offsetOnOtherSegment > eps && offsetOnOtherSegment < otherSegment.length - eps) {\r\n\t\t\t\t\t\t//DebugPoints.add(vec2.toThree(intersectionPosition), 0xff0000, \"si\");\r\n\t\t\t\t\t\tfoundSelfIntersection = true;\r\n\t\t\t\t\t\tnextSegmentIndex = o - 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (previousIntersectionPosition) {\r\n\t\t\t\tvar offsetOfPreviousIntersection = segment.offsetOf(previousIntersectionPosition);\r\n\t\t\t\tvar directionOfPreviousIntersection = segment.directionOf(offsetOfPreviousIntersection);\r\n\r\n\t\t\t\tif (foundSelfIntersection && !roughlyEqualVec2(previousIntersectionPosition, intersectionPosition)) {\r\n\t\t\t\t\tnewSegments.push(new Curve(previousIntersectionPosition, directionOfPreviousIntersection, intersectionPosition));\r\n\t\t\t\t\ts = nextSegmentIndex;\r\n\t\t\t\t\tpreviousIntersectionPosition = intersectionPosition;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnewSegments.push(new Curve(previousIntersectionPosition, directionOfPreviousIntersection, segment.end));\r\n\t\t\t\t\tpreviousIntersectionPosition = undefined;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (foundSelfIntersection) {\r\n\t\t\t\t\tnewSegments.push(new Curve(segment.start, segment.direction, intersectionPosition));\r\n\t\t\t\t\ts = nextSegmentIndex;\r\n\t\t\t\t\tpreviousIntersectionPosition = intersectionPosition;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnewSegments.push(segment);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn new Path(newSegments);\r\n\t}\r\n\r\n\tweld (maxWeldDistance) {\r\n\t\tlet longEnoughSegments = this.segments.filter(s => s.length > maxWeldDistance);\r\n\t\tlet newSegments = [];\r\n\t\tfor (let [segment, nextSegment] of It().windows(2).of(It.concat(longEnoughSegments, [longEnoughSegments[0]])())) {\r\n\t\t\tlet newEnd = segment.end;\r\n\r\n\t\t\tif (roughlyEqualVec2(segment.end, nextSegment.start, maxWeldDistance)) {\r\n\t\t\t\tnewEnd = nextSegment.start;\r\n\t\t\t}\r\n\r\n\t\t\tif (segment.isCurve)\r\n\t\t\t\tnewSegments.push(new Curve(segment.start, segment.direction, newEnd));\r\n\t\t\telse newSegments.push(new LineSegment(segment.start, newEnd));\r\n\t\t}\r\n\t\treturn new Path(newSegments);\r\n\t}\r\n\r\n\tscale (scalar) {\r\n\t\tvar segments = new Array(this.segments.length);\r\n\t\tfor (var i = 0; i < this.segments.length; i++) {\r\n\t\t\tvar each = this.segments[i];\r\n\t\t\tsegments[i] = each.scale(scalar);\r\n\t\t}\r\n\t\treturn new Path(segments, this.isClockwise);\r\n\t}\r\n\r\n\ttranslate (offset) {\r\n\t\tfunction translate(offset) {\r\n\t\t\tvar segments = new Array(this.segments.length);\r\n\t\t\tfor (var i = 0; i < this.segments.length; i++) {\r\n\t\t\t\tvar each = this.segments[i];\r\n\t\t\t\tsegments[i] = each.translate(offset);\r\n\t\t\t}\r\n\t\t\treturn new Path(segments, this.isClockwise);\r\n\t\t}\r\n\t}\r\n\r\n\toffsetPerpendicular (offsetToRight) {\r\n\t\treturn new Path(this.segments.map(function (segment) {\r\n\t\t\treturn segment.offsetPerpendicular(offsetToRight);\r\n\t\t}).filter(segment => segment));\r\n\t}\r\n\r\n\toffsetPerpendicularLength (offsetToRight) {\r\n\t\tvar length = 0;\r\n\t\tfor (var s = 0; s < this.segments.length; s++) {\r\n\t\t\tlength += this.segments[s].offsetPerpendicularLength(offsetToRight);\r\n\t\t}\r\n\t\treturn length;\r\n\t}\r\n\r\n\tmapPerpendicular (offsetA, offsetToRightA, offsetToRightB) {\r\n\t\tvar currentSegment;\r\n\t\tvar currentOffsetA = 0;\r\n\t\tvar currentOffsetB = 0;\r\n\t\tvar tolerance = 1e-2;\r\n\r\n\t\tfor (var s = 0; s < this.segments.length; s++) {\r\n\t\t\tcurrentSegment = this.segments[s];\r\n\t\t\tvar segmentLengthA = currentSegment.offsetPerpendicularLength(offsetToRightA);\r\n\t\t\tvar segmentLengthB = currentSegment.offsetPerpendicularLength(offsetToRightB);\r\n\t\t\tvar nextOffsetA = currentOffsetA + segmentLengthA;\r\n\t\t\tvar nextOffsetB = currentOffsetB + segmentLengthB;\r\n\r\n\t\t\tif (nextOffsetA > offsetA - tolerance) {\r\n\t\t\t\tvar offsetAOnSegment = offsetA - currentOffsetA;\r\n\t\t\t\tvar offsetBOnSegment = currentSegment.mapPerpendicular(offsetAOnSegment, offsetToRightA, offsetToRightB);\r\n\t\t\t\treturn currentOffsetB + offsetBOnSegment;\r\n\t\t\t} else {\r\n\t\t\t\tcurrentOffsetA = nextOffsetA;\r\n\t\t\t\tcurrentOffsetB = nextOffsetB;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t// Return the segments that intersect\r\n\tintersections (b) {\r\n\t\tvar aSegments = this.segments;\r\n\t\tvar bSegments = b.segments;\r\n\t\tvar allIntersections = [];\r\n\t\tfor (var i = 0; i < aSegments.length; i++) {\r\n\t\t\tvar aSegment = aSegments[i];\r\n\t\t\tfor (var j = 0; j < bSegments.length; j++) {\r\n\t\t\t\tvar bSegment = bSegments[j];\r\n\t\t\t\tvar relativeIntersections = intersect(aSegment, bSegment);\r\n\r\n\t\t\t\tfor (var r = 0; r < relativeIntersections.length; r++) {\r\n\t\t\t\t\tvar intersection = relativeIntersections[r];\r\n\r\n\t\t\t\t\t// u,v is meant to be a value between 0,1 - shouldn't they all get scaled?\r\n\t\t\t\t\tintersection.u += i;\r\n\t\t\t\t\tintersection.v += j;\r\n\r\n\t\t\t\t\tallIntersections.push(intersection);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn allIntersections;\r\n\t}\r\n\r\n\t// Use a 'crossings number' to determine if p is inside the path\r\n\tcontainsPoint(p) {\r\n\t\tif (!this.isClosed)\r\n\t\t\treturn false;\r\n\r\n\t\t// Should use an actual Ray here, but the intersections code for\r\n\t\t// Ray-Line, Ray-Curve hasn't been written yet, only Ray-Ray\r\n\t\tvar segments = this.segments,\r\n\t\t\tcrossings = 0,\r\n\t\t\tdegenerate = false,\r\n\t\t\tray = new LineSegment(p, vec2.fromValues(this.boundingBox.right + 1, p[1]));\r\n\t\tfor (var i = 0; i < segments.length; i++) {\r\n\t\t\tvar potentials = intersect(ray, segments[i]);\r\n\t\t\t//console.log(\"containsPoint step\", i + \"/\" + (segments.length - 1), potentials.length);\r\n\r\n\t\t\tfor (var j = 0; j < potentials.length; j++) {\r\n\t\t\t\tif (potentials[j].uIsDegenerate) {\r\n\t\t\t\t\t//console.warn(\"containsPoint uIsDegenerate\", potentials[j]);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\tif (potentials[j].vIsDegenerate) {\r\n\t\t\t\t\tdegenerate = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (degenerate) {\r\n\t\t\t\t// If a point is degenerate, restart the search\r\n\t\t\t\t//console.log(\"containsPoint vIsDegenerate\", potentials[j]);\r\n\t\t\t\ti = -1;\r\n\t\t\t\tcrossings = 0;\r\n\t\t\t\tdegenerate = false;\r\n\t\t\t\t// make the ray longer and rotate it\r\n\t\t\t\tlet alongRayLonger = vec2.sub(vec2(0, 0), ray.end, ray.start);\r\n\t\t\t\tvec2.add(alongRayLonger, alongRayLonger, alongRayLonger);\r\n\t\t\t\tvec2.rotate(alongRayLonger, alongRayLonger, 0.5);\r\n\t\t\t\tvec2.add(ray.end, ray.start, alongRayLonger);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tcrossings += potentials.length;\r\n\t\t}\r\n\t\t//console.log(\"crossings: \" + crossings + \" => contained: \" + ((crossings & 1) == 1));\r\n\t\t//console.canvas(Drawing2D.canvas([this, ray]));\r\n\t\t//console.log(\"containsPoint crossings\", crossings);\r\n\t\treturn (crossings & 1) == 1;\r\n\t}\r\n\r\n\toffsetOf (p, returnInvalid) {\r\n\t\tvar closestSegmentIndex;\r\n\t\tvar closestDistance = Number.POSITIVE_INFINITY;\r\n\t\tvar closestOffset;\r\n\t\tvar closestInvalidOffset;\r\n\t\tvar closestInvalidSegmentIndex;\r\n\t\tvar tolerance = 1e-2;\r\n\r\n\t\tfor (var s = 0; s < this.segments.length; s++) {\r\n\t\t\tvar segment = this.segments[s];\r\n\t\t\tvar closestPoint = segment.closestPointTo(p);\r\n\t\t\tif (closestPoint) {\r\n\t\t\t\tvar distance = vec2.dist(p, closestPoint);\r\n\r\n\t\t\t\tif (distance < closestDistance) {\r\n\t\t\t\t\tvar offset = segment.offsetOf(p);\r\n\t\t\t\t\tif (offset >= -tolerance && offset <= segment.length + tolerance) {\r\n\t\t\t\t\t\tclosestDistance = distance;\r\n\t\t\t\t\t\tclosestSegmentIndex = s;\r\n\t\t\t\t\t\tclosestOffset = offset;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tclosestInvalidOffset = offset;\r\n\t\t\t\t\t\tclosestInvalidSegmentIndex = s\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (closestOffset !== undefined)\r\n\t\t\treturn closestOffset + this.segmentOffsets[closestSegmentIndex];\r\n\t\telse if (returnInvalid)\r\n\t\t\treturn closestInvalidOffset + this.segmentOffsets[closestInvalidSegmentIndex];\r\n\t}\r\n\r\n\tclosestPointTo (p, noEndPoints) {\r\n\t\tvar closestPoint;\r\n\t\tvar closestPointAtEndOfSegment;\r\n\t\tvar closestDistance = Number.POSITIVE_INFINITY;\r\n\t\tvar closestDistanceFromEndOfSegment = Number.POSITIVE_INFINITY;\r\n\t\tvar tolerance = 1e-2;\r\n\r\n\t\tfor (var s = 0; s < this.segments.length; s++) {\r\n\t\t\tvar segment = this.segments[s];\r\n\t\t\tvar closestPointOnSegment = segment.closestPointTo(p);\r\n\t\t\tif (closestPointOnSegment) {\r\n\t\t\t\tvar distance = vec2.dist(p, closestPointOnSegment);\r\n\r\n\t\t\t\tif (distance < closestDistance) {\r\n\t\t\t\t\tclosestDistanceFromEndOfSegment = distance;\r\n\t\t\t\t\tclosestPointAtEndOfSegment = closestPointOnSegment;\r\n\r\n\t\t\t\t\tvar offset = segment.offsetOf(p);\r\n\t\t\t\t\tif (offset >= -tolerance && offset <= segment.length + tolerance) {\r\n\t\t\t\t\t\tclosestDistance = distance;\r\n\t\t\t\t\t\tclosestPoint = closestPointOnSegment;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn closestPoint || (noEndPoints ? undefined : closestPointAtEndOfSegment);\r\n\t}\r\n\r\n\tpositionOf (offset) {\r\n\t\tvar segmentWithPoint = this.segments[0];\r\n\t\tvar segmentWithPointOffset = 0;\r\n\r\n\t\tfor (var s = 0; s < this.segments.length; s++) {\r\n\t\t\tif (this.segmentOffsets[s] > offset)\r\n\t\t\t\tbreak;\r\n\t\t\tif (this.segmentOffsets[s] < offset) {\r\n\t\t\t\tsegmentWithPoint = this.segments[s];\r\n\t\t\t\tsegmentWithPointOffset = this.segmentOffsets[s];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn segmentWithPoint.positionOf(offset - segmentWithPointOffset);\r\n\t}\r\n\r\n\tdirectionOf (offset) {\r\n\t\tvar segmentToUse;\r\n\t\tvar segmentOffset;\r\n\r\n\t\tfor (var s = 0; s < this.segments.length; s++) {\r\n\t\t\tif (this.segmentOffsets[s] > offset) {\r\n\t\t\t\tsegmentToUse = this.segments[s - 1];\r\n\t\t\t\tsegmentOffset = this.segmentOffsets[s - 1];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!segmentToUse) {\r\n\t\t\tsegmentToUse = this.segments[ this.segments.length-1];\r\n\t\t\tsegmentOffset = this.segmentOffsets.last();\r\n\t\t}\r\n\r\n\t\treturn segmentToUse.directionOf(offset - segmentOffset);\r\n\t}\r\n\r\n\tstatic packedSize (path) {\r\n\t\treturn path.segments.length * 2 * 3 * BinaryTypes.getByteSize(\"FloatLE\");\r\n\t}\r\n\r\n\tstatic pack (path, buffer, offset, maxSize) {\r\n\t\tlet fSize = BinaryTypes.getByteSize(\"FloatLE\");\r\n\r\n\t\tfor (let segment of path.segments) {\r\n\t\t\tbuffer.writeFloatLE(segment.start[0]); offset += fSize;\r\n\t\t\tbuffer.writeFloatLE(segment.start[1]); offset += fSize;\r\n\r\n\t\t\tbuffer.writeFloatLE(segment.direction[0]); offset += fSize;\r\n\t\t\tbuffer.writeFloatLE(segment.direction[1]); offset += fSize;\r\n\r\n\t\t\tbuffer.writeFloatLE(segment.end[0]); offset += fSize;\r\n\t\t\tbuffer.writeFloatLE(segment.end[1]); offset += fSize;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic unpack (buffer, offset, size) {\r\n\t\tlet nSegments = size / (2 * 3 * BinaryTypes.getByteSize(\"FloatLE\"));\r\n\t\tlet segments = new Array(nSegments);\r\n\t\tlet fSize = BinaryTypes.getByteSize(\"FloatLE\");\r\n\r\n\t\tfor (let i = 0; i < nSegments; i++) {\r\n\t\t\tlet startX = buffer.readFloatLE(offset); offset += fSize;\r\n\t\t\tlet startY = buffer.readFloatLE(offset); offset += fSize;\r\n\t\t\tlet directionX = buffer.readFloatLE(offset); offset += fSize;\r\n\t\t\tlet directionY = buffer.readFloatLE(offset); offset += fSize;\r\n\t\t\tlet endX = buffer.readFloatLE(offset); offset += fSize;\r\n\t\t\tlet endY = buffer.readFloatLE(offset); offset += fSize;\r\n\r\n\t\t\tsegments[i] = new Curve(\r\n\t\t\t\tvec2(startX, startY), vec2(directionX, directionY), vec2(endX, endY)\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn new Path(segments);\r\n\t}\r\n\r\n\tdump () {\r\n\t\tconsole.log(\"path dump\");\r\n\t\tfor (var i = 0; i < this.segments.length; i++) {\r\n\t\t\tvar segment = this.segments[i];\r\n\t\t\tconsole.log(\r\n\t\t\t\t\"\\t\" + (i + 1) + \"/\" + this.segments.length,\r\n\t\t\t\tsegment.type.typeName,\r\n\t\t\t\tsegment.start[0] + \", \" + segment.start[1],\r\n\t\t\t\t\"to\",\r\n\t\t\t\tsegment.end[0] + \", \" + segment.end[1]);\r\n\t\t}\r\n\t}\r\n\r\n\tget debug () {\r\n\t\tDebugPaths.add(this, 0x0000ff, \"debug\", 0, 1);\r\n\t\treturn \"shown\";\r\n\t}\r\n\r\n\tvertices (offsetToRight, minPointDistance) {\r\n\t\tvar vertices = [];\r\n\t\tvar lastVertex;\r\n\r\n\t\tfor (var s = 0; s < this.segments.length; s++) {\r\n\t\t\tvar segment = this.segments[s];\r\n\t\t\tvar segmentVertices = segment.vertices(offsetToRight);\r\n\r\n\t\t\tfor (var v = 0; v < segmentVertices.length; v++) {\r\n\t\t\t\tvar vertex = segmentVertices[v];\r\n\r\n\t\t\t\tif (!minPointDistance || !lastVertex || vec2.dist(lastVertex, vertex) > minPointDistance)\r\n\t\t\t\t\tvertices.push(vertex);\r\n\r\n\t\t\t\tlastVertex = vertex;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (minPointDistance && this.isClosed) vertices.pop();\r\n\r\n\t\treturn vertices;\r\n\t}\r\n\r\n\tuvs (offsetToRight, multiplierAlongPath) {\r\n\t\tvar uvs = [];\r\n\r\n\t\tfor (var s = 0; s < this.segments.length; s++) {\r\n\t\t\tvar segment = this.segments[s];\r\n\t\t\tvar segmentOffset = this.segmentOffsets[s];\r\n\r\n\t\t\tuvs = uvs.concat(segment.uvs(\r\n\t\t\t\toffsetToRight, multiplierAlongPath\r\n\t\t\t).map(function (uv) {\r\n\t\t\t\tuv[0] += segmentOffset * multiplierAlongPath;\r\n\t\t\t\treturn uv;\r\n\t\t\t}));\r\n\t\t}\r\n\r\n\t\treturn uvs;\r\n\t}\r\n\r\n\tdraw (context) {\r\n\t\tconst DEBUG_DRAW_JOINTS = false;\r\n\t\tif (!this.segments.length) return;\r\n\r\n\t\tcontext.stroke(this);\r\n\r\n\t\tif (!DEBUG_DRAW_JOINTS) return;\r\n\t\tcontext.dot(this.segments[0].start);\r\n\t\tfor (let segment of this.segments) {\r\n\t\t\tcontext.dot(segment.end);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// For an array of segments, determine if they are clockwise or counter-clockwise\r\nfunction orientation(segments) {\r\n\tvar sum = 0;\r\n\tfor (var i = 0; i < segments.length; i++) {\r\n\t\tvar segment = segments[i],\r\n\t\t\tdx = segment.end[0] - segment.start[0],\r\n\t\t\tdy = segment.end[1] + segment.start[1];\r\n\t\tsum += dx * dy;\r\n\t}\r\n\treturn sum > 0;\r\n}\r\n\r\n// Find the boundingBox for an array of segments\r\nvar MAX_VALUE = Number.MAX_VALUE,\r\n\tMIN_VALUE = Number.MIN_VALUE;\r\nfunction aabb(segments) {\r\n\tvar origin = vec2.fromValues(MAX_VALUE, MAX_VALUE),\r\n\t\tcorner = vec2.fromValues(MIN_VALUE, MIN_VALUE);\r\n\tfor (var i = 0; i < segments.length; i++) {\r\n\t\tvar segment = segments[i];\r\n\t\tvar bb = segment.boundingBox;\r\n\t\torigin[0] = Math.min(origin[0], bb.origin[0]);\r\n\t\torigin[1] = Math.min(origin[1], bb.origin[1]);\r\n\t\tcorner[0] = Math.max(corner[0], bb.corner[0]);\r\n\t\tcorner[1] = Math.max(corner[1], bb.corner[1]);\r\n\t}\r\n\treturn RectangleCorner(origin, corner);\r\n}","import vec2 from '../nd-linalg/Vector2';\r\nimport Path from '../shapes/Path';\r\nimport LineSegment from '../primitives/LineSegment';\r\nimport Curve from '../primitives/Curve';\r\n\r\nexport default function Pather(start) {\r\n\tthis.current = start || vec2.fromValues(0, 0);\r\n\tthis.direction = null;\r\n\tthis.segments = [];\r\n\tthis.orientation = 0;\r\n}\r\n\r\nObject.defineProperties(Pather.prototype, {\r\n\t\"name\":\t\t\t\t\t{value: \"Pather\"},\r\n\t\"path\": \t\t\t\t{get: toPath},\r\n\t\"isClockwise\": \t\t\t{get: isClockwise},\r\n\t\"isCounterClockwise\": \t{get: isCounterClockwise},\r\n\r\n\t\"append\": \t\t\t\t{value: append},\r\n\t\"moveTo\": \t\t\t\t{value: moveTo},\r\n\t\"lineTo\": \t\t\t\t{value: lineTo},\r\n\t\"curveTo\": \t\t\t\t{value: curveTo},\r\n\t\"close\": \t\t\t\t{value: close},\r\n\r\n\t\"scale\": \t\t\t\t{value: scale},\r\n\t\"translate\": \t\t\t{value: translate}\r\n});\r\n\r\nfunction toPath() {\r\n\treturn new Path(this.segments, this.isClockwise);\r\n}\r\n\r\nfunction isClockwise() {\r\n\treturn this.orientation > 0;\r\n}\r\n\r\nfunction isCounterClockwise() {\r\n\treturn !this.isClockwise;\r\n}\r\n\r\nfunction append(pather) {\r\n\tif (!pather.segments.length) return;\r\n\tthis.segments = this.segments.concat(pather.segments);\r\n\tthis.current = this.segments[this.segments.length - 1].end;\r\n\tthis.direction = pather.direction;\r\n\tthis.orientation += pather.orientation\r\n\treturn this;\r\n}\r\n\r\nfunction moveTo(position) {\r\n\tthis.current = position;\r\n\tthis.direction = null;\r\n\treturn this;\r\n}\r\n\r\nfunction lineTo(position) {\r\n\tvar line = new LineSegment(this.current, position);\r\n\tthis.segments.push(line);\r\n\tthis.current = line.end;\r\n\tthis.direction = line.direction;\r\n\tupdateOrientation(this);\r\n\treturn this;\r\n}\r\n\r\nfunction curveTo(position, direction) {\r\n\tfunction NoDirection() { throw \"Direction required if no existing segments\"; }\r\n\tvar curve = new Curve(this.current, direction || this.direction || NoDirection(), position);\r\n\tthis.segments.push(curve);\r\n\tthis.current = curve.end;\r\n\tthis.direction = curve.endDirection;\r\n\tupdateOrientation(this);\r\n\treturn this;\r\n}\r\n\r\nfunction close() {\r\n\tif (!this.segments.length)\r\n\t\tthrow \"Cannot close an empty path\";\r\n\tif (this.path.isClosed)\r\n\t\treturn this.path;\r\n\r\n\tvar line = new LineSegment(this.current, this.segments[0].start);\r\n\tthis.segments.push(line);\r\n\tthis.current = line.end;\r\n\tthis.direction = line.direction;\r\n\tupdateOrientation(this);\r\n\r\n\t// console.log('after closing',this.path.isClosed );\r\n\r\n\treturn this.path;\r\n}\r\n\r\nfunction scale(scale) {\r\n\treturn this.path.scale(scale);\r\n}\r\n\r\nfunction translate(offset) {\r\n\treturn this.path.translate(offset);\r\n}\r\n\r\nfunction updateOrientation(pather) {\r\n\tvar segment = pather.segments[pather.segments.length - 1],\r\n\t\tdx = segment.end[0] - segment.start[0],\r\n\t\tdy = segment.end[1] + segment.start[1];\r\n\tpather.orientation += dx * dy;\r\n}\r\n","/* TODO\r\n * Curves\r\n\t1) For curves that are shrinking, only a wavefront that is within its original\r\n\t\tcircle can have a collision event with it\r\n\t2) For curves that are expanding, all vertices have a potential future event\r\n\t\twith the circle? can we limit this some how to only !acute vertices?\r\n\t3) A shrinking curve can collapse in on itself (radius=0)\r\n * Order the pathways from the center outward, return an array of paths rather than\r\n *   haphazard segments, building them up from outside in, merging as it intersects\r\n *\r\n * Find the center line:\r\n *  1) Find the longest spoke-tospoke\r\n *  2) Remove tiny segments\r\n *  3) Remove the first and last segment\r\n *  4) Extent the first and last segment to intersect the nearest original edge\r\n */\r\n\r\nimport vec2 from '../nd-linalg/Vector2';\r\nimport vec3 from '../nd-linalg/Vector3';\r\nimport LineSegment from '../primitives/LineSegment';\r\nimport * as SkeletonEdge from './SkeletonEdge';\r\nimport SkeletonWavefront from './SkeletonWavefront';\r\nimport Pather from '../../es6/helpers/Pather';\r\nimport Ray from '../primitives/Ray';\r\nimport Line from '../primitives/Line';\r\nimport intersect from '../intersections/Intersections';\r\n\r\nvar DeadEdge = Symbol(\"DeadEdge\");\r\nvar infinity = Infinity;\r\nexport default class StraightSkeleton {\r\n\tconstructor(path, length, options) {\r\n\t\toptions = options || {};\r\n\t\tthis.length = length || infinity;\r\n\t\tthis.spokes = [];\r\n\t\tthis.waves = [];\r\n\r\n\t\tthis.DEBUG_DRAW_INITIAL = options.DEBUG_DRAW_INITIAL || false;\r\n\t\tthis.DEBUG_DRAW_SKIPPED_EVENTS = options.DEBUG_DRAW_SKIPPED_EVENTS || false;\r\n\t\tthis.DEBUG_DRAW_STEPS = options.DEBUG_DRAW_STEPS || false;\r\n\t\tthis.DEBUG_DRAW_MOVE = options.DEBUG_DRAW_MOVE || this.DEBUG_DRAW_STEPS;\r\n\t\tthis.DEBUG_DRAW_OBTUSE_EVENTS_EACH_STEP = options.DEBUG_DRAW_OBTUSE_EVENTS_EACH_STEP || false;\r\n\r\n\t\tif (\"capWeight\" in options) {\r\n\t\t\tlet startDirection = vec2.scale(vec2(0, 0), path.segments[0].direction, -1),\r\n\t\t\t\tstartNormal = [-startDirection[1], startDirection[0]],\r\n\t\t\t\tendDirection = path.segments[path.segments.length - 1].direction,\r\n\t\t\t\tendNormal = [-endDirection[1], endDirection[0]];\r\n\r\n\t\t\tlet a = vec2.lerp(vec2(0, 0), startDirection, startNormal, 1 - options.capWeight);\r\n\t\t\tlet b = vec2.lerp(vec2(0, 0), startDirection, startNormal, options.capWeight);\r\n\t\t\tlet c = vec2.lerp(vec2(0, 0), endDirection, endNormal, 1 - options.capWeight);\r\n\t\t\tlet d = vec2.lerp(vec2(0, 0), endDirection, endNormal, options.capWeight);\r\n\r\n\t\t\tthis.caps = [\r\n\t\t\t\tnew Ray(path.start, [b[1], -b[0]]),\r\n\t\t\t\tnew Ray(path.start, a),\r\n\r\n\t\t\t\tnew Ray(path.end, [d[1], -d[0]]),\r\n\t\t\t\tnew Ray(path.end, c),\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\tthis.wavefronts = SkeletonEdge\r\n\t\t\t.create(path, this.length === infinity, this.cap)\r\n\t\t\t.map(each => new SkeletonWavefront(this, each, 0).initialise());\r\n\r\n\t\t//this.process();\r\n\t\toptions.DEBUG ? this.debugprocess() : this.process();\r\n\t}\r\n\r\n\tget name() { return \"StraightSkeleton\"; }\r\n\r\n\tprocess() {\r\n\t\twhile(this.wavefronts.length > 0) {\r\n\t\t\tlet wavefront = this.wavefronts[0];\r\n\t\t\tif (!wavefront.process(this.length)) {\r\n\t\t\t\t// if (this.length === infinity) throw \"EventsExhaustedPrematurely\";\r\n\t\t\t\tthis.commitWavefront(wavefront);\r\n\t\t\t\twavefront.remove();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tdebugprocess() {\r\n\t\twhile(this.wavefronts.length > 0) {\r\n\t\t\tlet wavefront = this.wavefronts[0];\r\n\t\t\tif (!wavefront.debugprocess(this.length)) {\r\n\t\t\t\tif (this.length === infinity) throw \"EventsExhaustedPrematurely\";\r\n\t\t\t\tthis.commitWavefront(wavefront);\r\n\t\t\t\twavefront.remove();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\taddWavefront(wavefront) {\r\n\t\tthis.wavefronts.push(wavefront);\r\n\t}\r\n\r\n\tremoveWavefront(wavefront) {\r\n\t\tthis.wavefronts.splice(this.wavefronts.indexOf(wavefront), 1);\r\n\t}\r\n\r\n\tcommitSkeletonSpoke(start, end) {\r\n\t\tthis.spokes.push(new LineSegment(vec3.clone(start), vec3.clone(end)));\r\n\t}\r\n\r\n\tcommitSkeletonVertex(vertex) {\r\n\t\tlet beginning = vec3(vertex.position[0], vertex.position[1], vertex.wavefront.time);\r\n\t\tthis.commitSkeletonSpoke(vertex.beginning, beginning);\r\n\t\tvertex.beginning = beginning;\r\n\t}\r\n\r\n\tcommitWavefront(wavefront) {\r\n\t\tfor (let edge of wavefront.root)\r\n\t\t\tthis.commitSkeletonVertex(edge.start);\r\n\r\n\t\tif (!(\"caps\" in this))\r\n\t\t\treturn this.commitFullWavefront(wavefront);\r\n\r\n\t\t// Find all the caps\r\n\t\tlet caps = [];\r\n\t\tfor (let edge of wavefront.root)\r\n\t\t\tif (edge.isCap) caps.push(edge);\r\n\r\n\t\tif (caps.length === 0)\r\n\t\t\treturn this.commitFullWavefront(wavefront);\r\n\r\n\t\t// iterate forward, then backward, marking edges as 'dead' until one\r\n\t\t// intersects the cut, which gets split at the cutting point, or another\r\n\t\t// cap is reached\r\n\t\tfor (let cap of caps) {\r\n\t\t\tlet cut = cap.side === SkeletonEdge.StartCapEdge ? this.caps[0] : this.caps[2];\r\n\t\t\tlet current = cap;\r\n\t\t\tlet dead = [];\r\n\t\t\twhile(true) {\r\n\t\t\t\tlet intersections = intersect(current.segment, cut);\r\n\t\t\t\tif (intersections.length !== 0) {\r\n\t\t\t\t\tcurrent.cutsegment = new LineSegment(intersections[0].p, (current.cutsegment || current.segment).end);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!current.isCap) current.side = DeadEdge;\r\n\t\t\t\tdead.push(current);\r\n\r\n\t\t\t\tcurrent = current.next;\r\n\t\t\t\tif (current.isCap) break;\r\n\t\t\t}\r\n\r\n\t\t\tcut = cap.side === SkeletonEdge.EndCapEdge ? this.caps[3] : this.caps[1];\r\n\t\t\tcurrent = cap;\r\n\t\t\tdead = [];\r\n\t\t\twhile(true) {\r\n\t\t\t\tlet intersections = intersect(current.segment, cut);\r\n\t\t\t\tif (intersections.length !== 0) {\r\n\t\t\t\t\tif (current.cutsegment) current.cutreverse = true;\r\n\t\t\t\t\tcurrent.cutsegment = new LineSegment((current.cutsegment || current.segment).start, intersections[0].p);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!current.isCap) current.side = DeadEdge;\r\n\t\t\t\tdead.push(current);\r\n\r\n\t\t\t\tcurrent = current.previous;\r\n\t\t\t\tif (current.isCap) break;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let cap of caps)\r\n\t\t\tif (!cap.cutsegment)\r\n\t\t\t\tcap.side = DeadEdge;\r\n\r\n\t\tthis.commitFullWavefront(wavefront);\r\n\t}\r\n\r\n\tcommitFullWavefront(wavefront) {\r\n\t\tlet side = null, pather = null, segment = null;\r\n\t\tvar commit = () => {\r\n\t\t\tif (pather && side !== DeadEdge)\r\n\t\t\t\tthis.waves.push({\"path\": pather.path, \"side\": side});\r\n\t\t};\r\n\r\n\t\tfor (let edge of wavefront.root) {\r\n\t\t\tsegment = edge.cutsegment || edge.segment;\r\n\t\t\tif (side !== edge.side) {\r\n\t\t\t\tcommit();\r\n\t\t\t\tside = edge.side;\r\n\t\t\t\tpather = new Pather();\r\n\r\n\t\t\t\tif (edge.cutreverse) {\r\n\t\t\t\t\tpather.moveTo(vec2.clone(edge.start.position));\r\n\t\t\t\t\tpather.lineTo(vec2.clone(edge.cutsegment.end));\r\n\t\t\t\t\tcommit();\r\n\t\t\t\t\tpather = new Pather();\r\n\t\t\t\t\tpather.moveTo(vec2.clone(edge.cutsegment.start));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpather.moveTo(vec2.clone(segment.start));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (edge.cutreverse) {\r\n\t\t\t\tpather.lineTo(vec2.clone(edge.segment.end));\r\n\t\t\t} else {\r\n\t\t\t\tpather.lineTo(vec2.clone(segment.end));\r\n\t\t\t}\r\n\t\t}\r\n\t\tcommit();\r\n\t}\r\n\r\n\tdraw(context) {\r\n\t\tfor (let wavefront of this.wavefronts)\r\n\t\t\twavefront.draw(context);\r\n\t\tfor (let spoke of this.spokes)\r\n\t\t\tspoke.draw(context);\r\n\t}\r\n}\r\n","import * as THREE from 'three';\r\nimport { ROUGHLY_EPSILON } from '../missing-stuff';\r\nimport vec3 from '../nd-linalg/Vector3';\r\n\r\nimport cdt2d from 'cdt2d';\r\nimport cleanPSLG from 'clean-pslg';\r\n\r\nexport default Shape;\r\n\r\nfunction Shape(contourPath, holes) {\r\n\tthis.contour = contourPath;\r\n\tthis.holes = holes || [];\r\n}\r\n\r\nObject.defineProperties(Shape.prototype, {\r\n\t\"contains\": {value: contains},\r\n\t\"union\": {value: union},\r\n\t\"difference\": {value: difference},\r\n\t\"intersection\": {value: intersection},\r\n\t\"not\": {value: not},\r\n\t\"triangulate\": {value: triangulate},\r\n\t\"area\": {value: area},\r\n\t\"split\": {value: split},\r\n\t\"grow\": {value: grow},\r\n\t\"growWithSkeleton\": {value: growWithSkeleton}\r\n});\r\n\r\nfunction contains(otherShape) {\r\n\tvar intersects = this.contour.intersections(otherShape.contour).length === 0;\r\n\tif (intersects) return false;\r\n\r\n\tfor (var point of otherShape.contour.segments.map(s => s.start)) {\r\n\t\tif (!this.contour.containsPoint(point)) return false;\r\n\t}\r\n\r\n\treturn true;\r\n}\r\n\r\nfunction union(otherShape) {\r\n\r\n}\r\n\r\nfunction difference(otherShape, clipGrowthOffset) {\r\n\tif (otherShape.contains(this)) return [];\r\n\tvar difference = Clipper.difference(this.contour, otherShape.grow(clipGrowthOffset).contour);\r\n\treturn difference.map(contour => new Shape(contour));\r\n}\r\n\r\nfunction intersection(otherShape) {\r\n\r\n}\r\n\r\nfunction not(otherShape) {\r\n\r\n}\r\n\r\nfunction validate( vec ){\r\n\tif( isNaN( vec[ 0 ] ) || isNaN( vec[ 1 ] ) ){\r\n\t\treturn false;\r\n\t}\r\n\tif( vec[ 0 ] === Infinity || vec[ 1 ] === Infinity ){\r\n\t\treturn false;\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction triangulate(minVertexDistance = 0.00001) {\r\n\tconst geometry = new THREE.Geometry();\r\n\r\n\tconst points = [];\r\n\tconst edges = [];\r\n\r\n\tconst vertices = [];\r\n\r\n\tlet count = 0;\r\n\tthis.contour.segments.forEach( function( {start, end}, index ){\r\n\t\tif( validate( start ) && validate( end ) ){\r\n\t\t\tvertices.push( start, end );\r\n\t\t\tpoints.push( [start[0], start[1]], [end[0], end[1]] );\r\n\t\t\tedges.push( [count * 2, count * 2 + 1] );\r\n\t\t\tcount++;\r\n\t\t}\r\n\t});\r\n\r\n\tconst precision = 8;\r\n\t//\tpreserve z-axis data...\r\n\tconst zs = {};\r\n\tvertices.forEach( function( [x,y,z] ){\r\n\t\tif( z === undefined ){\r\n\t\t\tz = 0;\r\n\t\t}\r\n\t\tzs[ x.toFixed( precision )+'_'+y.toFixed( precision ) ] = z;\r\n\t});\r\n\r\n\t//\tclean up skeleton + contour because it's not a valid edge loop\r\n\tcleanPSLG( points, edges );\r\n\r\n\tconst triangulation = cdt2d( points, edges, {exterior:false, delaunay:true} );\r\n\r\n\tconst points3D = points.map( function( [x,y] ){\r\n\t\tconst key = x.toFixed( precision )+'_'+y.toFixed( precision );\r\n\t\tconst z = zs[key];\r\n\t\tif( z === undefined ){\r\n\t\t\tconsole.warn('z not found', x, y, zs );\r\n\t\t\treturn [ x,y,0 ];\r\n\t\t}\r\n\t\treturn [x,y,z];\r\n\t});\r\n\r\n\t// console.log( zs, points3D );\r\n\r\n\tgeometry.vertices = points3D.map( function( [x,y,z] ){\r\n\t\treturn new THREE.Vector3( x,y,z );\r\n\t});\r\n\r\n\tgeometry.faces = triangulation.map( function( [ix, iy, iz] ){\r\n\t\treturn new THREE.Face3( ix, iy, iz );\r\n\t});\r\n\r\n\treturn geometry;\r\n}\r\n\r\n// function triangulate2(minVertexDistance = 0.00001) {\r\n// \tvar geometry = new THREE.Geometry();\r\n\r\n// \tconst vs = this.contour.vertices(0, minVertexDistance);\r\n\r\n// \t//\tTODO / FIXME\r\n// \t//\tthis is pretty awful, find a more elegant solution...\r\n// \tconst unique = [];\r\n// \tfor( let i=0; i<vs.length; i++ ){\r\n// \t\tconst vertex = vs[ i ];\r\n\r\n// \t\tlet found = false;\r\n// \t\tfor( let s=0; s<unique.length; s++ ){\r\n// \t\t\tif( vec3.dist( unique[ s ], vertex ) < minVertexDistance ){\r\n// \t\t\t\tfound = true;\r\n// \t\t\t\tbreak;\r\n// \t\t\t}\r\n// \t\t}\r\n\r\n// \t\tif( !found ){\r\n// \t\t\tunique.push( vertex );\r\n// \t\t}\r\n// \t}\r\n\r\n// \tconsole.log( unique );\r\n\r\n// \tconst vertices = unique.reduce( function( collection, vertex ){\r\n// \t\tconst z = vertex[2] !== undefined ? vertex[2] : 0;\r\n// \t\tcollection.push( vertex[0], vertex[1], z );\r\n// \t\treturn collection;\r\n// \t}, [] );\r\n\r\n// \t// console.log(vertices);\r\n\r\n// \tvar triangulation = earcut( vertices, null, 3 );\r\n// \tconsole.log(triangulation);\r\n\r\n// \tfor (var i = 0; i < triangulation.length; i +=3){\r\n// \t\tconst ia = triangulation[ i ] * 3;\r\n// \t\tconst ib = triangulation[ i + 1 ] * 3;\r\n// \t\tconst ic = triangulation[ i + 2 ] * 3;\r\n\r\n// \t\tconst va = new THREE.Vector3( vertices[ia], vertices[ia+1], vertices[ia+2] );\r\n// \t\tconst vb = new THREE.Vector3( vertices[ib], vertices[ib+1], vertices[ib+2] );\r\n// \t\tconst vc = new THREE.Vector3( vertices[ic], vertices[ic+1], vertices[ic+2] );\r\n\r\n// \t\tgeometry.vertices.push( va, vb, vc );\r\n// \t\tgeometry.faces.push( new THREE.Face3( i, i+1, i+2 ) );\r\n\r\n// \t\t// console.log( i, va, i+1, vb, i+2, vc );\r\n// \t}\r\n\r\n// \t// console.log( geometry.vertices );\r\n\r\n// \treturn geometry;\r\n// }\r\n\r\nfunction area() {\r\n\tvar vertices = earcut([this.contour.vertices(0, 1)]);\r\n\r\n\tvar area = 0;\r\n\tvar side1 = vec2(0, 0);\r\n\tvar side2 = vec2(0, 0);\r\n\r\n\tfor (var t = 0; t < vertices.length; t += 3) {\r\n\t\tvec2.sub(side1, vertices[t + 1], vertices[t]);\r\n\t\tvec2.sub(side2, vertices[t + 2], vertices[t]);\r\n\t\tarea += 0.5 * Math.abs(vec2.crossz(side1, side2));\r\n\t}\r\n\r\n\treturn area;\r\n}\r\n\r\nfunction split(splittingBiRay) {\r\n\t// TODO faking it by intersecting the shape with two really large boxes on either side of the biray\r\n\t// TODO doesn't handle split resulting in more than 2 shapes\r\n\tvar boxSize = 1000;\r\n\tvar perpendicularDirection = vec2.perpendicular(vec2(0, 0), splittingBiRay.direction);\r\n\r\n\tvar box1 = (new Pather())\r\n\t\t.lineTo(splittingBiRay.direction)\r\n\t\t.lineTo(vec2.add(vec2(0, 0), splittingBiRay.direction, perpendicularDirection))\r\n\t\t.lineTo(vec2.sub(vec2(0, 0), perpendicularDirection, splittingBiRay.direction))\r\n\t\t.lineTo(vec2.negate(vec2(0, 0), splittingBiRay.direction))\r\n\t\t.close()\r\n\t\t.scale(boxSize)\r\n\t\t.translate(splittingBiRay.middle);\r\n\r\n\tvar box2 = box1.translate(vec2.scale(vec2(0, 0), perpendicularDirection, -boxSize));\r\n\r\n\tvar results = [\r\n\t\tClipper.intersection(this.contour, box1)[0],\r\n\t\tClipper.intersection(this.contour, box2)[0]\r\n\t].filter(c => c).map(c => new Shape(c));\r\n\r\n\tfor (var shape of results) {\r\n\t\tif (!shape.contour.isClosed) {\r\n\t\t\tDebugPaths.add(box1, 0x00ff00, \"splitfail\", 0, 2);\r\n\t\t\tDebugPaths.add(this.contour, 0x00ffff, \"splitfail\", 0, 4);\r\n\t\t\tDebugPaths.add(shape.contour, 0xff00ff, \"splitfail\", 0, 4);\r\n\t\t\tthrow(\"splitfail\");\r\n\t\t}\r\n\t}\r\n\r\n\treturn results;\r\n}\r\n\r\nfunction grow (amount) {\r\n\r\n\r\n\t//var offsetContour = this.contour.offsetPerpendicular(this.contour.isCounterClockwise ? amount : -amount);\r\n\t//DebugPaths.add(offsetContour, 0xffffff, \"grow\", 0, 1);\r\n\t//offsetContour = offsetContour.makeContiguous(true);\r\n\t//DebugPaths.add(offsetContour, 0x888888, \"grow\", 0, 1.5);\r\n\t//offsetContour = offsetContour.simplifySelfIntersections();\r\n\t//DebugPaths.add(offsetContour, 0x8800ff, \"grow\", 0, 2);\r\n\treturn new Shape(offsetContour);\r\n}\r\n\r\nfunction growWithSkeleton (amount) {\r\n\tvar skeleton = new Skeleton(amount > 0 ? this.contour : this.contour.reverse(), Math.abs(amount));\r\n\treturn new Shape(skeleton.waves[0].path);\r\n}","// require(\"babel-core/register\")({\r\n// \tblacklist: ['regenerator', 'es6.forOf'],\r\n// \toptional: ['es7.classProperties']\r\n// });\r\n\r\n// import Clipper from './es6/clipper/clipper';\r\n// import Intersections from './es6/intersections/Intersections';\r\n// import PathCollisionCollection from './es6/shapes/PathCollisionCollection';\r\n\r\nimport * as BabelPolyfill from 'babel-polyfill';\r\n\r\nimport Skeleton from './skeleton/Skeleton';\r\n// import Circle from './es6/primitives/Circle';\r\n// import Curve from './es6/primitives/Curve';\r\n// import Line from './es6/primitives/Line';\r\n// import LineSegment from './es6/primitives/LineSegment';\r\n// import Ray from './es6/primitives/Ray';\r\n// import Rectangle from './es6/primitives/Rectangle';\r\n// import Triangle from './es6/primitives/Triangle';\r\nimport Path from './shapes/Path';\r\nimport Pather from './helpers/Pather';\r\nimport Shape from './shapes/Shape';\r\n// import Stroke from './es6/shapes/Stroke';\r\n\r\nconst out = {\r\n\tSkeleton,\r\n\tshapes: {\r\n\t\tPath, Pather, Shape\r\n\t}\r\n};\r\n\r\nmodule.exports = out;\r\n\r\n// module.exports = {\r\n// \tClipper: require('./es6/clipper/Clipper'),\r\n// \tIntersections: require('./es6/intersections/Intersections').default,\r\n// \tPathCollisionCollection: require('./es6/shapes/PathCollisionCollection'),\r\n// \tSkeleton: require('./es6/skeleton/Skeleton').default,\r\n// \tprimitives: {\r\n// \t\tCircle: require('./es6/primitives/Circle'),\r\n// \t\tCurve: require('./es6/primitives/Curve'),\r\n// \t\tLine: require('./es6/primitives/Line'),\r\n// \t\tLineSegment: require('./es6/primitives/LineSegment'),\r\n// \t\tRay: require('./es6/primitives/Ray'),\r\n// \t\tRectangle: require('./es6/primitives/Rectangle'),\r\n// \t\tTriangle: require('./es6/primitives/Triangle')\r\n// \t},\r\n// \tshapes: {\r\n// \t\tPath: require('./es6/shapes/Path').default,\r\n// \t\tPather: require('./es6/helpers/Pather').default,\r\n// \t\tShape: require('./es6/shapes/Shape').default,\r\n// \t\tStroke: require('./es6/shapes/Stroke').default\r\n// \t},\r\n// \tDrawing2D: require('./es6/drawing/Drawing2D')\r\n// };"],"names":["Mathmin","Math","min","Mathmax","max","Mathabs","abs","ROUGHLY_EPSILON","clamp","number","between","roughlyEqual","other","epsilon","roughlyEqualVec2","a","b","roughlyBetween","isRoughly","assert","condition","message","VectorFactory","cb","map","inverse","negate","sum","reduce","average","apply","scalar","length","dot","squaredLength","wellFormed","squaredDistance","distance","scaleAndAdd","c","lerp","set","args","out","each","operation","op","normalize","zero","scalingLength","phi","isRoughlyVec","Object","defineProperties","value","SourceWriter","depth","string","last","storemode","newlinemode","prototype","write","line","trace","error","writeln","writeTabs","tab","untab","forloop","indexVariable","lengthVariable","store","destination","source","i","assertBalance","metaEval","environment","alias","filename","sourceUrlBase","options","transpile","transform","code","e","SyntaxError","createKuid","executable","create","Function","wrapperSource","wrapperFileListed","__logSyntaxError","logSyntaxError","__parse","babelParser","wrapperParameters","concat","keys","wrapperFunction","constructor","environmentValues","k","wrapperArguments","loc","split","slice","l","join","replace","column","r","random","v","toString","DEBUG_SHOW_COMPILATION","ALLOW_ALIASING_OF_FIELDS","ALLOW_ALIASING_OF_EXPRESSIONS","CodeBuilder","compile","tempCounter","phiCounter","assignments","identities","temporariesPool","taken","vector","matrix","assign","output","name","sourceBody","context","group","log","groupEnd","functionExports","exports","register","builder","variable","id","references","push","lookup","type","variables","compare","x","nameit","istaken","indexOf","parent","isMatrix","index","dimensions","sqrt","row","floor","reference","canAlias","position","expression","assignment","before","splice","MAX_ELEMENTS_SIZE","accessors","foreach","get","bracketsMode","needsBrackets","defineProperty","Symbol","iterator","Array","ScalarVariable","VectorVariable","lengthOrFields","fields","FieldVariable","Apply","isNegative","positivefirst","vars","negative","sort","negateAtEnd","first","Reduction","Mapping","j","Output","dimensionsOrFields","m","call","arguments","existing","input","out_","in_","test","success","failure","isVector","statements","isDeclaring","declare","isLast","isDeclarationStart","isDeclarationStop","prefix","suffix","statement","aliases","createArray","createSource","createFunction","cloneSource","cloneFunction","decomposed","fromSource","fromFunction","averageFunction","iterable","n","add","scale","properties","operations","operationName","body","compiled","Vector2","y","fromValues","crossz","cross","perpendicular","scalePerpendicularAndAdd","angleBetween","angleBetweenWithDirections","rotate","theta","len","acos","aDirection","simpleAngle","linearDirection","sub","PI","angle","cos","s","sin","Vector3","z","ax","ay","az","bx","by","bz","atan2","Intersection","u","p","vec2","uIsDegenerate","vIsDegenerate","boundingBox","draw","Rectangle","corner","THICKNESS","pointToLineDistance","point","start","direction","perpendicularDirection","rayRayIntersections","det","bToA","dx","dy","lineLineIntersections","middle","lineRayIntersections","swapuv","rayLineIntersections","lineSegmentRayIntersections","ray","rayLineSegmentIntersections","potentials","lineLength","intersects","potential","lineSegmentLineSegmentIntersections","da","end","db","na","nb","orientation","sorted","q","getAlphaValueAtPosition","order","position1","position2","u1","v1","u2","v2","determinant","uTolerance","vTolerance","circleLineSegmentIntersections","circle","lineSegmentCircleIntersections","dp","center","cCenter","radius","cInner","cOuter","bb4acCenter","bb4acInner","bb4acOuter","s1Center","s2Center","s1Inner","s2Inner","s1Outer","s2Outer","s1","s2","solution1exists","solution2exists","solution1","solution2","AngleTheta","curveLineSegmentIntersections","curve","lineSegmentCurveIntersections","intersections","intersection","wedgeContainsPoint","circleCircleIntersections","c0","c1","r0","r1","d","dist","h","cx","cy","rx","ry","curveCurveIntersections","intersectionTypeLookup","intersectionTypeInstall","f","RAY","LINE","LINE_SEGMENT","CIRCLE","CURVE","intersect","RayTypeFunction","typeName","LineTypeFunction","LineSegmentTypeFunction","CircleTypeFunction","CurveTypeFunction","top","right","bottom","left","newRectangleCorner","origin","enumerable","getWidth","setWidth","getHeight","setHeight","getOrigin","setOrigin","getExtent","setExtent","getCorner","setCorner","containsPoint","translate","expand","width","height","offset","rectangle","stroke","Triangle","colinear","LineSegment","createProjection","project","midpoint","endDirection","subdivide","reverse","offsetPerpendicular","offsetPerpendicularLength","mapPerpendicular","roughlyContainsPoint","offsetOf","closestPointTo","positionOf","directionOf","vertices","uvs","clone","RectangleCorner","startToPoint","Intersections","offsetToRight","offsetA","offsetToRightA","offsetToRightB","multiplierAlongPath","startUV","endUV","Ray","Number","infinity","arrow","Line","rayOrMiddle","TIME_EPSILON","Infinity","SkeletonWavefront","processor","root","time","edge","wavefront","computeDirection","next","computeDirectionAndSpeed","computeCollapseEvent","computeSplitEvents","maximum","events","nextEvents","move","event","isValid","remove","process","description","wavefronts","Drawing2D","colour","visuals","spokes","removeWavefront","maxtime","testEvent","eventTime","old","collapseEvent","vertexEvents","delta","pather","Pather","moveTo","lineTo","path","dimmer","alpha","segment","SkeletonSplitEvent","vertex","projection","projectionToEdgePosition","previousEdge","bisector","lineDirection","edgeToEdgePosition","dir1","dir2","lengthAt","projected","projectBy","distance1","distance2","isAcute","futureEdge","futureVertex","_this","filter","ele","nextEdge","cut","style","legend","previous","moved","commitSkeletonVertex","twist1","isDegenerate","twist2","edgeVertex","cutVertex","wavefront0","wavefront1","previous0","previous1","next0","next1","length0","length1","endit","commitSkeletonSpoke","vec3","addWavefront","pair","SkeletonVertex","isFinite","beginning","isParallel","speed","previousLine","nextLine","amount","movementBy","SkeletonCollapseEvent","collapse","lastElementId","Chain","current","node","InnerEdge","OuterEdge","StartCapEdge","EndCapEdge","isInfinite","isClosed","createClosedPath","createOpenPath","segments","SkeletonEdge","second","edges","connect","side","isCap","startPosition","endPosition","previousDirection","sane","thisshouldnotbehappening","measuring","middle1","middle2","cutreverse","cutsegment","fontsize","textBaseline","textAlign","text","Curve","vChord","sign","chordLength","diff","rayStartToCenter","rayFromStartToCenter","rayHalfChordToCenter","rayFromHalfChordToCenter","angleSpan","createIfValid","undefined","vStartToCenter","pHalfChord","vHalfChord","vHalfChordToCenter","head","tail","rotationSign","centerToStart","centerToPoint","vEnd","tolerance","endToStart","dir","sign0","sign1","sign2","centerToEnd","directionAtPoint","angleAToPoint","angleBToPoint","DEBUG_CURVE_DISPLAY","Circle","arrowhead","desiredRadius","scaling","subdivisions","ceil","rotationMatrix","mat2","rotation","pointer","It","compose","chain","cycler","flattener","mapping","mapper","predicate","filterer","taker","dropper","size","windower","chunker","otherIterable","commoner","zipper","appender","step","initial","reducerer","firster","finder","item","haser","extremer","maxer","miner","aller","anyer","uniquer","emptyer","concatenation","createIteration","composition","cycle","seenValues","flatten","subIterable","take","drop","startIn","windows","window","shift","chunk","otherItems","Set","common","has","zip","done","append","reducedValue","find","extreme","bestMetric","best","rest","metric","negativeMapping","negativeMin","all","any","unique","empty","Path","isClockwise","aabb","segmentOffsets","startOffset","endOffset","firstSegmentToReplace","firstSegmentToReplaceIndex","lastSegmentToReplace","lastSegmentToReplaceIndex","segmentOffset","newSegments","newFirstSegment","unshift","newLastSegment","isLoop","values","segmentA","segmentB","eps","previousIntersectionPosition","foundSelfIntersection","intersectionPosition","nextSegmentIndex","otherSegment","offsetOnOtherSegment","o","intersectionInfos","offsetOfPreviousIntersection","directionOfPreviousIntersection","maxWeldDistance","longEnoughSegments","of","nextSegment","newEnd","isCurve","currentSegment","currentOffsetA","currentOffsetB","segmentLengthA","segmentLengthB","nextOffsetA","nextOffsetB","offsetAOnSegment","offsetBOnSegment","aSegments","bSegments","allIntersections","aSegment","bSegment","relativeIntersections","crossings","degenerate","alongRayLonger","returnInvalid","closestSegmentIndex","closestDistance","POSITIVE_INFINITY","closestOffset","closestInvalidOffset","closestInvalidSegmentIndex","closestPoint","noEndPoints","closestPointAtEndOfSegment","closestDistanceFromEndOfSegment","closestPointOnSegment","segmentWithPoint","segmentWithPointOffset","segmentToUse","minPointDistance","lastVertex","segmentVertices","pop","uv","DEBUG_DRAW_JOINTS","BinaryTypes","getByteSize","buffer","maxSize","fSize","writeFloatLE","nSegments","startX","readFloatLE","startY","directionX","directionY","endX","endY","MAX_VALUE","MIN_VALUE","bb","toPath","isCounterClockwise","curveTo","close","NoDirection","updateOrientation","DeadEdge","StraightSkeleton","waves","DEBUG_DRAW_INITIAL","DEBUG_DRAW_SKIPPED_EVENTS","DEBUG_DRAW_STEPS","DEBUG_DRAW_MOVE","DEBUG_DRAW_OBTUSE_EVENTS_EACH_STEP","startDirection","startNormal","endNormal","capWeight","caps","cap","initialise","DEBUG","debugprocess","commitWavefront","commitFullWavefront","dead","commit","spoke","Shape","contourPath","holes","contour","contains","union","difference","not","triangulate","area","grow","growWithSkeleton","otherShape","clipGrowthOffset","Clipper","validate","vec","isNaN","minVertexDistance","geometry","THREE","points","count","forEach","precision","zs","toFixed","triangulation","cdt2d","exterior","delaunay","points3D","key","warn","faces","ix","iy","iz","earcut","side1","side2","t","splittingBiRay","boxSize","box1","box2","results","shape","offsetContour","skeleton","Skeleton","module"],"mappings":"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"}